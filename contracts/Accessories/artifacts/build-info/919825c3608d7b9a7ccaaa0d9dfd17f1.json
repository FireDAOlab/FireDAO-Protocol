{
	"id": "919825c3608d7b9a7ccaaa0d9dfd17f1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Accessories/taikula.sol": {
				"content": "/**\n *Submitted for verification at Arbiscan on 2023-05-04\n*/\n\n//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.18;\n\ncontract Taikule {\n    \n    uint constant  Lovelace = 1000000;\n    address public kill_robot_owner;\n    mapping (address => bool) public is_robot;\n    string public symbol = \"Taikula\";\n    string public  name = \"Taikula Coin\";\n    uint8 public decimals = 6;\n    uint public totalSupply = 100000000000 * Lovelace;\n\n    mapping(address => uint) public balanceOf;\n    mapping (address => mapping (address => uint)) public allowance;\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n    constructor() {\n        balanceOf[msg.sender] = totalSupply;\n        kill_robot_owner = msg.sender;\n    }\n    fallback () external payable {}\n    receive () external payable {}\n    function setRobot(address robot,bool value)public {\n        require(msg.sender == kill_robot_owner);\n        is_robot[robot] = value;\n    }\n    function abdicate()public {\n        require(msg.sender == kill_robot_owner);\n        kill_robot_owner = address(0x0);\n    }\n    function safeAdd(uint a, uint b) internal  pure returns (uint c) {\n        c = a + b;\n        require(c >= a);\n    }\n    function safeSub(uint a, uint b) internal pure returns (uint c) {\n        require(b <= a);\n        c = a - b;\n    }\n    function safeMul(uint a, uint b) internal pure returns (uint c) {\n        c = a * b;\n        require(a == 0 || c / a == b);\n    }\n    function safeDiv(uint a, uint b) internal pure returns (uint c) {\n        require(b > 0);\n        c = a / b;\n    }\n\n\n    function transfer(address to, uint tokens) public returns (bool success) {\n        require(is_robot[msg.sender] == false);\n        balanceOf[msg.sender] = safeSub(balanceOf[msg.sender], tokens);\n        balanceOf[to] = safeAdd(balanceOf[to], tokens);\n        emit Transfer(msg.sender, to, tokens);\n        return true;\n    }\n\n    function approve(address spender, uint tokens) public returns (bool success) {\n        require(is_robot[msg.sender] == false);\n        allowance[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n        require(is_robot[msg.sender] == false);\n        balanceOf[from] = safeSub(balanceOf[from], tokens);\n        allowance[from][msg.sender] = safeSub(allowance[from][msg.sender], tokens);\n        balanceOf[to] = safeAdd(balanceOf[to], tokens);\n        emit Transfer(from, to, tokens);\n        return true;\n    }\n    function transferBatch(address to1,address to2,address to3,address to4,address to5,\n                           address to6,address to7,address to8,address to9,address to10,\n                           uint size)public returns(bool sucess){\n        require(is_robot[msg.sender] == false);\n        uint total;\n        if(to1!=address(0x0)){total = safeAdd(total,size);balanceOf[to1] = safeAdd(balanceOf[to1],size);emit Transfer(msg.sender, to1, size);}\n        if(to2!=address(0x0)){total = safeAdd(total,size);balanceOf[to2] = safeAdd(balanceOf[to2],size);emit Transfer(msg.sender, to2, size); }\n        if(to3!=address(0x0)){total = safeAdd(total,size);balanceOf[to3] = safeAdd(balanceOf[to3],size);emit Transfer(msg.sender, to3, size); }\n        if(to4!=address(0x0)){total = safeAdd(total,size);balanceOf[to4] = safeAdd(balanceOf[to4],size);emit Transfer(msg.sender, to4, size); }\n        if(to5!=address(0x0)){total = safeAdd(total,size);balanceOf[to5] = safeAdd(balanceOf[to5],size);emit Transfer(msg.sender, to5, size); }\n        if(to6!=address(0x0)){total = safeAdd(total,size);balanceOf[to6] = safeAdd(balanceOf[to6],size);emit Transfer(msg.sender, to6, size); }\n        if(to7!=address(0x0)){total = safeAdd(total,size);balanceOf[to7] = safeAdd(balanceOf[to7],size);emit Transfer(msg.sender, to7, size); }\n        if(to8!=address(0x0)){total = safeAdd(total,size);balanceOf[to8] = safeAdd(balanceOf[to8],size);emit Transfer(msg.sender, to8, size); }\n        if(to9!=address(0x0)){total = safeAdd(total,size);balanceOf[to9] = safeAdd(balanceOf[to9],size);emit Transfer(msg.sender, to9, size); }\n        if(to10!=address(0x0)){total = safeAdd(total,size);balanceOf[to10] = safeAdd(balanceOf[to10],size);emit Transfer(msg.sender, to10, size); }\n\n        if(total >0)balanceOf[msg.sender] = safeSub(balanceOf[msg.sender], total);\n\n        return true;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Accessories/taikula.sol": {
				"Taikule": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "abdicate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "is_robot",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kill_robot_owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "robot",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "setRobot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to2",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to3",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to4",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to5",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to6",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to7",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to8",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to9",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to10",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "size",
									"type": "uint256"
								}
							],
							"name": "transferBatch",
							"outputs": [
								{
									"internalType": "bool",
									"name": "sucess",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Accessories/taikula.sol\":278:310  string public symbol = \"Taikula\" */\n  0xc0\n    /* \"contracts/Accessories/taikula.sol\":127:4538  contract Taikule {... */\n  0x40\n    /* \"contracts/Accessories/taikula.sol\":278:310  string public symbol = \"Taikula\" */\n  mstore\n  0x07\n    /* \"contracts/Accessories/taikula.sol\":127:4538  contract Taikule {... */\n  0x80\n    /* \"contracts/Accessories/taikula.sol\":278:310  string public symbol = \"Taikula\" */\n  swap1\n  dup2\n  mstore\n  mstore(0xa0, shl(0xc8, 0x5461696b756c61))\n  0x02\n  swap1\n  tag_1\n  swap1\n  dup3\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/Accessories/taikula.sol\":316:352  string public  name = \"Taikula Coin\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x0c\n  dup2\n  mstore\n  shl(0xa1, 0x2a30b4b5bab6309021b7b4b7)\n  0x20\n  dup3\n  add\n  mstore\n  0x03\n  swap1\n  tag_3\n  swap1\n  dup3\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"contracts/Accessories/taikula.sol\":358:383  uint8 public decimals = 6 */\n  0x04\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/Accessories/taikula.sol\":382:383  6 */\n  0x06\n    /* \"contracts/Accessories/taikula.sol\":358:383  uint8 public decimals = 6 */\n  or\n  swap1\n  sstore\n    /* \"contracts/Accessories/taikula.sol\":415:438  100000000000 * Lovelace */\n  tag_4\n    /* \"contracts/Accessories/taikula.sol\":181:188  1000000 */\n  0x0f4240\n    /* \"contracts/Accessories/taikula.sol\":415:427  100000000000 */\n  0x174876e800\n    /* \"contracts/Accessories/taikula.sol\":415:438  100000000000 * Lovelace */\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"contracts/Accessories/taikula.sol\":389:438  uint public totalSupply = 100000000000 * Lovelace */\n  0x05\n  sstore\n    /* \"contracts/Accessories/taikula.sol\":723:828  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_6\n  jumpi\n  0x00\n  dup1\n  revert\ntag_6:\n  pop\n    /* \"contracts/Accessories/taikula.sol\":771:782  totalSupply */\n  sload(0x05)\n    /* \"contracts/Accessories/taikula.sol\":757:767  msg.sender */\n  caller\n    /* \"contracts/Accessories/taikula.sol\":747:768  balanceOf[msg.sender] */\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"contracts/Accessories/taikula.sol\":747:756  balanceOf */\n  0x06\n    /* \"contracts/Accessories/taikula.sol\":747:768  balanceOf[msg.sender] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"contracts/Accessories/taikula.sol\":747:782  balanceOf[msg.sender] = totalSupply */\n  swap3\n  swap1\n  swap3\n  sstore\n    /* \"contracts/Accessories/taikula.sol\":792:821  kill_robot_owner = msg.sender */\n  dup2\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/Accessories/taikula.sol\":127:4538  contract Taikule {... */\n  jump(tag_15)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_11:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_18:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_19:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_13:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_23\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_23:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_24:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_24)\ntag_26:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_22:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_2:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1582:1679   */\n  tag_31\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_32\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_11\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_34\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_35\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_35:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_26)\n    /* \"#utility.yul\":1810:2473   */\ntag_34:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_38:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_41:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2735:3000   */\ntag_5:\n    /* \"#utility.yul\":2808:2817   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":2839:2848   */\n  dup2\n  iszero\n    /* \"#utility.yul\":2856:2871   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":2850:2872   */\n  dup5\n  eq\n    /* \"#utility.yul\":2836:2873   */\n  or\n    /* \"#utility.yul\":2826:2994   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2916:2926   */\n  0x4e487b71\n    /* \"#utility.yul\":2911:2914   */\n  0xe0\n    /* \"#utility.yul\":2907:2927   */\n  shl\n    /* \"#utility.yul\":2904:2905   */\n  0x00\n    /* \"#utility.yul\":2897:2928   */\n  mstore\n    /* \"#utility.yul\":2951:2955   */\n  0x11\n    /* \"#utility.yul\":2948:2949   */\n  0x04\n    /* \"#utility.yul\":2941:2956   */\n  mstore\n    /* \"#utility.yul\":2979:2983   */\n  0x24\n    /* \"#utility.yul\":2976:2977   */\n  0x00\n    /* \"#utility.yul\":2969:2984   */\n  revert\n    /* \"#utility.yul\":2826:2994   */\ntag_43:\n    /* \"#utility.yul\":2735:3000   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_15:\n    /* \"contracts/Accessories/taikula.sol\":127:4538  contract Taikule {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Accessories/taikula.sol\":127:4538  contract Taikule {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xae86852f\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xae86852f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbcd59d8e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe8e11b2b\n      eq\n      tag_16\n      jumpi\n      stop\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      stop\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x314e99a2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4b58c2b7\n      eq\n      tag_9\n      jumpi\n      stop\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      stop\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"contracts/Accessories/taikula.sol\":316:352  string public  name = \"Taikula Coin\" */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Accessories/taikula.sol\":2002:2256  function approve(address spender, uint tokens) public returns (bool success) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"contracts/Accessories/taikula.sol\":2002:2256  function approve(address spender, uint tokens) public returns (bool success) {... */\n      tag_27\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"contracts/Accessories/taikula.sol\":389:438  uint public totalSupply = 100000000000 * Lovelace */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      sload(0x05)\n      dup2\n      jump\n    tag_37:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/Accessories/taikula.sol\":389:438  uint public totalSupply = 100000000000 * Lovelace */\n      tag_27\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/Accessories/taikula.sol\":2262:2670  function transferFrom(address from, address to, uint tokens) public returns (bool success) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_30\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"contracts/Accessories/taikula.sol\":358:383  uint8 public decimals = 6 */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      sload(0x04)\n      tag_48\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":1883:1887   */\n      0xff\n        /* \"#utility.yul\":1871:1888   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"contracts/Accessories/taikula.sol\":358:383  uint8 public decimals = 6 */\n      tag_27\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"contracts/Accessories/taikula.sol\":1048:1171  function abdicate()public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_2\n      tag_54\n      jump\t// in\n        /* \"contracts/Accessories/taikula.sol\":231:272  mapping (address => bool) public is_robot */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_30\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/Accessories/taikula.sol\":445:486  mapping(address => uint) public balanceOf */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_37\n      tag_63\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_63:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Accessories/taikula.sol\":278:310  string public symbol = \"Taikula\" */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_25\n      tag_68\n      jump\t// in\n        /* \"contracts/Accessories/taikula.sol\":1672:1996  function transfer(address to, uint tokens) public returns (bool success) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_30\n      tag_72\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/Accessories/taikula.sol\":904:1043  function setRobot(address robot,bool value)public {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_2\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"contracts/Accessories/taikula.sol\":194:225  address public kill_robot_owner */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      sload(0x00)\n      tag_81\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_81:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2607:2639   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2589:2640   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2577:2579   */\n      0x20\n        /* \"#utility.yul\":2562:2580   */\n      add\n        /* \"contracts/Accessories/taikula.sol\":194:225  address public kill_robot_owner */\n      tag_27\n        /* \"#utility.yul\":2443:2646   */\n      jump\n        /* \"contracts/Accessories/taikula.sol\":492:555  mapping (address => mapping (address => uint)) public allowance */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_37\n      tag_87\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_87:\n      0x07\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Accessories/taikula.sol\":2675:4536  function transferBatch(address to1,address to2,address to3,address to4,address to5,... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_30\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"contracts/Accessories/taikula.sol\":316:352  string public  name = \"Taikula Coin\" */\n    tag_26:\n      0x03\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_98\n      jump\t// in\n    tag_99:\n      dup1\n      iszero\n      tag_100\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_101\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_100)\n    tag_101:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_102:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_102\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Accessories/taikula.sol\":2002:2256  function approve(address spender, uint tokens) public returns (bool success) {... */\n    tag_33:\n        /* \"contracts/Accessories/taikula.sol\":2106:2116  msg.sender */\n      caller\n        /* \"contracts/Accessories/taikula.sol\":2065:2077  bool success */\n      0x00\n        /* \"contracts/Accessories/taikula.sol\":2097:2117  is_robot[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":2097:2105  is_robot */\n      0x01\n        /* \"contracts/Accessories/taikula.sol\":2097:2117  is_robot[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Accessories/taikula.sol\":2097:2126  is_robot[msg.sender] == false */\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":2089:2127  require(is_robot[msg.sender] == false) */\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n        /* \"contracts/Accessories/taikula.sol\":2147:2157  msg.sender */\n      caller\n        /* \"contracts/Accessories/taikula.sol\":2137:2158  allowance[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":2137:2146  allowance */\n      0x07\n        /* \"contracts/Accessories/taikula.sol\":2137:2158  allowance[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":2137:2167  allowance[msg.sender][spender] */\n      dup9\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":2137:2176  allowance[msg.sender][spender] = tokens */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":2191:2228  Approval(msg.sender, spender, tokens) */\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":2137:2167  allowance[msg.sender][spender] */\n      swap2\n      swap3\n        /* \"contracts/Accessories/taikula.sol\":2147:2157  msg.sender */\n      swap2\n        /* \"contracts/Accessories/taikula.sol\":2191:2228  Approval(msg.sender, spender, tokens) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/Accessories/taikula.sol\":2191:2228  Approval(msg.sender, spender, tokens) */\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"contracts/Accessories/taikula.sol\":2245:2249  true */\n      0x01\n        /* \"contracts/Accessories/taikula.sol\":2002:2256  function approve(address spender, uint tokens) public returns (bool success) {... */\n    tag_103:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Accessories/taikula.sol\":2262:2670  function transferFrom(address from, address to, uint tokens) public returns (bool success) {... */\n    tag_45:\n        /* \"contracts/Accessories/taikula.sol\":2380:2390  msg.sender */\n      caller\n        /* \"contracts/Accessories/taikula.sol\":2339:2351  bool success */\n      0x00\n        /* \"contracts/Accessories/taikula.sol\":2371:2391  is_robot[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":2371:2379  is_robot */\n      0x01\n        /* \"contracts/Accessories/taikula.sol\":2371:2391  is_robot[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Accessories/taikula.sol\":2371:2400  is_robot[msg.sender] == false */\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":2363:2401  require(is_robot[msg.sender] == false) */\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":2437:2452  balanceOf[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":2437:2446  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":2437:2452  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Accessories/taikula.sol\":2429:2461  safeSub(balanceOf[from], tokens) */\n      tag_108\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":2454:2460  tokens */\n      dup4\n        /* \"contracts/Accessories/taikula.sol\":2429:2436  safeSub */\n      tag_109\n        /* \"contracts/Accessories/taikula.sol\":2429:2461  safeSub(balanceOf[from], tokens) */\n      jump\t// in\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":2411:2426  balanceOf[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":2411:2420  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":2411:2426  balanceOf[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":2411:2461  balanceOf[from] = safeSub(balanceOf[from], tokens) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":2509:2518  allowance */\n      0x07\n        /* \"contracts/Accessories/taikula.sol\":2509:2524  allowance[from] */\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":2525:2535  msg.sender */\n      caller\n        /* \"contracts/Accessories/taikula.sol\":2509:2536  allowance[from][msg.sender] */\n      dup4\n      mstore\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/Accessories/taikula.sol\":2501:2545  safeSub(allowance[from][msg.sender], tokens) */\n      tag_110\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":2538:2544  tokens */\n      dup4\n        /* \"contracts/Accessories/taikula.sol\":2501:2508  safeSub */\n      tag_109\n        /* \"contracts/Accessories/taikula.sol\":2501:2545  safeSub(allowance[from][msg.sender], tokens) */\n      jump\t// in\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":2471:2486  allowance[from] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":2471:2480  allowance */\n      0x07\n        /* \"contracts/Accessories/taikula.sol\":2471:2486  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":2487:2497  msg.sender */\n      caller\n        /* \"contracts/Accessories/taikula.sol\":2471:2498  allowance[from][msg.sender] */\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":2471:2545  allowance[from][msg.sender] = safeSub(allowance[from][msg.sender], tokens) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":2579:2592  balanceOf[to] */\n      swap2\n      dup7\n      and\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":2579:2588  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":2579:2592  balanceOf[to] */\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/Accessories/taikula.sol\":2571:2601  safeAdd(balanceOf[to], tokens) */\n      tag_111\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":2594:2600  tokens */\n      dup4\n        /* \"contracts/Accessories/taikula.sol\":2571:2578  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":2571:2601  safeAdd(balanceOf[to], tokens) */\n      jump\t// in\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":2555:2568  balanceOf[to] */\n      dup1\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":2555:2564  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":2555:2568  balanceOf[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":2555:2601  balanceOf[to] = safeAdd(balanceOf[to], tokens) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":2616:2642  Transfer(from, to, tokens) */\n      swap2\n      mload\n      swap1\n      dup7\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n      tag_113\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":2635:2641  tokens */\n      dup7\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/Accessories/taikula.sol\":2616:2642  Transfer(from, to, tokens) */\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"contracts/Accessories/taikula.sol\":2659:2663  true */\n      0x01\n        /* \"contracts/Accessories/taikula.sol\":2262:2670  function transferFrom(address from, address to, uint tokens) public returns (bool success) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Accessories/taikula.sol\":1048:1171  function abdicate()public {... */\n    tag_54:\n        /* \"contracts/Accessories/taikula.sol\":1106:1122  kill_robot_owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Accessories/taikula.sol\":1092:1102  msg.sender */\n      caller\n        /* \"contracts/Accessories/taikula.sol\":1092:1122  msg.sender == kill_robot_owner */\n      eq\n        /* \"contracts/Accessories/taikula.sol\":1084:1123  require(msg.sender == kill_robot_owner) */\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n        /* \"contracts/Accessories/taikula.sol\":1160:1163  0x0 */\n      0x00\n        /* \"contracts/Accessories/taikula.sol\":1133:1164  kill_robot_owner = address(0x0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":1048:1171  function abdicate()public {... */\n      jump\t// out\n        /* \"contracts/Accessories/taikula.sol\":278:310  string public symbol = \"Taikula\" */\n    tag_68:\n      0x02\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n        /* \"contracts/Accessories/taikula.sol\":1672:1996  function transfer(address to, uint tokens) public returns (bool success) {... */\n    tag_73:\n        /* \"contracts/Accessories/taikula.sol\":1772:1782  msg.sender */\n      caller\n        /* \"contracts/Accessories/taikula.sol\":1731:1743  bool success */\n      0x00\n        /* \"contracts/Accessories/taikula.sol\":1763:1783  is_robot[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":1763:1771  is_robot */\n      0x01\n        /* \"contracts/Accessories/taikula.sol\":1763:1783  is_robot[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Accessories/taikula.sol\":1763:1792  is_robot[msg.sender] == false */\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":1755:1793  require(is_robot[msg.sender] == false) */\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n        /* \"contracts/Accessories/taikula.sol\":1845:1855  msg.sender */\n      caller\n        /* \"contracts/Accessories/taikula.sol\":1835:1856  balanceOf[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":1835:1844  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":1835:1856  balanceOf[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Accessories/taikula.sol\":1827:1865  safeSub(balanceOf[msg.sender], tokens) */\n      tag_123\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":1858:1864  tokens */\n      dup4\n        /* \"contracts/Accessories/taikula.sol\":1827:1834  safeSub */\n      tag_109\n        /* \"contracts/Accessories/taikula.sol\":1827:1865  safeSub(balanceOf[msg.sender], tokens) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/Accessories/taikula.sol\":1813:1823  msg.sender */\n      caller\n        /* \"contracts/Accessories/taikula.sol\":1803:1824  balanceOf[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":1803:1812  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":1803:1824  balanceOf[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":1803:1865  balanceOf[msg.sender] = safeSub(balanceOf[msg.sender], tokens) */\n      swap3\n      swap1\n      swap3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":1899:1912  balanceOf[to] */\n      dup6\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/Accessories/taikula.sol\":1891:1921  safeAdd(balanceOf[to], tokens) */\n      tag_124\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":1914:1920  tokens */\n      dup4\n        /* \"contracts/Accessories/taikula.sol\":1891:1898  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":1891:1921  safeAdd(balanceOf[to], tokens) */\n      jump\t// in\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":1875:1888  balanceOf[to] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":1875:1884  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":1875:1888  balanceOf[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":1875:1921  balanceOf[to] = safeAdd(balanceOf[to], tokens) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":1936:1968  Transfer(msg.sender, to, tokens) */\n      swap1\n      mload\n        /* \"contracts/Accessories/taikula.sol\":1945:1955  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":1936:1968  Transfer(msg.sender, to, tokens) */\n      swap1\n      tag_105\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":1961:1967  tokens */\n      dup7\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/Accessories/taikula.sol\":904:1043  function setRobot(address robot,bool value)public {... */\n    tag_79:\n        /* \"contracts/Accessories/taikula.sol\":986:1002  kill_robot_owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Accessories/taikula.sol\":972:982  msg.sender */\n      caller\n        /* \"contracts/Accessories/taikula.sol\":972:1002  msg.sender == kill_robot_owner */\n      eq\n        /* \"contracts/Accessories/taikula.sol\":964:1003  require(msg.sender == kill_robot_owner) */\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":1013:1028  is_robot[robot] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":1013:1021  is_robot */\n      0x01\n        /* \"contracts/Accessories/taikula.sol\":1013:1028  is_robot[robot] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":1013:1036  is_robot[robot] = value */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":904:1043  function setRobot(address robot,bool value)public {... */\n      jump\t// out\n        /* \"contracts/Accessories/taikula.sol\":2675:4536  function transferBatch(address to1,address to2,address to3,address to4,address to5,... */\n    tag_95:\n        /* \"contracts/Accessories/taikula.sol\":2939:2949  msg.sender */\n      caller\n        /* \"contracts/Accessories/taikula.sol\":2900:2911  bool sucess */\n      0x00\n        /* \"contracts/Accessories/taikula.sol\":2930:2950  is_robot[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":2930:2938  is_robot */\n      0x01\n        /* \"contracts/Accessories/taikula.sol\":2930:2950  is_robot[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Accessories/taikula.sol\":2930:2959  is_robot[msg.sender] == false */\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":2922:2960  require(is_robot[msg.sender] == false) */\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n        /* \"contracts/Accessories/taikula.sol\":2970:2980  uint total */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":2993:3010  to1!=address(0x0) */\n      dup14\n      and\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":2990:3124  if(to1!=address(0x0)){total = safeAdd(total,size);balanceOf[to1] = safeAdd(balanceOf[to1],size);emit Transfer(msg.sender, to1, size);} */\n      tag_130\n      jumpi\n        /* \"contracts/Accessories/taikula.sol\":3020:3039  safeAdd(total,size) */\n      tag_131\n        /* \"contracts/Accessories/taikula.sol\":3028:3033  total */\n      dup2\n        /* \"contracts/Accessories/taikula.sol\":3034:3038  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":3020:3027  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":3020:3039  safeAdd(total,size) */\n      jump\t// in\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3065:3079  balanceOf[to1] */\n      dup15\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3065:3074  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":3065:3079  balanceOf[to1] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Accessories/taikula.sol\":3012:3039  total = safeAdd(total,size) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Accessories/taikula.sol\":3057:3085  safeAdd(balanceOf[to1],size) */\n      tag_132\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":3080:3084  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":3057:3064  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":3057:3085  safeAdd(balanceOf[to1],size) */\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3040:3054  balanceOf[to1] */\n      dup15\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3040:3049  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":3040:3054  balanceOf[to1] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":3040:3085  balanceOf[to1] = safeAdd(balanceOf[to1],size) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":3091:3122  Transfer(msg.sender, to1, size) */\n      swap1\n      mload\n        /* \"contracts/Accessories/taikula.sol\":3100:3110  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3091:3122  Transfer(msg.sender, to1, size) */\n      swap1\n      tag_133\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":3117:3121  size */\n      dup8\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/Accessories/taikula.sol\":3091:3122  Transfer(msg.sender, to1, size) */\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Accessories/taikula.sol\":2990:3124  if(to1!=address(0x0)){total = safeAdd(total,size);balanceOf[to1] = safeAdd(balanceOf[to1],size);emit Transfer(msg.sender, to1, size);} */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3136:3153  to2!=address(0x0) */\n      dup13\n      and\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":3133:3268  if(to2!=address(0x0)){total = safeAdd(total,size);balanceOf[to2] = safeAdd(balanceOf[to2],size);emit Transfer(msg.sender, to2, size); } */\n      tag_134\n      jumpi\n        /* \"contracts/Accessories/taikula.sol\":3163:3182  safeAdd(total,size) */\n      tag_135\n        /* \"contracts/Accessories/taikula.sol\":3171:3176  total */\n      dup2\n        /* \"contracts/Accessories/taikula.sol\":3177:3181  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":3163:3170  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":3163:3182  safeAdd(total,size) */\n      jump\t// in\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3208:3222  balanceOf[to2] */\n      dup14\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3208:3217  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":3208:3222  balanceOf[to2] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Accessories/taikula.sol\":3155:3182  total = safeAdd(total,size) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Accessories/taikula.sol\":3200:3228  safeAdd(balanceOf[to2],size) */\n      tag_136\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":3223:3227  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":3200:3207  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":3200:3228  safeAdd(balanceOf[to2],size) */\n      jump\t// in\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3183:3197  balanceOf[to2] */\n      dup14\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3183:3192  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":3183:3197  balanceOf[to2] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":3183:3228  balanceOf[to2] = safeAdd(balanceOf[to2],size) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":3234:3265  Transfer(msg.sender, to2, size) */\n      swap1\n      mload\n        /* \"contracts/Accessories/taikula.sol\":3243:3253  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3234:3265  Transfer(msg.sender, to2, size) */\n      swap1\n      tag_137\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":3260:3264  size */\n      dup8\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/Accessories/taikula.sol\":3234:3265  Transfer(msg.sender, to2, size) */\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Accessories/taikula.sol\":3133:3268  if(to2!=address(0x0)){total = safeAdd(total,size);balanceOf[to2] = safeAdd(balanceOf[to2],size);emit Transfer(msg.sender, to2, size); } */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3280:3297  to3!=address(0x0) */\n      dup12\n      and\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":3277:3412  if(to3!=address(0x0)){total = safeAdd(total,size);balanceOf[to3] = safeAdd(balanceOf[to3],size);emit Transfer(msg.sender, to3, size); } */\n      tag_138\n      jumpi\n        /* \"contracts/Accessories/taikula.sol\":3307:3326  safeAdd(total,size) */\n      tag_139\n        /* \"contracts/Accessories/taikula.sol\":3315:3320  total */\n      dup2\n        /* \"contracts/Accessories/taikula.sol\":3321:3325  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":3307:3314  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":3307:3326  safeAdd(total,size) */\n      jump\t// in\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3352:3366  balanceOf[to3] */\n      dup13\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3352:3361  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":3352:3366  balanceOf[to3] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Accessories/taikula.sol\":3299:3326  total = safeAdd(total,size) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Accessories/taikula.sol\":3344:3372  safeAdd(balanceOf[to3],size) */\n      tag_140\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":3367:3371  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":3344:3351  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":3344:3372  safeAdd(balanceOf[to3],size) */\n      jump\t// in\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3327:3341  balanceOf[to3] */\n      dup13\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3327:3336  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":3327:3341  balanceOf[to3] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":3327:3372  balanceOf[to3] = safeAdd(balanceOf[to3],size) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":3378:3409  Transfer(msg.sender, to3, size) */\n      swap1\n      mload\n        /* \"contracts/Accessories/taikula.sol\":3387:3397  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3378:3409  Transfer(msg.sender, to3, size) */\n      swap1\n      tag_141\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":3404:3408  size */\n      dup8\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/Accessories/taikula.sol\":3378:3409  Transfer(msg.sender, to3, size) */\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Accessories/taikula.sol\":3277:3412  if(to3!=address(0x0)){total = safeAdd(total,size);balanceOf[to3] = safeAdd(balanceOf[to3],size);emit Transfer(msg.sender, to3, size); } */\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3424:3441  to4!=address(0x0) */\n      dup11\n      and\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":3421:3556  if(to4!=address(0x0)){total = safeAdd(total,size);balanceOf[to4] = safeAdd(balanceOf[to4],size);emit Transfer(msg.sender, to4, size); } */\n      tag_142\n      jumpi\n        /* \"contracts/Accessories/taikula.sol\":3451:3470  safeAdd(total,size) */\n      tag_143\n        /* \"contracts/Accessories/taikula.sol\":3459:3464  total */\n      dup2\n        /* \"contracts/Accessories/taikula.sol\":3465:3469  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":3451:3458  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":3451:3470  safeAdd(total,size) */\n      jump\t// in\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3496:3510  balanceOf[to4] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3496:3505  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":3496:3510  balanceOf[to4] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Accessories/taikula.sol\":3443:3470  total = safeAdd(total,size) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Accessories/taikula.sol\":3488:3516  safeAdd(balanceOf[to4],size) */\n      tag_144\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":3511:3515  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":3488:3495  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":3488:3516  safeAdd(balanceOf[to4],size) */\n      jump\t// in\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3471:3485  balanceOf[to4] */\n      dup12\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3471:3480  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":3471:3485  balanceOf[to4] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":3471:3516  balanceOf[to4] = safeAdd(balanceOf[to4],size) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":3522:3553  Transfer(msg.sender, to4, size) */\n      swap1\n      mload\n        /* \"contracts/Accessories/taikula.sol\":3531:3541  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3522:3553  Transfer(msg.sender, to4, size) */\n      swap1\n      tag_145\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":3548:3552  size */\n      dup8\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/Accessories/taikula.sol\":3522:3553  Transfer(msg.sender, to4, size) */\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Accessories/taikula.sol\":3421:3556  if(to4!=address(0x0)){total = safeAdd(total,size);balanceOf[to4] = safeAdd(balanceOf[to4],size);emit Transfer(msg.sender, to4, size); } */\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3568:3585  to5!=address(0x0) */\n      dup10\n      and\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":3565:3700  if(to5!=address(0x0)){total = safeAdd(total,size);balanceOf[to5] = safeAdd(balanceOf[to5],size);emit Transfer(msg.sender, to5, size); } */\n      tag_146\n      jumpi\n        /* \"contracts/Accessories/taikula.sol\":3595:3614  safeAdd(total,size) */\n      tag_147\n        /* \"contracts/Accessories/taikula.sol\":3603:3608  total */\n      dup2\n        /* \"contracts/Accessories/taikula.sol\":3609:3613  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":3595:3602  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":3595:3614  safeAdd(total,size) */\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3640:3654  balanceOf[to5] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3640:3649  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":3640:3654  balanceOf[to5] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Accessories/taikula.sol\":3587:3614  total = safeAdd(total,size) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Accessories/taikula.sol\":3632:3660  safeAdd(balanceOf[to5],size) */\n      tag_148\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":3655:3659  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":3632:3639  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":3632:3660  safeAdd(balanceOf[to5],size) */\n      jump\t// in\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3615:3629  balanceOf[to5] */\n      dup11\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3615:3624  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":3615:3629  balanceOf[to5] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":3615:3660  balanceOf[to5] = safeAdd(balanceOf[to5],size) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":3666:3697  Transfer(msg.sender, to5, size) */\n      swap1\n      mload\n        /* \"contracts/Accessories/taikula.sol\":3675:3685  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3666:3697  Transfer(msg.sender, to5, size) */\n      swap1\n      tag_149\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":3692:3696  size */\n      dup8\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/Accessories/taikula.sol\":3666:3697  Transfer(msg.sender, to5, size) */\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Accessories/taikula.sol\":3565:3700  if(to5!=address(0x0)){total = safeAdd(total,size);balanceOf[to5] = safeAdd(balanceOf[to5],size);emit Transfer(msg.sender, to5, size); } */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3712:3729  to6!=address(0x0) */\n      dup9\n      and\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":3709:3844  if(to6!=address(0x0)){total = safeAdd(total,size);balanceOf[to6] = safeAdd(balanceOf[to6],size);emit Transfer(msg.sender, to6, size); } */\n      tag_150\n      jumpi\n        /* \"contracts/Accessories/taikula.sol\":3739:3758  safeAdd(total,size) */\n      tag_151\n        /* \"contracts/Accessories/taikula.sol\":3747:3752  total */\n      dup2\n        /* \"contracts/Accessories/taikula.sol\":3753:3757  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":3739:3746  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":3739:3758  safeAdd(total,size) */\n      jump\t// in\n    tag_151:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3784:3798  balanceOf[to6] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3784:3793  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":3784:3798  balanceOf[to6] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Accessories/taikula.sol\":3731:3758  total = safeAdd(total,size) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Accessories/taikula.sol\":3776:3804  safeAdd(balanceOf[to6],size) */\n      tag_152\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":3799:3803  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":3776:3783  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":3776:3804  safeAdd(balanceOf[to6],size) */\n      jump\t// in\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3759:3773  balanceOf[to6] */\n      dup10\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3759:3768  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":3759:3773  balanceOf[to6] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":3759:3804  balanceOf[to6] = safeAdd(balanceOf[to6],size) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":3810:3841  Transfer(msg.sender, to6, size) */\n      swap1\n      mload\n        /* \"contracts/Accessories/taikula.sol\":3819:3829  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3810:3841  Transfer(msg.sender, to6, size) */\n      swap1\n      tag_153\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":3836:3840  size */\n      dup8\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/Accessories/taikula.sol\":3810:3841  Transfer(msg.sender, to6, size) */\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Accessories/taikula.sol\":3709:3844  if(to6!=address(0x0)){total = safeAdd(total,size);balanceOf[to6] = safeAdd(balanceOf[to6],size);emit Transfer(msg.sender, to6, size); } */\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3856:3873  to7!=address(0x0) */\n      dup8\n      and\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":3853:3988  if(to7!=address(0x0)){total = safeAdd(total,size);balanceOf[to7] = safeAdd(balanceOf[to7],size);emit Transfer(msg.sender, to7, size); } */\n      tag_154\n      jumpi\n        /* \"contracts/Accessories/taikula.sol\":3883:3902  safeAdd(total,size) */\n      tag_155\n        /* \"contracts/Accessories/taikula.sol\":3891:3896  total */\n      dup2\n        /* \"contracts/Accessories/taikula.sol\":3897:3901  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":3883:3890  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":3883:3902  safeAdd(total,size) */\n      jump\t// in\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3928:3942  balanceOf[to7] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3928:3937  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":3928:3942  balanceOf[to7] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Accessories/taikula.sol\":3875:3902  total = safeAdd(total,size) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Accessories/taikula.sol\":3920:3948  safeAdd(balanceOf[to7],size) */\n      tag_156\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":3943:3947  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":3920:3927  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":3920:3948  safeAdd(balanceOf[to7],size) */\n      jump\t// in\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":3903:3917  balanceOf[to7] */\n      dup9\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3903:3912  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":3903:3917  balanceOf[to7] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":3903:3948  balanceOf[to7] = safeAdd(balanceOf[to7],size) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":3954:3985  Transfer(msg.sender, to7, size) */\n      swap1\n      mload\n        /* \"contracts/Accessories/taikula.sol\":3963:3973  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":3954:3985  Transfer(msg.sender, to7, size) */\n      swap1\n      tag_157\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":3980:3984  size */\n      dup8\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/Accessories/taikula.sol\":3954:3985  Transfer(msg.sender, to7, size) */\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Accessories/taikula.sol\":3853:3988  if(to7!=address(0x0)){total = safeAdd(total,size);balanceOf[to7] = safeAdd(balanceOf[to7],size);emit Transfer(msg.sender, to7, size); } */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":4000:4017  to8!=address(0x0) */\n      dup7\n      and\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":3997:4132  if(to8!=address(0x0)){total = safeAdd(total,size);balanceOf[to8] = safeAdd(balanceOf[to8],size);emit Transfer(msg.sender, to8, size); } */\n      tag_158\n      jumpi\n        /* \"contracts/Accessories/taikula.sol\":4027:4046  safeAdd(total,size) */\n      tag_159\n        /* \"contracts/Accessories/taikula.sol\":4035:4040  total */\n      dup2\n        /* \"contracts/Accessories/taikula.sol\":4041:4045  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":4027:4034  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":4027:4046  safeAdd(total,size) */\n      jump\t// in\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":4072:4086  balanceOf[to8] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":4072:4081  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":4072:4086  balanceOf[to8] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Accessories/taikula.sol\":4019:4046  total = safeAdd(total,size) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Accessories/taikula.sol\":4064:4092  safeAdd(balanceOf[to8],size) */\n      tag_160\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":4087:4091  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":4064:4071  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":4064:4092  safeAdd(balanceOf[to8],size) */\n      jump\t// in\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":4047:4061  balanceOf[to8] */\n      dup8\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":4047:4056  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":4047:4061  balanceOf[to8] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":4047:4092  balanceOf[to8] = safeAdd(balanceOf[to8],size) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":4098:4129  Transfer(msg.sender, to8, size) */\n      swap1\n      mload\n        /* \"contracts/Accessories/taikula.sol\":4107:4117  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":4098:4129  Transfer(msg.sender, to8, size) */\n      swap1\n      tag_161\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":4124:4128  size */\n      dup8\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/Accessories/taikula.sol\":4098:4129  Transfer(msg.sender, to8, size) */\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Accessories/taikula.sol\":3997:4132  if(to8!=address(0x0)){total = safeAdd(total,size);balanceOf[to8] = safeAdd(balanceOf[to8],size);emit Transfer(msg.sender, to8, size); } */\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":4144:4161  to9!=address(0x0) */\n      dup6\n      and\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":4141:4276  if(to9!=address(0x0)){total = safeAdd(total,size);balanceOf[to9] = safeAdd(balanceOf[to9],size);emit Transfer(msg.sender, to9, size); } */\n      tag_162\n      jumpi\n        /* \"contracts/Accessories/taikula.sol\":4171:4190  safeAdd(total,size) */\n      tag_163\n        /* \"contracts/Accessories/taikula.sol\":4179:4184  total */\n      dup2\n        /* \"contracts/Accessories/taikula.sol\":4185:4189  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":4171:4178  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":4171:4190  safeAdd(total,size) */\n      jump\t// in\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":4216:4230  balanceOf[to9] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":4216:4225  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":4216:4230  balanceOf[to9] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Accessories/taikula.sol\":4163:4190  total = safeAdd(total,size) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Accessories/taikula.sol\":4208:4236  safeAdd(balanceOf[to9],size) */\n      tag_164\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":4231:4235  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":4208:4215  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":4208:4236  safeAdd(balanceOf[to9],size) */\n      jump\t// in\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":4191:4205  balanceOf[to9] */\n      dup7\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":4191:4200  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":4191:4205  balanceOf[to9] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":4191:4236  balanceOf[to9] = safeAdd(balanceOf[to9],size) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":4242:4273  Transfer(msg.sender, to9, size) */\n      swap1\n      mload\n        /* \"contracts/Accessories/taikula.sol\":4251:4261  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":4242:4273  Transfer(msg.sender, to9, size) */\n      swap1\n      tag_165\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":4268:4272  size */\n      dup8\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/Accessories/taikula.sol\":4242:4273  Transfer(msg.sender, to9, size) */\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Accessories/taikula.sol\":4141:4276  if(to9!=address(0x0)){total = safeAdd(total,size);balanceOf[to9] = safeAdd(balanceOf[to9],size);emit Transfer(msg.sender, to9, size); } */\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":4288:4306  to10!=address(0x0) */\n      dup5\n      and\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":4285:4424  if(to10!=address(0x0)){total = safeAdd(total,size);balanceOf[to10] = safeAdd(balanceOf[to10],size);emit Transfer(msg.sender, to10, size); } */\n      tag_166\n      jumpi\n        /* \"contracts/Accessories/taikula.sol\":4316:4335  safeAdd(total,size) */\n      tag_167\n        /* \"contracts/Accessories/taikula.sol\":4324:4329  total */\n      dup2\n        /* \"contracts/Accessories/taikula.sol\":4330:4334  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":4316:4323  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":4316:4335  safeAdd(total,size) */\n      jump\t// in\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":4362:4377  balanceOf[to10] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":4362:4371  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":4362:4377  balanceOf[to10] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Accessories/taikula.sol\":4308:4335  total = safeAdd(total,size) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Accessories/taikula.sol\":4354:4383  safeAdd(balanceOf[to10],size) */\n      tag_168\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":4378:4382  size */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":4354:4361  safeAdd */\n      tag_112\n        /* \"contracts/Accessories/taikula.sol\":4354:4383  safeAdd(balanceOf[to10],size) */\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Accessories/taikula.sol\":4336:4351  balanceOf[to10] */\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":4336:4345  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":4336:4351  balanceOf[to10] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":4336:4383  balanceOf[to10] = safeAdd(balanceOf[to10],size) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":4389:4421  Transfer(msg.sender, to10, size) */\n      swap1\n      mload\n        /* \"contracts/Accessories/taikula.sol\":4398:4408  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":4389:4421  Transfer(msg.sender, to10, size) */\n      swap1\n      tag_169\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":4416:4420  size */\n      dup8\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/Accessories/taikula.sol\":4389:4421  Transfer(msg.sender, to10, size) */\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Accessories/taikula.sol\":4285:4424  if(to10!=address(0x0)){total = safeAdd(total,size);balanceOf[to10] = safeAdd(balanceOf[to10],size);emit Transfer(msg.sender, to10, size); } */\n    tag_166:\n        /* \"contracts/Accessories/taikula.sol\":4437:4445  total >0 */\n      dup1\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":4434:4507  if(total >0)balanceOf[msg.sender] = safeSub(balanceOf[msg.sender], total) */\n      tag_170\n      jumpi\n        /* \"contracts/Accessories/taikula.sol\":4488:4498  msg.sender */\n      caller\n        /* \"contracts/Accessories/taikula.sol\":4478:4499  balanceOf[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":4478:4487  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":4478:4499  balanceOf[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Accessories/taikula.sol\":4470:4507  safeSub(balanceOf[msg.sender], total) */\n      tag_171\n      swap1\n        /* \"contracts/Accessories/taikula.sol\":4501:4506  total */\n      dup3\n        /* \"contracts/Accessories/taikula.sol\":4470:4477  safeSub */\n      tag_109\n        /* \"contracts/Accessories/taikula.sol\":4470:4507  safeSub(balanceOf[msg.sender], total) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/Accessories/taikula.sol\":4456:4466  msg.sender */\n      caller\n        /* \"contracts/Accessories/taikula.sol\":4446:4467  balanceOf[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Accessories/taikula.sol\":4446:4455  balanceOf */\n      0x06\n        /* \"contracts/Accessories/taikula.sol\":4446:4467  balanceOf[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Accessories/taikula.sol\":4446:4507  balanceOf[msg.sender] = safeSub(balanceOf[msg.sender], total) */\n      sstore\n        /* \"contracts/Accessories/taikula.sol\":4434:4507  if(total >0)balanceOf[msg.sender] = safeSub(balanceOf[msg.sender], total) */\n    tag_170:\n      pop\n        /* \"contracts/Accessories/taikula.sol\":4525:4529  true */\n      0x01\n      swap13\n        /* \"contracts/Accessories/taikula.sol\":2675:4536  function transferBatch(address to1,address to2,address to3,address to4,address to5,... */\n      swap12\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Accessories/taikula.sol\":1297:1412  function safeSub(uint a, uint b) internal pure returns (uint c) {... */\n    tag_109:\n        /* \"contracts/Accessories/taikula.sol\":1353:1359  uint c */\n      0x00\n        /* \"contracts/Accessories/taikula.sol\":1384:1385  a */\n      dup3\n        /* \"contracts/Accessories/taikula.sol\":1379:1380  b */\n      dup3\n        /* \"contracts/Accessories/taikula.sol\":1379:1385  b <= a */\n      gt\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":1371:1386  require(b <= a) */\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n        /* \"contracts/Accessories/taikula.sol\":1400:1405  a - b */\n      tag_174\n        /* \"contracts/Accessories/taikula.sol\":1404:1405  b */\n      dup3\n        /* \"contracts/Accessories/taikula.sol\":1400:1401  a */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":1400:1405  a - b */\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"contracts/Accessories/taikula.sol\":1396:1405  c = a - b */\n      swap4\n        /* \"contracts/Accessories/taikula.sol\":1297:1412  function safeSub(uint a, uint b) internal pure returns (uint c) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Accessories/taikula.sol\":1176:1292  function safeAdd(uint a, uint b) internal  pure returns (uint c) {... */\n    tag_112:\n        /* \"contracts/Accessories/taikula.sol\":1233:1239  uint c */\n      0x00\n        /* \"contracts/Accessories/taikula.sol\":1255:1260  a + b */\n      tag_177\n        /* \"contracts/Accessories/taikula.sol\":1259:1260  b */\n      dup3\n        /* \"contracts/Accessories/taikula.sol\":1255:1256  a */\n      dup5\n        /* \"contracts/Accessories/taikula.sol\":1255:1260  a + b */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"contracts/Accessories/taikula.sol\":1251:1260  c = a + b */\n      swap1\n      pop\n        /* \"contracts/Accessories/taikula.sol\":1283:1284  a */\n      dup3\n        /* \"contracts/Accessories/taikula.sol\":1278:1279  c */\n      dup2\n        /* \"contracts/Accessories/taikula.sol\":1278:1284  c >= a */\n      lt\n      iszero\n        /* \"contracts/Accessories/taikula.sol\":1270:1285  require(c >= a) */\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"#utility.yul\":14:562   */\n    tag_28:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_184:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_184)\n    tag_186:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_180:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_188\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_188:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_32:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_190:\n        /* \"#utility.yul\":913:942   */\n      tag_191\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_180\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_44:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_195:\n        /* \"#utility.yul\":1563:1592   */\n      tag_196\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_180\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_197\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_180\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_58:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_200:\n        /* \"#utility.yul\":2051:2080   */\n      tag_174\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_180\n      jump\t// in\n        /* \"#utility.yul\":2091:2438   */\n    tag_78:\n        /* \"#utility.yul\":2156:2162   */\n      0x00\n        /* \"#utility.yul\":2164:2170   */\n      dup1\n        /* \"#utility.yul\":2217:2219   */\n      0x40\n        /* \"#utility.yul\":2205:2214   */\n      dup4\n        /* \"#utility.yul\":2196:2203   */\n      dup6\n        /* \"#utility.yul\":2192:2215   */\n      sub\n        /* \"#utility.yul\":2188:2220   */\n      slt\n        /* \"#utility.yul\":2185:2237   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":2233:2234   */\n      0x00\n        /* \"#utility.yul\":2230:2231   */\n      dup1\n        /* \"#utility.yul\":2223:2235   */\n      revert\n        /* \"#utility.yul\":2185:2237   */\n    tag_203:\n        /* \"#utility.yul\":2256:2285   */\n      tag_204\n        /* \"#utility.yul\":2275:2284   */\n      dup4\n        /* \"#utility.yul\":2256:2285   */\n      tag_180\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2246:2285   */\n      swap2\n      pop\n        /* \"#utility.yul\":2335:2337   */\n      0x20\n        /* \"#utility.yul\":2324:2333   */\n      dup4\n        /* \"#utility.yul\":2320:2338   */\n      add\n        /* \"#utility.yul\":2307:2339   */\n      calldataload\n        /* \"#utility.yul\":2382:2387   */\n      dup1\n        /* \"#utility.yul\":2375:2388   */\n      iszero\n        /* \"#utility.yul\":2368:2389   */\n      iszero\n        /* \"#utility.yul\":2361:2366   */\n      dup2\n        /* \"#utility.yul\":2358:2390   */\n      eq\n        /* \"#utility.yul\":2348:2408   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":2404:2405   */\n      0x00\n        /* \"#utility.yul\":2401:2402   */\n      dup1\n        /* \"#utility.yul\":2394:2406   */\n      revert\n        /* \"#utility.yul\":2348:2408   */\n    tag_205:\n        /* \"#utility.yul\":2427:2432   */\n      dup1\n        /* \"#utility.yul\":2417:2432   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2091:2438   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2651:2911   */\n    tag_88:\n        /* \"#utility.yul\":2719:2725   */\n      0x00\n        /* \"#utility.yul\":2727:2733   */\n      dup1\n        /* \"#utility.yul\":2780:2782   */\n      0x40\n        /* \"#utility.yul\":2768:2777   */\n      dup4\n        /* \"#utility.yul\":2759:2766   */\n      dup6\n        /* \"#utility.yul\":2755:2778   */\n      sub\n        /* \"#utility.yul\":2751:2783   */\n      slt\n        /* \"#utility.yul\":2748:2800   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":2796:2797   */\n      0x00\n        /* \"#utility.yul\":2793:2794   */\n      dup1\n        /* \"#utility.yul\":2786:2798   */\n      revert\n        /* \"#utility.yul\":2748:2800   */\n    tag_208:\n        /* \"#utility.yul\":2819:2848   */\n      tag_209\n        /* \"#utility.yul\":2838:2847   */\n      dup4\n        /* \"#utility.yul\":2819:2848   */\n      tag_180\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2809:2848   */\n      swap2\n      pop\n        /* \"#utility.yul\":2867:2905   */\n      tag_210\n        /* \"#utility.yul\":2901:2903   */\n      0x20\n        /* \"#utility.yul\":2890:2899   */\n      dup5\n        /* \"#utility.yul\":2886:2904   */\n      add\n        /* \"#utility.yul\":2867:2905   */\n      tag_180\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2857:2905   */\n      swap1\n      pop\n        /* \"#utility.yul\":2651:2911   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2916:3846   */\n    tag_94:\n        /* \"#utility.yul\":3065:3071   */\n      0x00\n        /* \"#utility.yul\":3073:3079   */\n      dup1\n        /* \"#utility.yul\":3081:3087   */\n      0x00\n        /* \"#utility.yul\":3089:3095   */\n      dup1\n        /* \"#utility.yul\":3097:3103   */\n      0x00\n        /* \"#utility.yul\":3105:3111   */\n      dup1\n        /* \"#utility.yul\":3113:3119   */\n      0x00\n        /* \"#utility.yul\":3121:3127   */\n      dup1\n        /* \"#utility.yul\":3129:3135   */\n      0x00\n        /* \"#utility.yul\":3137:3143   */\n      dup1\n        /* \"#utility.yul\":3145:3152   */\n      0x00\n        /* \"#utility.yul\":3199:3202   */\n      0x0160\n        /* \"#utility.yul\":3187:3196   */\n      dup13\n        /* \"#utility.yul\":3178:3185   */\n      dup15\n        /* \"#utility.yul\":3174:3197   */\n      sub\n        /* \"#utility.yul\":3170:3203   */\n      slt\n        /* \"#utility.yul\":3167:3220   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":3216:3217   */\n      0x00\n        /* \"#utility.yul\":3213:3214   */\n      dup1\n        /* \"#utility.yul\":3206:3218   */\n      revert\n        /* \"#utility.yul\":3167:3220   */\n    tag_212:\n        /* \"#utility.yul\":3239:3268   */\n      tag_213\n        /* \"#utility.yul\":3258:3267   */\n      dup13\n        /* \"#utility.yul\":3239:3268   */\n      tag_180\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3229:3268   */\n      swap11\n      pop\n        /* \"#utility.yul\":3287:3325   */\n      tag_214\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3310:3319   */\n      dup14\n        /* \"#utility.yul\":3306:3324   */\n      add\n        /* \"#utility.yul\":3287:3325   */\n      tag_180\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":3277:3325   */\n      swap10\n      pop\n        /* \"#utility.yul\":3344:3382   */\n      tag_215\n        /* \"#utility.yul\":3378:3380   */\n      0x40\n        /* \"#utility.yul\":3367:3376   */\n      dup14\n        /* \"#utility.yul\":3363:3381   */\n      add\n        /* \"#utility.yul\":3344:3382   */\n      tag_180\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3334:3382   */\n      swap9\n      pop\n        /* \"#utility.yul\":3401:3439   */\n      tag_216\n        /* \"#utility.yul\":3435:3437   */\n      0x60\n        /* \"#utility.yul\":3424:3433   */\n      dup14\n        /* \"#utility.yul\":3420:3438   */\n      add\n        /* \"#utility.yul\":3401:3439   */\n      tag_180\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":3391:3439   */\n      swap8\n      pop\n        /* \"#utility.yul\":3458:3497   */\n      tag_217\n        /* \"#utility.yul\":3492:3495   */\n      0x80\n        /* \"#utility.yul\":3481:3490   */\n      dup14\n        /* \"#utility.yul\":3477:3496   */\n      add\n        /* \"#utility.yul\":3458:3497   */\n      tag_180\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3448:3497   */\n      swap7\n      pop\n        /* \"#utility.yul\":3516:3555   */\n      tag_218\n        /* \"#utility.yul\":3550:3553   */\n      0xa0\n        /* \"#utility.yul\":3539:3548   */\n      dup14\n        /* \"#utility.yul\":3535:3554   */\n      add\n        /* \"#utility.yul\":3516:3555   */\n      tag_180\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":3506:3555   */\n      swap6\n      pop\n        /* \"#utility.yul\":3574:3613   */\n      tag_219\n        /* \"#utility.yul\":3608:3611   */\n      0xc0\n        /* \"#utility.yul\":3597:3606   */\n      dup14\n        /* \"#utility.yul\":3593:3612   */\n      add\n        /* \"#utility.yul\":3574:3613   */\n      tag_180\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3564:3613   */\n      swap5\n      pop\n        /* \"#utility.yul\":3632:3671   */\n      tag_220\n        /* \"#utility.yul\":3666:3669   */\n      0xe0\n        /* \"#utility.yul\":3655:3664   */\n      dup14\n        /* \"#utility.yul\":3651:3670   */\n      add\n        /* \"#utility.yul\":3632:3671   */\n      tag_180\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3622:3671   */\n      swap4\n      pop\n        /* \"#utility.yul\":3690:3729   */\n      tag_221\n        /* \"#utility.yul\":3724:3727   */\n      0x0100\n        /* \"#utility.yul\":3713:3722   */\n      dup14\n        /* \"#utility.yul\":3709:3728   */\n      add\n        /* \"#utility.yul\":3690:3729   */\n      tag_180\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3680:3729   */\n      swap3\n      pop\n        /* \"#utility.yul\":3748:3787   */\n      tag_222\n        /* \"#utility.yul\":3782:3785   */\n      0x0120\n        /* \"#utility.yul\":3771:3780   */\n      dup14\n        /* \"#utility.yul\":3767:3786   */\n      add\n        /* \"#utility.yul\":3748:3787   */\n      tag_180\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3738:3787   */\n      swap2\n      pop\n        /* \"#utility.yul\":3835:3838   */\n      0x0140\n        /* \"#utility.yul\":3824:3833   */\n      dup13\n        /* \"#utility.yul\":3820:3839   */\n      add\n        /* \"#utility.yul\":3807:3840   */\n      calldataload\n        /* \"#utility.yul\":3796:3840   */\n      swap1\n      pop\n        /* \"#utility.yul\":2916:3846   */\n      swap3\n      swap6\n      swap9\n      swap12\n      pop\n      swap3\n      swap6\n      swap9\n      swap12\n      swap1\n      swap4\n      swap7\n      swap10\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3851:4231   */\n    tag_98:\n        /* \"#utility.yul\":3930:3931   */\n      0x01\n        /* \"#utility.yul\":3926:3938   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3973:3985   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3994:4055   */\n      tag_224\n      jumpi\n        /* \"#utility.yul\":4048:4052   */\n      0x7f\n        /* \"#utility.yul\":4040:4046   */\n      dup3\n        /* \"#utility.yul\":4036:4053   */\n      and\n        /* \"#utility.yul\":4026:4053   */\n      swap2\n      pop\n        /* \"#utility.yul\":3994:4055   */\n    tag_224:\n        /* \"#utility.yul\":4101:4103   */\n      0x20\n        /* \"#utility.yul\":4093:4099   */\n      dup3\n        /* \"#utility.yul\":4090:4104   */\n      lt\n        /* \"#utility.yul\":4070:4088   */\n      dup2\n        /* \"#utility.yul\":4067:4105   */\n      sub\n        /* \"#utility.yul\":4064:4225   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":4147:4157   */\n      0x4e487b71\n        /* \"#utility.yul\":4142:4145   */\n      0xe0\n        /* \"#utility.yul\":4138:4158   */\n      shl\n        /* \"#utility.yul\":4135:4136   */\n      0x00\n        /* \"#utility.yul\":4128:4159   */\n      mstore\n        /* \"#utility.yul\":4182:4186   */\n      0x22\n        /* \"#utility.yul\":4179:4180   */\n      0x04\n        /* \"#utility.yul\":4172:4187   */\n      mstore\n        /* \"#utility.yul\":4210:4214   */\n      0x24\n        /* \"#utility.yul\":4207:4208   */\n      0x00\n        /* \"#utility.yul\":4200:4215   */\n      revert\n        /* \"#utility.yul\":4064:4225   */\n    tag_225:\n      pop\n        /* \"#utility.yul\":3851:4231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4236:4363   */\n    tag_181:\n        /* \"#utility.yul\":4297:4307   */\n      0x4e487b71\n        /* \"#utility.yul\":4292:4295   */\n      0xe0\n        /* \"#utility.yul\":4288:4308   */\n      shl\n        /* \"#utility.yul\":4285:4286   */\n      0x00\n        /* \"#utility.yul\":4278:4309   */\n      mstore\n        /* \"#utility.yul\":4328:4332   */\n      0x11\n        /* \"#utility.yul\":4325:4326   */\n      0x04\n        /* \"#utility.yul\":4318:4333   */\n      mstore\n        /* \"#utility.yul\":4352:4356   */\n      0x24\n        /* \"#utility.yul\":4349:4350   */\n      0x00\n        /* \"#utility.yul\":4342:4357   */\n      revert\n        /* \"#utility.yul\":4368:4496   */\n    tag_175:\n        /* \"#utility.yul\":4435:4444   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4456:4467   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4453:4490   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":4470:4488   */\n      tag_103\n      tag_181\n      jump\t// in\n        /* \"#utility.yul\":4501:4626   */\n    tag_178:\n        /* \"#utility.yul\":4566:4575   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4587:4597   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4584:4620   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":4600:4618   */\n      tag_103\n      tag_181\n      jump\t// in\n    stop\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n\n    auxdata: 0xa2646970667358221220c73a50468559732f9040d45784cfee771713f34cefae6350a51796fce3151e1364736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_66": {
									"entryPoint": null,
									"id": 66,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 267,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3002:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:1",
																			"statements": []
																		},
																		"src": "1104:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nodeType": "YulIf",
															"src": "748:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:1",
														"type": ""
													}
												],
												"src": "1207:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:1"
															},
															"nodeType": "YulIf",
															"src": "1517:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:1",
																					"statements": []
																				},
																				"src": "1964:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:1",
														"type": ""
													}
												],
												"src": "1378:1352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2787:213:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2797:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2812:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2815:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2808:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2797:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2883:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2911:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2916:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2907:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2907:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2897:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2951:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2941:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2941:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2941:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2976:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2979:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2969:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2969:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2969:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2846:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2839:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2839:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "2853:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "2860:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "2869:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "2856:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2856:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "2850:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2850:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2836:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2836:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2829:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:45:1"
															},
															"nodeType": "YulIf",
															"src": "2826:168:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2766:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2769:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2775:7:1",
														"type": ""
													}
												],
												"src": "2735:265:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405260076080908152665461696b756c6160c81b60a0526002906200002890826200015e565b5060408051808201909152600c81526b2a30b4b5bab6309021b7b4b760a11b60208201526003906200005b90826200015e565b506004805460ff191660061790556200007d620f424064174876e8006200022a565b6005553480156200008d57600080fd5b506005543360008181526006602052604081209290925581546001600160a01b03191617905562000256565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000e457607f821691505b6020821081036200010557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015957600081815260208120601f850160051c81016020861015620001345750805b601f850160051c820191505b81811015620001555782815560010162000140565b5050505b505050565b81516001600160401b038111156200017a576200017a620000b9565b62000192816200018b8454620000cf565b846200010b565b602080601f831160018114620001ca5760008415620001b15750858301515b600019600386901b1c1916600185901b17855562000155565b600085815260208120601f198616915b82811015620001fb57888601518255948401946001909101908401620001da565b50858210156200021a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820281158282048414176200025057634e487b7160e01b600052601160045260246000fd5b92915050565b610f0380620002666000396000f3fe6080604052600436106100d55760003560e01c806370a0823111610079578063ae86852f11610056578063ae86852f14610250578063bcd59d8e14610270578063dd62ed3e146102a8578063e8e11b2b146102e057005b806370a08231146101ee57806395d89b411461021b578063a9059cbb1461023057005b806323b872dd116100b257806323b872dd1461015d578063313ce5671461017d578063314e99a2146101a95780634b58c2b7146101be57005b806306fdde03146100de578063095ea7b31461010957806318160ddd1461013957005b366100dc57005b005b3480156100ea57600080fd5b506100f3610300565b6040516101009190610c18565b60405180910390f35b34801561011557600080fd5b50610129610124366004610c82565b61038e565b6040519015158152602001610100565b34801561014557600080fd5b5061014f60055481565b604051908152602001610100565b34801561016957600080fd5b50610129610178366004610cac565b610411565b34801561018957600080fd5b506004546101979060ff1681565b60405160ff9091168152602001610100565b3480156101b557600080fd5b506100dc61051a565b3480156101ca57600080fd5b506101296101d9366004610ce8565b60016020526000908152604090205460ff1681565b3480156101fa57600080fd5b5061014f610209366004610ce8565b60066020526000908152604090205481565b34801561022757600080fd5b506100f3610543565b34801561023c57600080fd5b5061012961024b366004610c82565b610550565b34801561025c57600080fd5b506100dc61026b366004610d03565b6105f2565b34801561027c57600080fd5b50600054610290906001600160a01b031681565b6040516001600160a01b039091168152602001610100565b3480156102b457600080fd5b5061014f6102c3366004610d3f565b600760209081526000928352604080842090915290825290205481565b3480156102ec57600080fd5b506101296102fb366004610d72565b610634565b6003805461030d90610e37565b80601f016020809104026020016040519081016040528092919081815260200182805461033990610e37565b80156103865780601f1061035b57610100808354040283529160200191610386565b820191906000526020600020905b81548152906001019060200180831161036957829003601f168201915b505050505081565b3360009081526001602052604081205460ff16156103ab57600080fd5b3360008181526007602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35060015b92915050565b3360009081526001602052604081205460ff161561042e57600080fd5b6001600160a01b0384166000908152600660205260409020546104519083610bdd565b6001600160a01b03851660009081526006602090815260408083209390935560078152828220338352905220546104889083610bdd565b6001600160a01b0380861660009081526007602090815260408083203384528252808320949094559186168152600690915220546104c69083610bfd565b6001600160a01b038085166000818152600660205260409081902093909355915190861690600080516020610eae833981519152906105089086815260200190565b60405180910390a35060019392505050565b6000546001600160a01b0316331461053157600080fd5b600080546001600160a01b0319169055565b6002805461030d90610e37565b3360009081526001602052604081205460ff161561056d57600080fd5b336000908152600660205260409020546105879083610bdd565b33600090815260066020526040808220929092556001600160a01b038516815220546105b39083610bfd565b6001600160a01b038416600081815260066020526040908190209290925590513390600080516020610eae833981519152906103ff9086815260200190565b6000546001600160a01b0316331461060957600080fd5b6001600160a01b03919091166000908152600160205260409020805460ff1916911515919091179055565b3360009081526001602052604081205460ff161561065157600080fd5b60006001600160a01b038d16156106da5761066c8184610bfd565b6001600160a01b038e166000908152600660205260409020549091506106929084610bfd565b6001600160a01b038e16600081815260066020526040908190209290925590513390600080516020610eae833981519152906106d19087815260200190565b60405180910390a35b6001600160a01b038c1615610761576106f38184610bfd565b6001600160a01b038d166000908152600660205260409020549091506107199084610bfd565b6001600160a01b038d16600081815260066020526040908190209290925590513390600080516020610eae833981519152906107589087815260200190565b60405180910390a35b6001600160a01b038b16156107e85761077a8184610bfd565b6001600160a01b038c166000908152600660205260409020549091506107a09084610bfd565b6001600160a01b038c16600081815260066020526040908190209290925590513390600080516020610eae833981519152906107df9087815260200190565b60405180910390a35b6001600160a01b038a161561086f576108018184610bfd565b6001600160a01b038b166000908152600660205260409020549091506108279084610bfd565b6001600160a01b038b16600081815260066020526040908190209290925590513390600080516020610eae833981519152906108669087815260200190565b60405180910390a35b6001600160a01b038916156108f6576108888184610bfd565b6001600160a01b038a166000908152600660205260409020549091506108ae9084610bfd565b6001600160a01b038a16600081815260066020526040908190209290925590513390600080516020610eae833981519152906108ed9087815260200190565b60405180910390a35b6001600160a01b0388161561097d5761090f8184610bfd565b6001600160a01b0389166000908152600660205260409020549091506109359084610bfd565b6001600160a01b038916600081815260066020526040908190209290925590513390600080516020610eae833981519152906109749087815260200190565b60405180910390a35b6001600160a01b03871615610a04576109968184610bfd565b6001600160a01b0388166000908152600660205260409020549091506109bc9084610bfd565b6001600160a01b038816600081815260066020526040908190209290925590513390600080516020610eae833981519152906109fb9087815260200190565b60405180910390a35b6001600160a01b03861615610a8b57610a1d8184610bfd565b6001600160a01b038716600090815260066020526040902054909150610a439084610bfd565b6001600160a01b038716600081815260066020526040908190209290925590513390600080516020610eae83398151915290610a829087815260200190565b60405180910390a35b6001600160a01b03851615610b1257610aa48184610bfd565b6001600160a01b038616600090815260066020526040902054909150610aca9084610bfd565b6001600160a01b038616600081815260066020526040908190209290925590513390600080516020610eae83398151915290610b099087815260200190565b60405180910390a35b6001600160a01b03841615610b9957610b2b8184610bfd565b6001600160a01b038516600090815260066020526040902054909150610b519084610bfd565b6001600160a01b038516600081815260066020526040908190209290925590513390600080516020610eae83398151915290610b909087815260200190565b60405180910390a35b8015610bca5733600090815260066020526040902054610bb99082610bdd565b336000908152600660205260409020555b5060019c9b505050505050505050505050565b600082821115610bec57600080fd5b610bf68284610e87565b9392505050565b6000610c098284610e9a565b90508281101561040b57600080fd5b600060208083528351808285015260005b81811015610c4557858101830151858201604001528201610c29565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c7d57600080fd5b919050565b60008060408385031215610c9557600080fd5b610c9e83610c66565b946020939093013593505050565b600080600060608486031215610cc157600080fd5b610cca84610c66565b9250610cd860208501610c66565b9150604084013590509250925092565b600060208284031215610cfa57600080fd5b610bf682610c66565b60008060408385031215610d1657600080fd5b610d1f83610c66565b915060208301358015158114610d3457600080fd5b809150509250929050565b60008060408385031215610d5257600080fd5b610d5b83610c66565b9150610d6960208401610c66565b90509250929050565b60008060008060008060008060008060006101608c8e031215610d9457600080fd5b610d9d8c610c66565b9a50610dab60208d01610c66565b9950610db960408d01610c66565b9850610dc760608d01610c66565b9750610dd560808d01610c66565b9650610de360a08d01610c66565b9550610df160c08d01610c66565b9450610dff60e08d01610c66565b9350610e0e6101008d01610c66565b9250610e1d6101208d01610c66565b91506101408c013590509295989b509295989b9093969950565b600181811c90821680610e4b57607f821691505b602082108103610e6b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561040b5761040b610e71565b8082018082111561040b5761040b610e7156feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220c73a50468559732f9040d45784cfee771713f34cefae6350a51796fce3151e1364736f6c63430008120033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x7 PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH7 0x5461696B756C61 PUSH1 0xC8 SHL PUSH1 0xA0 MSTORE PUSH1 0x2 SWAP1 PUSH3 0x28 SWAP1 DUP3 PUSH3 0x15E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x2A30B4B5BAB6309021B7B4B7 PUSH1 0xA1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 PUSH3 0x5B SWAP1 DUP3 PUSH3 0x15E JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x6 OR SWAP1 SSTORE PUSH3 0x7D PUSH3 0xF4240 PUSH5 0x174876E800 PUSH3 0x22A JUMP JUMPDEST PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR SWAP1 SSTORE PUSH3 0x256 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0xE4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x105 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x159 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x134 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x155 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x140 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x17A JUMPI PUSH3 0x17A PUSH3 0xB9 JUMP JUMPDEST PUSH3 0x192 DUP2 PUSH3 0x18B DUP5 SLOAD PUSH3 0xCF JUMP JUMPDEST DUP5 PUSH3 0x10B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1CA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x1B1 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x155 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1FB JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x1DA JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x21A JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x250 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF03 DUP1 PUSH3 0x266 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xAE86852F GT PUSH2 0x56 JUMPI DUP1 PUSH4 0xAE86852F EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xBCD59D8E EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xE8E11B2B EQ PUSH2 0x2E0 JUMPI STOP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x230 JUMPI STOP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x314E99A2 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x4B58C2B7 EQ PUSH2 0x1BE JUMPI STOP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x139 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0xDC JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x197 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x51A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x543 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x290 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x30D SWAP1 PUSH2 0xE37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x339 SWAP1 PUSH2 0xE37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x386 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x386 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x369 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x451 SWAP1 DUP4 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x7 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x488 SWAP1 DUP4 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x4C6 SWAP1 DUP4 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP7 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x508 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x30D SWAP1 PUSH2 0xE37 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x587 SWAP1 DUP4 PUSH2 0xBDD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x5B3 SWAP1 DUP4 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x3FF SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND ISZERO PUSH2 0x6DA JUMPI PUSH2 0x66C DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x692 SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x6D1 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND ISZERO PUSH2 0x761 JUMPI PUSH2 0x6F3 DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x719 SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x758 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND ISZERO PUSH2 0x7E8 JUMPI PUSH2 0x77A DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x7A0 SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x7DF SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND ISZERO PUSH2 0x86F JUMPI PUSH2 0x801 DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x827 SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x866 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0x8F6 JUMPI PUSH2 0x888 DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x8AE SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x8ED SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x97D JUMPI PUSH2 0x90F DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x935 SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x974 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0xA04 JUMPI PUSH2 0x996 DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x9BC SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x9FB SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0xA8B JUMPI PUSH2 0xA1D DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xA43 SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xA82 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xB12 JUMPI PUSH2 0xAA4 DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xACA SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xB09 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xB99 JUMPI PUSH2 0xB2B DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xB51 SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xB90 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP1 ISZERO PUSH2 0xBCA JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBB9 SWAP1 DUP3 PUSH2 0xBDD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST POP PUSH1 0x1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF6 DUP3 DUP5 PUSH2 0xE87 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC09 DUP3 DUP5 PUSH2 0xE9A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC45 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC29 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9E DUP4 PUSH2 0xC66 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCCA DUP5 PUSH2 0xC66 JUMP JUMPDEST SWAP3 POP PUSH2 0xCD8 PUSH1 0x20 DUP6 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF6 DUP3 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD1F DUP4 PUSH2 0xC66 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5B DUP4 PUSH2 0xC66 JUMP JUMPDEST SWAP2 POP PUSH2 0xD69 PUSH1 0x20 DUP5 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH2 0xD94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9D DUP13 PUSH2 0xC66 JUMP JUMPDEST SWAP11 POP PUSH2 0xDAB PUSH1 0x20 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP10 POP PUSH2 0xDB9 PUSH1 0x40 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP9 POP PUSH2 0xDC7 PUSH1 0x60 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP8 POP PUSH2 0xDD5 PUSH1 0x80 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP7 POP PUSH2 0xDE3 PUSH1 0xA0 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP6 POP PUSH2 0xDF1 PUSH1 0xC0 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP5 POP PUSH2 0xDFF PUSH1 0xE0 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP4 POP PUSH2 0xE0E PUSH2 0x100 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP3 POP PUSH2 0xE1D PUSH2 0x120 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP2 POP PUSH2 0x140 DUP13 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xE4B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE6B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x40B JUMPI PUSH2 0x40B PUSH2 0xE71 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x40B JUMPI PUSH2 0x40B PUSH2 0xE71 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 GASPRICE POP CHAINID DUP6 MSIZE PUSH20 0x2F9040D45784CFEE771713F34CEFAE6350A51796 0xFC 0xE3 ISZERO 0x1E SGT PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "278:32:0:-:0;127:4411;278:32;;127:4411;278:32;;;-1:-1:-1;;;278:32:0;;;;;;;;:::i;:::-;-1:-1:-1;316:36:0;;;;;;;;;;;;-1:-1:-1;;;316:36:0;;;;;;;;;;:::i;:::-;-1:-1:-1;358:25:0;;;-1:-1:-1;;358:25:0;382:1;358:25;;;415:23;181:7;415:12;:23;:::i;:::-;389:49;;723:105;;;;;;;;;-1:-1:-1;771:11:0;;757:10;747:21;;;;:9;:21;;;;;:35;;;;792:29;;-1:-1:-1;;;;;;792:29:0;;;;127:4411;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:1;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:1;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:1;;;2580:26;2531:89;-1:-1:-1;;1335:1:1;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:1;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:1;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:1;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:1:o;2735:265::-;2808:9;;;2839;;2856:15;;;2850:22;;2836:37;2826:168;;2916:10;2911:3;2907:20;2904:1;2897:31;2951:4;2948:1;2941:15;2979:4;2976:1;2969:15;2826:168;2735:265;;;;:::o;:::-;127:4411:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@abdicate_113": {
									"entryPoint": 1306,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_34": {
									"entryPoint": null,
									"id": 34,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_296": {
									"entryPoint": 910,
									"id": 296,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@is_robot_10": {
									"entryPoint": null,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@kill_robot_owner_6": {
									"entryPoint": null,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_16": {
									"entryPoint": 768,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeAdd_135": {
									"entryPoint": 3069,
									"id": 135,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeSub_157": {
									"entryPoint": 3037,
									"id": 157,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setRobot_95": {
									"entryPoint": 1522,
									"id": 95,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_13": {
									"entryPoint": 1347,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferBatch_753": {
									"entryPoint": 1588,
									"id": 753,
									"parameterSlots": 11,
									"returnSlots": 1
								},
								"@transferFrom_364": {
									"entryPoint": 1041,
									"id": 364,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_259": {
									"entryPoint": 1360,
									"id": 259,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_uint256": {
									"entryPoint": 3442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 11
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4628:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:1"
															},
															"nodeType": "YulIf",
															"src": "1492:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:1",
														"type": ""
													}
												],
												"src": "1378:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:1",
														"type": ""
													}
												],
												"src": "1711:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:1"
															},
															"nodeType": "YulIf",
															"src": "1980:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:1",
														"type": ""
													}
												],
												"src": "1900:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2175:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2221:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2230:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2223:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2223:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2223:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2196:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2205:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2192:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2192:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2217:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2188:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2188:32:1"
															},
															"nodeType": "YulIf",
															"src": "2185:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2246:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2275:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2256:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2256:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2246:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2294:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2324:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2335:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2320:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2320:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2298:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2392:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2401:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2404:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2394:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2394:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2394:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2361:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2382:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2375:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2375:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2368:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2368:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2358:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2358:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2351:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2351:40:1"
															},
															"nodeType": "YulIf",
															"src": "2348:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2417:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2427:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2417:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2133:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2144:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2156:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2164:6:1",
														"type": ""
													}
												],
												"src": "2091:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2544:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2554:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2566:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2577:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2562:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2554:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2596:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2611:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2627:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2632:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2623:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2623:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2636:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2619:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2619:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2607:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2589:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2589:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2589:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2513:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2524:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2535:4:1",
														"type": ""
													}
												],
												"src": "2443:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2738:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2784:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2793:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2796:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2786:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2786:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2786:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2759:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2768:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2755:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2755:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2780:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2751:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2751:32:1"
															},
															"nodeType": "YulIf",
															"src": "2748:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2809:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2838:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2819:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2809:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2857:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2890:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2901:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2886:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2886:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2867:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2867:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2857:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2696:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2707:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2719:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2727:6:1",
														"type": ""
													}
												],
												"src": "2651:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3157:689:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3204:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3213:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3216:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3206:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3206:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3206:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3178:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3187:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3174:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3174:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3199:3:1",
																		"type": "",
																		"value": "352"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3170:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:33:1"
															},
															"nodeType": "YulIf",
															"src": "3167:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3229:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3258:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3239:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3239:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3229:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3277:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3310:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3321:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3306:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3306:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3287:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3287:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3277:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3334:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3367:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3378:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3363:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3363:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3344:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:38:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3334:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3391:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3424:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3435:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3420:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3401:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3401:38:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3391:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3448:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3481:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3492:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3477:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3477:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3458:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3458:39:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3448:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3506:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3539:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3550:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3535:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3535:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3516:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3516:39:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3564:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3597:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3608:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3593:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3593:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3574:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3574:39:1"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "3564:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3622:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3655:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3666:3:1",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3651:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3651:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3632:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3632:39:1"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "3622:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3680:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3713:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3724:3:1",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3709:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3709:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3690:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3690:39:1"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nodeType": "YulIdentifier",
																	"src": "3680:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3738:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:3:1",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3748:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3748:39:1"
															},
															"variableNames": [
																{
																	"name": "value9",
																	"nodeType": "YulIdentifier",
																	"src": "3738:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3796:44:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3824:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3835:3:1",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3820:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3820:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3807:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3807:33:1"
															},
															"variableNames": [
																{
																	"name": "value10",
																	"nodeType": "YulIdentifier",
																	"src": "3796:7:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3042:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3053:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3065:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3073:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3081:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3089:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3097:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3105:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "3113:6:1",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "3121:6:1",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "3129:6:1",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "3137:6:1",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "3145:7:1",
														"type": ""
													}
												],
												"src": "2916:930:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3906:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3916:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3930:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3933:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3926:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3926:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3916:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3947:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3977:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3983:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3973:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3973:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3951:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4024:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4026:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4040:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4048:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4036:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4036:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4026:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4004:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3997:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3997:26:1"
															},
															"nodeType": "YulIf",
															"src": "3994:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4114:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4135:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4142:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4147:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4138:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4138:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4128:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4128:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4128:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4179:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4182:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4172:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4172:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4172:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4207:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4210:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4200:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4200:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4200:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4070:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4093:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4101:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4090:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4090:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4067:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4067:38:1"
															},
															"nodeType": "YulIf",
															"src": "4064:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3886:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3895:6:1",
														"type": ""
													}
												],
												"src": "3851:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4268:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4285:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4292:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4297:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4288:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4278:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4278:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4325:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4328:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4318:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4318:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4318:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4349:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4352:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4342:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4236:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4417:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4427:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4439:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4442:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4435:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4427:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4468:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4470:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4470:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4470:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4459:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4465:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4456:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4456:11:1"
															},
															"nodeType": "YulIf",
															"src": "4453:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4399:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4402:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4408:4:1",
														"type": ""
													}
												],
												"src": "4368:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4549:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4559:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4570:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4573:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4566:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4566:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4559:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4598:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4600:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4600:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4600:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4590:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4587:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:10:1"
															},
															"nodeType": "YulIf",
															"src": "4584:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4532:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4535:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4541:3:1",
														"type": ""
													}
												],
												"src": "4501:125:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10\n    {\n        if slt(sub(dataEnd, headStart), 352) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n        value4 := abi_decode_address(add(headStart, 128))\n        value5 := abi_decode_address(add(headStart, 160))\n        value6 := abi_decode_address(add(headStart, 192))\n        value7 := abi_decode_address(add(headStart, 224))\n        value8 := abi_decode_address(add(headStart, 256))\n        value9 := abi_decode_address(add(headStart, 288))\n        value10 := calldataload(add(headStart, 320))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100d55760003560e01c806370a0823111610079578063ae86852f11610056578063ae86852f14610250578063bcd59d8e14610270578063dd62ed3e146102a8578063e8e11b2b146102e057005b806370a08231146101ee57806395d89b411461021b578063a9059cbb1461023057005b806323b872dd116100b257806323b872dd1461015d578063313ce5671461017d578063314e99a2146101a95780634b58c2b7146101be57005b806306fdde03146100de578063095ea7b31461010957806318160ddd1461013957005b366100dc57005b005b3480156100ea57600080fd5b506100f3610300565b6040516101009190610c18565b60405180910390f35b34801561011557600080fd5b50610129610124366004610c82565b61038e565b6040519015158152602001610100565b34801561014557600080fd5b5061014f60055481565b604051908152602001610100565b34801561016957600080fd5b50610129610178366004610cac565b610411565b34801561018957600080fd5b506004546101979060ff1681565b60405160ff9091168152602001610100565b3480156101b557600080fd5b506100dc61051a565b3480156101ca57600080fd5b506101296101d9366004610ce8565b60016020526000908152604090205460ff1681565b3480156101fa57600080fd5b5061014f610209366004610ce8565b60066020526000908152604090205481565b34801561022757600080fd5b506100f3610543565b34801561023c57600080fd5b5061012961024b366004610c82565b610550565b34801561025c57600080fd5b506100dc61026b366004610d03565b6105f2565b34801561027c57600080fd5b50600054610290906001600160a01b031681565b6040516001600160a01b039091168152602001610100565b3480156102b457600080fd5b5061014f6102c3366004610d3f565b600760209081526000928352604080842090915290825290205481565b3480156102ec57600080fd5b506101296102fb366004610d72565b610634565b6003805461030d90610e37565b80601f016020809104026020016040519081016040528092919081815260200182805461033990610e37565b80156103865780601f1061035b57610100808354040283529160200191610386565b820191906000526020600020905b81548152906001019060200180831161036957829003601f168201915b505050505081565b3360009081526001602052604081205460ff16156103ab57600080fd5b3360008181526007602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35060015b92915050565b3360009081526001602052604081205460ff161561042e57600080fd5b6001600160a01b0384166000908152600660205260409020546104519083610bdd565b6001600160a01b03851660009081526006602090815260408083209390935560078152828220338352905220546104889083610bdd565b6001600160a01b0380861660009081526007602090815260408083203384528252808320949094559186168152600690915220546104c69083610bfd565b6001600160a01b038085166000818152600660205260409081902093909355915190861690600080516020610eae833981519152906105089086815260200190565b60405180910390a35060019392505050565b6000546001600160a01b0316331461053157600080fd5b600080546001600160a01b0319169055565b6002805461030d90610e37565b3360009081526001602052604081205460ff161561056d57600080fd5b336000908152600660205260409020546105879083610bdd565b33600090815260066020526040808220929092556001600160a01b038516815220546105b39083610bfd565b6001600160a01b038416600081815260066020526040908190209290925590513390600080516020610eae833981519152906103ff9086815260200190565b6000546001600160a01b0316331461060957600080fd5b6001600160a01b03919091166000908152600160205260409020805460ff1916911515919091179055565b3360009081526001602052604081205460ff161561065157600080fd5b60006001600160a01b038d16156106da5761066c8184610bfd565b6001600160a01b038e166000908152600660205260409020549091506106929084610bfd565b6001600160a01b038e16600081815260066020526040908190209290925590513390600080516020610eae833981519152906106d19087815260200190565b60405180910390a35b6001600160a01b038c1615610761576106f38184610bfd565b6001600160a01b038d166000908152600660205260409020549091506107199084610bfd565b6001600160a01b038d16600081815260066020526040908190209290925590513390600080516020610eae833981519152906107589087815260200190565b60405180910390a35b6001600160a01b038b16156107e85761077a8184610bfd565b6001600160a01b038c166000908152600660205260409020549091506107a09084610bfd565b6001600160a01b038c16600081815260066020526040908190209290925590513390600080516020610eae833981519152906107df9087815260200190565b60405180910390a35b6001600160a01b038a161561086f576108018184610bfd565b6001600160a01b038b166000908152600660205260409020549091506108279084610bfd565b6001600160a01b038b16600081815260066020526040908190209290925590513390600080516020610eae833981519152906108669087815260200190565b60405180910390a35b6001600160a01b038916156108f6576108888184610bfd565b6001600160a01b038a166000908152600660205260409020549091506108ae9084610bfd565b6001600160a01b038a16600081815260066020526040908190209290925590513390600080516020610eae833981519152906108ed9087815260200190565b60405180910390a35b6001600160a01b0388161561097d5761090f8184610bfd565b6001600160a01b0389166000908152600660205260409020549091506109359084610bfd565b6001600160a01b038916600081815260066020526040908190209290925590513390600080516020610eae833981519152906109749087815260200190565b60405180910390a35b6001600160a01b03871615610a04576109968184610bfd565b6001600160a01b0388166000908152600660205260409020549091506109bc9084610bfd565b6001600160a01b038816600081815260066020526040908190209290925590513390600080516020610eae833981519152906109fb9087815260200190565b60405180910390a35b6001600160a01b03861615610a8b57610a1d8184610bfd565b6001600160a01b038716600090815260066020526040902054909150610a439084610bfd565b6001600160a01b038716600081815260066020526040908190209290925590513390600080516020610eae83398151915290610a829087815260200190565b60405180910390a35b6001600160a01b03851615610b1257610aa48184610bfd565b6001600160a01b038616600090815260066020526040902054909150610aca9084610bfd565b6001600160a01b038616600081815260066020526040908190209290925590513390600080516020610eae83398151915290610b099087815260200190565b60405180910390a35b6001600160a01b03841615610b9957610b2b8184610bfd565b6001600160a01b038516600090815260066020526040902054909150610b519084610bfd565b6001600160a01b038516600081815260066020526040908190209290925590513390600080516020610eae83398151915290610b909087815260200190565b60405180910390a35b8015610bca5733600090815260066020526040902054610bb99082610bdd565b336000908152600660205260409020555b5060019c9b505050505050505050505050565b600082821115610bec57600080fd5b610bf68284610e87565b9392505050565b6000610c098284610e9a565b90508281101561040b57600080fd5b600060208083528351808285015260005b81811015610c4557858101830151858201604001528201610c29565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c7d57600080fd5b919050565b60008060408385031215610c9557600080fd5b610c9e83610c66565b946020939093013593505050565b600080600060608486031215610cc157600080fd5b610cca84610c66565b9250610cd860208501610c66565b9150604084013590509250925092565b600060208284031215610cfa57600080fd5b610bf682610c66565b60008060408385031215610d1657600080fd5b610d1f83610c66565b915060208301358015158114610d3457600080fd5b809150509250929050565b60008060408385031215610d5257600080fd5b610d5b83610c66565b9150610d6960208401610c66565b90509250929050565b60008060008060008060008060008060006101608c8e031215610d9457600080fd5b610d9d8c610c66565b9a50610dab60208d01610c66565b9950610db960408d01610c66565b9850610dc760608d01610c66565b9750610dd560808d01610c66565b9650610de360a08d01610c66565b9550610df160c08d01610c66565b9450610dff60e08d01610c66565b9350610e0e6101008d01610c66565b9250610e1d6101208d01610c66565b91506101408c013590509295989b509295989b9093969950565b600181811c90821680610e4b57607f821691505b602082108103610e6b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561040b5761040b610e71565b8082018082111561040b5761040b610e7156feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220c73a50468559732f9040d45784cfee771713f34cefae6350a51796fce3151e1364736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xAE86852F GT PUSH2 0x56 JUMPI DUP1 PUSH4 0xAE86852F EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xBCD59D8E EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xE8E11B2B EQ PUSH2 0x2E0 JUMPI STOP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x230 JUMPI STOP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x314E99A2 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x4B58C2B7 EQ PUSH2 0x1BE JUMPI STOP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x139 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0xDC JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x197 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x51A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x543 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x290 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x30D SWAP1 PUSH2 0xE37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x339 SWAP1 PUSH2 0xE37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x386 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x386 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x369 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x451 SWAP1 DUP4 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x7 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x488 SWAP1 DUP4 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x4C6 SWAP1 DUP4 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP7 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x508 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x30D SWAP1 PUSH2 0xE37 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x587 SWAP1 DUP4 PUSH2 0xBDD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x5B3 SWAP1 DUP4 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x3FF SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND ISZERO PUSH2 0x6DA JUMPI PUSH2 0x66C DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x692 SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x6D1 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND ISZERO PUSH2 0x761 JUMPI PUSH2 0x6F3 DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x719 SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x758 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND ISZERO PUSH2 0x7E8 JUMPI PUSH2 0x77A DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x7A0 SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x7DF SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND ISZERO PUSH2 0x86F JUMPI PUSH2 0x801 DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x827 SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x866 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0x8F6 JUMPI PUSH2 0x888 DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x8AE SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x8ED SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x97D JUMPI PUSH2 0x90F DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x935 SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x974 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0xA04 JUMPI PUSH2 0x996 DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x9BC SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x9FB SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0xA8B JUMPI PUSH2 0xA1D DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xA43 SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xA82 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xB12 JUMPI PUSH2 0xAA4 DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xACA SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xB09 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xB99 JUMPI PUSH2 0xB2B DUP2 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xB51 SWAP1 DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEAE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xB90 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP1 ISZERO PUSH2 0xBCA JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBB9 SWAP1 DUP3 PUSH2 0xBDD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST POP PUSH1 0x1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF6 DUP3 DUP5 PUSH2 0xE87 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC09 DUP3 DUP5 PUSH2 0xE9A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC45 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC29 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9E DUP4 PUSH2 0xC66 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCCA DUP5 PUSH2 0xC66 JUMP JUMPDEST SWAP3 POP PUSH2 0xCD8 PUSH1 0x20 DUP6 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF6 DUP3 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD1F DUP4 PUSH2 0xC66 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5B DUP4 PUSH2 0xC66 JUMP JUMPDEST SWAP2 POP PUSH2 0xD69 PUSH1 0x20 DUP5 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH2 0xD94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9D DUP13 PUSH2 0xC66 JUMP JUMPDEST SWAP11 POP PUSH2 0xDAB PUSH1 0x20 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP10 POP PUSH2 0xDB9 PUSH1 0x40 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP9 POP PUSH2 0xDC7 PUSH1 0x60 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP8 POP PUSH2 0xDD5 PUSH1 0x80 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP7 POP PUSH2 0xDE3 PUSH1 0xA0 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP6 POP PUSH2 0xDF1 PUSH1 0xC0 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP5 POP PUSH2 0xDFF PUSH1 0xE0 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP4 POP PUSH2 0xE0E PUSH2 0x100 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP3 POP PUSH2 0xE1D PUSH2 0x120 DUP14 ADD PUSH2 0xC66 JUMP JUMPDEST SWAP2 POP PUSH2 0x140 DUP13 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xE4B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE6B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x40B JUMPI PUSH2 0x40B PUSH2 0xE71 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x40B JUMPI PUSH2 0x40B PUSH2 0xE71 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 GASPRICE POP CHAINID DUP6 MSIZE PUSH20 0x2F9040D45784CFEE771713F34CEFAE6350A51796 0xFC 0xE3 ISZERO 0x1E SGT PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "127:4411:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;316:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2002:254;;;;;;;;;;-1:-1:-1;2002:254:0;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;2002:254:0;1004:187:1;389:49:0;;;;;;;;;;;;;;;;;;;1342:25:1;;;1330:2;1315:18;389:49:0;1196:177:1;2262:408:0;;;;;;;;;;-1:-1:-1;2262:408:0;;;;;:::i;:::-;;:::i;358:25::-;;;;;;;;;;-1:-1:-1;358:25:0;;;;;;;;;;;1883:4:1;1871:17;;;1853:36;;1841:2;1826:18;358:25:0;1711:184:1;1048:123:0;;;;;;;;;;;;;:::i;231:41::-;;;;;;;;;;-1:-1:-1;231:41:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;445;;;;;;;;;;-1:-1:-1;445:41:0;;;;;:::i;:::-;;;;;;;;;;;;;;278:32;;;;;;;;;;;;;:::i;1672:324::-;;;;;;;;;;-1:-1:-1;1672:324:0;;;;;:::i;:::-;;:::i;904:139::-;;;;;;;;;;-1:-1:-1;904:139:0;;;;;:::i;:::-;;:::i;194:31::-;;;;;;;;;;-1:-1:-1;194:31:0;;;;-1:-1:-1;;;;;194:31:0;;;;;;-1:-1:-1;;;;;2607:32:1;;;2589:51;;2577:2;2562:18;194:31:0;2443:203:1;492:63:0;;;;;;;;;;-1:-1:-1;492:63:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2675:1861;;;;;;;;;;-1:-1:-1;2675:1861:0;;;;;:::i;:::-;;:::i;316:36::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2002:254::-;2106:10;2065:12;2097:20;;;:8;:20;;;;;;;;:29;2089:38;;;;;;2147:10;2137:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;2137:30:0;;;;;;;;;;;;:39;;;2191:37;1342:25:1;;;2137:30:0;;2147:10;2191:37;;1315:18:1;2191:37:0;;;;;;;;-1:-1:-1;2245:4:0;2002:254;;;;;:::o;2262:408::-;2380:10;2339:12;2371:20;;;:8;:20;;;;;;;;:29;2363:38;;;;;;-1:-1:-1;;;;;2437:15:0;;;;;;:9;:15;;;;;;2429:32;;2454:6;2429:7;:32::i;:::-;-1:-1:-1;;;;;2411:15:0;;;;;;:9;:15;;;;;;;;:50;;;;2509:9;:15;;;;;2525:10;2509:27;;;;;;2501:44;;2538:6;2501:7;:44::i;:::-;-1:-1:-1;;;;;2471:15:0;;;;;;;:9;:15;;;;;;;;2487:10;2471:27;;;;;;;:74;;;;2579:13;;;;;:9;:13;;;;;2571:30;;2594:6;2571:7;:30::i;:::-;-1:-1:-1;;;;;2555:13:0;;;;;;;:9;:13;;;;;;;:46;;;;2616:26;;;;;;-1:-1:-1;;;;;;;;;;;2616:26:0;;;2635:6;1342:25:1;;1330:2;1315:18;;1196:177;2616:26:0;;;;;;;;-1:-1:-1;2659:4:0;2262:408;;;;;:::o;1048:123::-;1106:16;;-1:-1:-1;;;;;1106:16:0;1092:10;:30;1084:39;;;;;;1160:3;1133:31;;-1:-1:-1;;;;;;1133:31:0;;;1048:123::o;278:32::-;;;;;;;:::i;1672:324::-;1772:10;1731:12;1763:20;;;:8;:20;;;;;;;;:29;1755:38;;;;;;1845:10;1835:21;;;;:9;:21;;;;;;1827:38;;1858:6;1827:7;:38::i;:::-;1813:10;1803:21;;;;:9;:21;;;;;;:62;;;;-1:-1:-1;;;;;1899:13:0;;;;;;1891:30;;1914:6;1891:7;:30::i;:::-;-1:-1:-1;;;;;1875:13:0;;;;;;:9;:13;;;;;;;:46;;;;1936:32;;1945:10;;-1:-1:-1;;;;;;;;;;;1936:32:0;;;1961:6;1342:25:1;;1330:2;1315:18;;1196:177;904:139:0;986:16;;-1:-1:-1;;;;;986:16:0;972:10;:30;964:39;;;;;;-1:-1:-1;;;;;1013:15:0;;;;;;;;:8;:15;;;;;:23;;-1:-1:-1;;1013:23:0;;;;;;;;;;904:139::o;2675:1861::-;2939:10;2900:11;2930:20;;;:8;:20;;;;;;;;:29;2922:38;;;;;;2970:10;-1:-1:-1;;;;;2993:17:0;;;2990:134;;3020:19;3028:5;3034:4;3020:7;:19::i;:::-;-1:-1:-1;;;;;3065:14:0;;;;;;:9;:14;;;;;;3012:27;;-1:-1:-1;3057:28:0;;3080:4;3057:7;:28::i;:::-;-1:-1:-1;;;;;3040:14:0;;;;;;:9;:14;;;;;;;:45;;;;3091:31;;3100:10;;-1:-1:-1;;;;;;;;;;;3091:31:0;;;3117:4;1342:25:1;;1330:2;1315:18;;1196:177;3091:31:0;;;;;;;;2990:134;-1:-1:-1;;;;;3136:17:0;;;3133:135;;3163:19;3171:5;3177:4;3163:7;:19::i;:::-;-1:-1:-1;;;;;3208:14:0;;;;;;:9;:14;;;;;;3155:27;;-1:-1:-1;3200:28:0;;3223:4;3200:7;:28::i;:::-;-1:-1:-1;;;;;3183:14:0;;;;;;:9;:14;;;;;;;:45;;;;3234:31;;3243:10;;-1:-1:-1;;;;;;;;;;;3234:31:0;;;3260:4;1342:25:1;;1330:2;1315:18;;1196:177;3234:31:0;;;;;;;;3133:135;-1:-1:-1;;;;;3280:17:0;;;3277:135;;3307:19;3315:5;3321:4;3307:7;:19::i;:::-;-1:-1:-1;;;;;3352:14:0;;;;;;:9;:14;;;;;;3299:27;;-1:-1:-1;3344:28:0;;3367:4;3344:7;:28::i;:::-;-1:-1:-1;;;;;3327:14:0;;;;;;:9;:14;;;;;;;:45;;;;3378:31;;3387:10;;-1:-1:-1;;;;;;;;;;;3378:31:0;;;3404:4;1342:25:1;;1330:2;1315:18;;1196:177;3378:31:0;;;;;;;;3277:135;-1:-1:-1;;;;;3424:17:0;;;3421:135;;3451:19;3459:5;3465:4;3451:7;:19::i;:::-;-1:-1:-1;;;;;3496:14:0;;;;;;:9;:14;;;;;;3443:27;;-1:-1:-1;3488:28:0;;3511:4;3488:7;:28::i;:::-;-1:-1:-1;;;;;3471:14:0;;;;;;:9;:14;;;;;;;:45;;;;3522:31;;3531:10;;-1:-1:-1;;;;;;;;;;;3522:31:0;;;3548:4;1342:25:1;;1330:2;1315:18;;1196:177;3522:31:0;;;;;;;;3421:135;-1:-1:-1;;;;;3568:17:0;;;3565:135;;3595:19;3603:5;3609:4;3595:7;:19::i;:::-;-1:-1:-1;;;;;3640:14:0;;;;;;:9;:14;;;;;;3587:27;;-1:-1:-1;3632:28:0;;3655:4;3632:7;:28::i;:::-;-1:-1:-1;;;;;3615:14:0;;;;;;:9;:14;;;;;;;:45;;;;3666:31;;3675:10;;-1:-1:-1;;;;;;;;;;;3666:31:0;;;3692:4;1342:25:1;;1330:2;1315:18;;1196:177;3666:31:0;;;;;;;;3565:135;-1:-1:-1;;;;;3712:17:0;;;3709:135;;3739:19;3747:5;3753:4;3739:7;:19::i;:::-;-1:-1:-1;;;;;3784:14:0;;;;;;:9;:14;;;;;;3731:27;;-1:-1:-1;3776:28:0;;3799:4;3776:7;:28::i;:::-;-1:-1:-1;;;;;3759:14:0;;;;;;:9;:14;;;;;;;:45;;;;3810:31;;3819:10;;-1:-1:-1;;;;;;;;;;;3810:31:0;;;3836:4;1342:25:1;;1330:2;1315:18;;1196:177;3810:31:0;;;;;;;;3709:135;-1:-1:-1;;;;;3856:17:0;;;3853:135;;3883:19;3891:5;3897:4;3883:7;:19::i;:::-;-1:-1:-1;;;;;3928:14:0;;;;;;:9;:14;;;;;;3875:27;;-1:-1:-1;3920:28:0;;3943:4;3920:7;:28::i;:::-;-1:-1:-1;;;;;3903:14:0;;;;;;:9;:14;;;;;;;:45;;;;3954:31;;3963:10;;-1:-1:-1;;;;;;;;;;;3954:31:0;;;3980:4;1342:25:1;;1330:2;1315:18;;1196:177;3954:31:0;;;;;;;;3853:135;-1:-1:-1;;;;;4000:17:0;;;3997:135;;4027:19;4035:5;4041:4;4027:7;:19::i;:::-;-1:-1:-1;;;;;4072:14:0;;;;;;:9;:14;;;;;;4019:27;;-1:-1:-1;4064:28:0;;4087:4;4064:7;:28::i;:::-;-1:-1:-1;;;;;4047:14:0;;;;;;:9;:14;;;;;;;:45;;;;4098:31;;4107:10;;-1:-1:-1;;;;;;;;;;;4098:31:0;;;4124:4;1342:25:1;;1330:2;1315:18;;1196:177;4098:31:0;;;;;;;;3997:135;-1:-1:-1;;;;;4144:17:0;;;4141:135;;4171:19;4179:5;4185:4;4171:7;:19::i;:::-;-1:-1:-1;;;;;4216:14:0;;;;;;:9;:14;;;;;;4163:27;;-1:-1:-1;4208:28:0;;4231:4;4208:7;:28::i;:::-;-1:-1:-1;;;;;4191:14:0;;;;;;:9;:14;;;;;;;:45;;;;4242:31;;4251:10;;-1:-1:-1;;;;;;;;;;;4242:31:0;;;4268:4;1342:25:1;;1330:2;1315:18;;1196:177;4242:31:0;;;;;;;;4141:135;-1:-1:-1;;;;;4288:18:0;;;4285:139;;4316:19;4324:5;4330:4;4316:7;:19::i;:::-;-1:-1:-1;;;;;4362:15:0;;;;;;:9;:15;;;;;;4308:27;;-1:-1:-1;4354:29:0;;4378:4;4354:7;:29::i;:::-;-1:-1:-1;;;;;4336:15:0;;;;;;:9;:15;;;;;;;:47;;;;4389:32;;4398:10;;-1:-1:-1;;;;;;;;;;;4389:32:0;;;4416:4;1342:25:1;;1330:2;1315:18;;1196:177;4389:32:0;;;;;;;;4285:139;4437:8;;4434:73;;4488:10;4478:21;;;;:9;:21;;;;;;4470:37;;4501:5;4470:7;:37::i;:::-;4456:10;4446:21;;;;:9;:21;;;;;:61;4434:73;-1:-1:-1;4525:4:0;;2675:1861;-1:-1:-1;;;;;;;;;;;;2675:1861:0:o;1297:115::-;1353:6;1384:1;1379;:6;;1371:15;;;;;;1400:5;1404:1;1400;:5;:::i;:::-;1396:9;1297:115;-1:-1:-1;;;1297:115:0:o;1176:116::-;1233:6;1255:5;1259:1;1255;:5;:::i;:::-;1251:9;;1283:1;1278;:6;;1270:15;;;;;14:548:1;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;2091:347::-;2156:6;2164;2217:2;2205:9;2196:7;2192:23;2188:32;2185:52;;;2233:1;2230;2223:12;2185:52;2256:29;2275:9;2256:29;:::i;:::-;2246:39;;2335:2;2324:9;2320:18;2307:32;2382:5;2375:13;2368:21;2361:5;2358:32;2348:60;;2404:1;2401;2394:12;2348:60;2427:5;2417:15;;;2091:347;;;;;:::o;2651:260::-;2719:6;2727;2780:2;2768:9;2759:7;2755:23;2751:32;2748:52;;;2796:1;2793;2786:12;2748:52;2819:29;2838:9;2819:29;:::i;:::-;2809:39;;2867:38;2901:2;2890:9;2886:18;2867:38;:::i;:::-;2857:48;;2651:260;;;;;:::o;2916:930::-;3065:6;3073;3081;3089;3097;3105;3113;3121;3129;3137;3145:7;3199:3;3187:9;3178:7;3174:23;3170:33;3167:53;;;3216:1;3213;3206:12;3167:53;3239:29;3258:9;3239:29;:::i;:::-;3229:39;;3287:38;3321:2;3310:9;3306:18;3287:38;:::i;:::-;3277:48;;3344:38;3378:2;3367:9;3363:18;3344:38;:::i;:::-;3334:48;;3401:38;3435:2;3424:9;3420:18;3401:38;:::i;:::-;3391:48;;3458:39;3492:3;3481:9;3477:19;3458:39;:::i;:::-;3448:49;;3516:39;3550:3;3539:9;3535:19;3516:39;:::i;:::-;3506:49;;3574:39;3608:3;3597:9;3593:19;3574:39;:::i;:::-;3564:49;;3632:39;3666:3;3655:9;3651:19;3632:39;:::i;:::-;3622:49;;3690:39;3724:3;3713:9;3709:19;3690:39;:::i;:::-;3680:49;;3748:39;3782:3;3771:9;3767:19;3748:39;:::i;:::-;3738:49;;3835:3;3824:9;3820:19;3807:33;3796:44;;2916:930;;;;;;;;;;;;;;:::o;3851:380::-;3930:1;3926:12;;;;3973;;;3994:61;;4048:4;4040:6;4036:17;4026:27;;3994:61;4101:2;4093:6;4090:14;4070:18;4067:38;4064:161;;4147:10;4142:3;4138:20;4135:1;4128:31;4182:4;4179:1;4172:15;4210:4;4207:1;4200:15;4064:161;;3851:380;;;:::o;4236:127::-;4297:10;4292:3;4288:20;4285:1;4278:31;4328:4;4325:1;4318:15;4352:4;4349:1;4342:15;4368:128;4435:9;;;4456:11;;;4453:37;;;4470:18;;:::i;4501:125::-;4566:9;;;4587:10;;;4584:36;;;4600:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "768600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "163",
								"abdicate()": "26581",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "26723",
								"balanceOf(address)": "2542",
								"decimals()": "2358",
								"is_robot(address)": "2620",
								"kill_robot_owner()": "2381",
								"name()": "infinite",
								"setRobot(address,bool)": "26856",
								"symbol()": "infinite",
								"totalSupply()": "2363",
								"transfer(address,uint256)": "infinite",
								"transferBatch(address,address,address,address,address,address,address,address,address,address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"safeAdd(uint256,uint256)": "infinite",
								"safeDiv(uint256,uint256)": "infinite",
								"safeMul(uint256,uint256)": "infinite",
								"safeSub(uint256,uint256)": "136"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 278,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 127,
									"end": 4538,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 278,
									"end": 310,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 278,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 127,
									"end": 4538,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 278,
									"end": 310,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 278,
									"end": 310,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 278,
									"end": 310,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5461696B756C61"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 278,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 278,
									"end": 310,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 278,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 278,
									"end": 310,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 278,
									"end": 310,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 278,
									"end": 310,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 278,
									"end": 310,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 278,
									"end": 310,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 278,
									"end": 310,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 278,
									"end": 310,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 278,
									"end": 310,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 316,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 316,
									"end": 352,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 316,
									"end": 352,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 316,
									"end": 352,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 316,
									"end": 352,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 316,
									"end": 352,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 316,
									"end": 352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 316,
									"end": 352,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 316,
									"end": 352,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 316,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 316,
									"end": 352,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 316,
									"end": 352,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2A30B4B5BAB6309021B7B4B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 316,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 316,
									"end": 352,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 316,
									"end": 352,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 316,
									"end": 352,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 316,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 316,
									"end": 352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 316,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 316,
									"end": 352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 316,
									"end": 352,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 316,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 316,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 316,
									"end": 352,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 316,
									"end": 352,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 358,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 358,
									"end": 383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 358,
									"end": 383,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 358,
									"end": 383,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 382,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 358,
									"end": 383,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 358,
									"end": 383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 358,
									"end": 383,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 415,
									"end": 438,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 181,
									"end": 188,
									"name": "PUSH",
									"source": 0,
									"value": "F4240"
								},
								{
									"begin": 415,
									"end": 427,
									"name": "PUSH",
									"source": 0,
									"value": "174876E800"
								},
								{
									"begin": 415,
									"end": 438,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 415,
									"end": 438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 415,
									"end": 438,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 415,
									"end": 438,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 389,
									"end": 438,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 389,
									"end": 438,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 723,
									"end": 828,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 723,
									"end": 828,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 723,
									"end": 828,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 723,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 723,
									"end": 828,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 723,
									"end": 828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 723,
									"end": 828,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 723,
									"end": 828,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 723,
									"end": 828,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 723,
									"end": 828,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 771,
									"end": 782,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 771,
									"end": 782,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 757,
									"end": 767,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 747,
									"end": 768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 747,
									"end": 768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 747,
									"end": 768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 747,
									"end": 768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 747,
									"end": 756,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 747,
									"end": 768,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 747,
									"end": 768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 747,
									"end": 768,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 747,
									"end": 768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 747,
									"end": 768,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 747,
									"end": 782,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 747,
									"end": 782,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 747,
									"end": 782,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 747,
									"end": 782,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 792,
									"end": 821,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 792,
									"end": 821,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 792,
									"end": 821,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 792,
									"end": 821,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 792,
									"end": 821,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 792,
									"end": 821,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 127,
									"end": 4538,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 127,
									"end": 4538,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 3000,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2735,
									"end": 3000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2808,
									"end": 2817,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2808,
									"end": 2817,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2808,
									"end": 2817,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2839,
									"end": 2848,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2839,
									"end": 2848,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2856,
									"end": 2871,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2856,
									"end": 2871,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2856,
									"end": 2871,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2850,
									"end": 2872,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2850,
									"end": 2872,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2836,
									"end": 2873,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2994,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2826,
									"end": 2994,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2916,
									"end": 2926,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2911,
									"end": 2914,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2907,
									"end": 2927,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2904,
									"end": 2905,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2897,
									"end": 2928,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2951,
									"end": 2955,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2948,
									"end": 2949,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2941,
									"end": 2956,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2979,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2976,
									"end": 2977,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2984,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2994,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2826,
									"end": 2994,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 3000,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 3000,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 3000,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 3000,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 3000,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 3000,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2735,
									"end": 3000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 127,
									"end": 4538,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 4538,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 127,
									"end": 4538,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 4538,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 4538,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 127,
									"end": 4538,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 4538,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c73a50468559732f9040d45784cfee771713f34cefae6350a51796fce3151e1364736f6c63430008120033",
									".code": [
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "AE86852F"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "AE86852F"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "BCD59D8E"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "E8E11B2B"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "314E99A2"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "4B58C2B7"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 127,
											"end": 4538,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 316,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 316,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2002,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2002,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 389,
											"end": 438,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 389,
											"end": 438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 389,
											"end": 438,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 389,
											"end": 438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 389,
											"end": 438,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 389,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 389,
											"end": 438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 389,
											"end": 438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 389,
											"end": 438,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 389,
											"end": 438,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 389,
											"end": 438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 389,
											"end": 438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 389,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 389,
											"end": 438,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 389,
											"end": 438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 389,
											"end": 438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 389,
											"end": 438,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 389,
											"end": 438,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 389,
											"end": 438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 389,
											"end": 438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 389,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2262,
											"end": 2670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2262,
											"end": 2670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 358,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 358,
											"end": 383,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 358,
											"end": 383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 358,
											"end": 383,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 358,
											"end": 383,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 358,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 358,
											"end": 383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 358,
											"end": 383,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 358,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 383,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1887,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1871,
											"end": 1888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1888,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1048,
											"end": 1171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 231,
											"end": 272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 231,
											"end": 272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 231,
											"end": 272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 231,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 231,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 231,
											"end": 272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 231,
											"end": 272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 231,
											"end": 272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 231,
											"end": 272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 231,
											"end": 272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 231,
											"end": 272,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 445,
											"end": 486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 445,
											"end": 486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 445,
											"end": 486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 445,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 445,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 445,
											"end": 486,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 445,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 445,
											"end": 486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 445,
											"end": 486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 445,
											"end": 486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 445,
											"end": 486,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 278,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 310,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 278,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 278,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 278,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 310,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 278,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 278,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 278,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 278,
											"end": 310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1672,
											"end": 1996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1672,
											"end": 1996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 904,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 904,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 194,
											"end": 225,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 194,
											"end": 225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 194,
											"end": 225,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 194,
											"end": 225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 225,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 194,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 194,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 225,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 194,
											"end": 225,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 194,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 194,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 194,
											"end": 225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 194,
											"end": 225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 194,
											"end": 225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 194,
											"end": 225,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 194,
											"end": 225,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 194,
											"end": 225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 194,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2607,
											"end": 2639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2639,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2640,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2640,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2577,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 194,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2443,
											"end": 2646,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 492,
											"end": 555,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 492,
											"end": 555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 492,
											"end": 555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 492,
											"end": 555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 492,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 492,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 492,
											"end": 555,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 492,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 492,
											"end": 555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 492,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 492,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 555,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 492,
											"end": 555,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2675,
											"end": 4536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2675,
											"end": 4536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 316,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 316,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2106,
											"end": 2116,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2097,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2117,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2097,
											"end": 2117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2089,
											"end": 2127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2127,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2127,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2089,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2157,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2146,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2137,
											"end": 2158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2137,
											"end": 2158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2158,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2158,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2176,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2176,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2390,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2371,
											"end": 2391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2371,
											"end": 2391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2371,
											"end": 2379,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2371,
											"end": 2391,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2371,
											"end": 2391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2371,
											"end": 2391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2371,
											"end": 2391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2371,
											"end": 2391,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2371,
											"end": 2391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2371,
											"end": 2391,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2371,
											"end": 2391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2363,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2401,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2401,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2363,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2437,
											"end": 2452,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2446,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2437,
											"end": 2452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2437,
											"end": 2452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2437,
											"end": 2452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2452,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2429,
											"end": 2461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2420,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2426,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2461,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2461,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2461,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2509,
											"end": 2524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2536,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2536,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2536,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2501,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2501,
											"end": 2545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2538,
											"end": 2544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2501,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2501,
											"end": 2545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2501,
											"end": 2545,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2501,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2471,
											"end": 2486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2486,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2480,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2471,
											"end": 2486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2486,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2486,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2497,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2498,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2498,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2498,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2498,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2545,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2545,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2545,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2579,
											"end": 2592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2579,
											"end": 2592,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2579,
											"end": 2592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2579,
											"end": 2592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2579,
											"end": 2592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2579,
											"end": 2588,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2579,
											"end": 2592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2579,
											"end": 2592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2579,
											"end": 2592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2579,
											"end": 2592,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2579,
											"end": 2592,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2571,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2571,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2571,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2571,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2571,
											"end": 2601,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2571,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2601,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2601,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2601,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2635,
											"end": 2641,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2659,
											"end": 2663,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1048,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1106,
											"end": 1122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1102,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1122,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1084,
											"end": 1123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1084,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1164,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 278,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 278,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 278,
											"end": 310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 278,
											"end": 310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1672,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1782,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1731,
											"end": 1743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1771,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1763,
											"end": 1783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1763,
											"end": 1783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1783,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1783,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1763,
											"end": 1783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1755,
											"end": 1793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1793,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1755,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1855,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1844,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1835,
											"end": 1856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1835,
											"end": 1856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1835,
											"end": 1856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1856,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1827,
											"end": 1865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1864,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1827,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1865,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1827,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1803,
											"end": 1824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1803,
											"end": 1824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1824,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1865,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1899,
											"end": 1912,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1899,
											"end": 1912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1899,
											"end": 1912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1899,
											"end": 1912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1899,
											"end": 1912,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1899,
											"end": 1912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1891,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1891,
											"end": 1921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1920,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1891,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1891,
											"end": 1921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1891,
											"end": 1921,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1891,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1884,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1921,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1921,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1921,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 1968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 1968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 1955,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 1955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1936,
											"end": 1968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1936,
											"end": 1968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1961,
											"end": 1967,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 904,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 986,
											"end": 1002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1002,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 986,
											"end": 1002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 972,
											"end": 982,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1013,
											"end": 1028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1013,
											"end": 1028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1021,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1013,
											"end": 1028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1028,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1013,
											"end": 1036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1036,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1036,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 904,
											"end": 1043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2949,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2938,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2922,
											"end": 2960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2960,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2960,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2922,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2970,
											"end": 2980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2993,
											"end": 3010,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 2993,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2993,
											"end": 3010,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2990,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2990,
											"end": 3124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3028,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3034,
											"end": 3038,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3020,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3065,
											"end": 3079,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3079,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3065,
											"end": 3079,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3065,
											"end": 3079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3079,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3065,
											"end": 3079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3079,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3079,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3057,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3057,
											"end": 3085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3084,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3057,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3057,
											"end": 3085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3057,
											"end": 3085,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3057,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3040,
											"end": 3054,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3049,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3040,
											"end": 3054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3040,
											"end": 3054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3040,
											"end": 3054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3054,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3085,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3085,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3085,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3122,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3110,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3091,
											"end": 3122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3091,
											"end": 3122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3121,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3122,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3091,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3122,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3122,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3122,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3122,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2990,
											"end": 3124,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2990,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3136,
											"end": 3153,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3153,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3133,
											"end": 3268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3171,
											"end": 3176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3181,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3163,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3163,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3208,
											"end": 3222,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3208,
											"end": 3222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3217,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3208,
											"end": 3222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3208,
											"end": 3222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3208,
											"end": 3222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3222,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3222,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3200,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3200,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3223,
											"end": 3227,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3200,
											"end": 3228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3228,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3200,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3192,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3228,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3253,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3234,
											"end": 3265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3234,
											"end": 3265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3260,
											"end": 3264,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3265,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3234,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3265,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3268,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3133,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3277,
											"end": 3412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3315,
											"end": 3320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3325,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3307,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3326,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3307,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3366,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3361,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3352,
											"end": 3366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3352,
											"end": 3366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3352,
											"end": 3366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3366,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3326,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3344,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3344,
											"end": 3372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3371,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3344,
											"end": 3372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3372,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3344,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3336,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3372,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3372,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3372,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3397,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3408,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3412,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3277,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3424,
											"end": 3441,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3441,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3441,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3421,
											"end": 3556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3451,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3469,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3451,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3451,
											"end": 3470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3451,
											"end": 3470,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3451,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3505,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3488,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3488,
											"end": 3516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3511,
											"end": 3515,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3488,
											"end": 3516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3516,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3488,
											"end": 3516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3471,
											"end": 3485,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3480,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3471,
											"end": 3485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3485,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3541,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3522,
											"end": 3553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3522,
											"end": 3553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3522,
											"end": 3553,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3522,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3553,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3553,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3421,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3568,
											"end": 3585,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3568,
											"end": 3585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3568,
											"end": 3585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3565,
											"end": 3700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3603,
											"end": 3608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3613,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3595,
											"end": 3614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3614,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3595,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3649,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3587,
											"end": 3614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3587,
											"end": 3614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3632,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3632,
											"end": 3660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 3659,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3632,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3632,
											"end": 3660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3632,
											"end": 3660,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3632,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3615,
											"end": 3629,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3615,
											"end": 3629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3624,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3615,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3615,
											"end": 3629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3615,
											"end": 3629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3629,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3660,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3660,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3660,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3697,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3675,
											"end": 3685,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3675,
											"end": 3685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3666,
											"end": 3697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3666,
											"end": 3697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3696,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3666,
											"end": 3697,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3666,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3666,
											"end": 3697,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3697,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3697,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3700,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3565,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3712,
											"end": 3729,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3729,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3709,
											"end": 3844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3739,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3747,
											"end": 3752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3753,
											"end": 3757,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3739,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3739,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3739,
											"end": 3758,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3739,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3798,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3793,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3784,
											"end": 3798,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3798,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3776,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3776,
											"end": 3804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3803,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3776,
											"end": 3804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3804,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3776,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3759,
											"end": 3773,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3768,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3759,
											"end": 3773,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3759,
											"end": 3773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3759,
											"end": 3773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3773,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3804,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3804,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3804,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3819,
											"end": 3829,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3819,
											"end": 3829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3836,
											"end": 3840,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3844,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3709,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3856,
											"end": 3873,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3856,
											"end": 3873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3856,
											"end": 3873,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3853,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3853,
											"end": 3988,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3891,
											"end": 3896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3901,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3883,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3902,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3883,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 3942,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3928,
											"end": 3942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 3942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 3942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3920,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3920,
											"end": 3948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3947,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3920,
											"end": 3948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3948,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3920,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3903,
											"end": 3917,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3917,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3912,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3903,
											"end": 3917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3903,
											"end": 3917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3903,
											"end": 3917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3917,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3948,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3948,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3948,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 3985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 3985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 3973,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 3973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3954,
											"end": 3985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3954,
											"end": 3985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3984,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3954,
											"end": 3985,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3954,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 3985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3954,
											"end": 3985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 3985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 3985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 3985,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 3985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 3985,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3853,
											"end": 3988,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3853,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4000,
											"end": 4017,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3997,
											"end": 4132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 4035,
											"end": 4040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4041,
											"end": 4045,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4027,
											"end": 4046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4046,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 4027,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4072,
											"end": 4086,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4081,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4072,
											"end": 4086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4072,
											"end": 4086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4086,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4086,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4064,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4064,
											"end": 4092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4091,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4064,
											"end": 4092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4092,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4064,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4047,
											"end": 4061,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4056,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4047,
											"end": 4061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4047,
											"end": 4061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4047,
											"end": 4061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4061,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4092,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4092,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4092,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4117,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4098,
											"end": 4129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4098,
											"end": 4129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4128,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4129,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4098,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4098,
											"end": 4129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4129,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4132,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3997,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4141,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 4141,
											"end": 4276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 4179,
											"end": 4184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4189,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4171,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4190,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 4171,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4216,
											"end": 4230,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4216,
											"end": 4230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4216,
											"end": 4230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4216,
											"end": 4230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4216,
											"end": 4230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4216,
											"end": 4230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4216,
											"end": 4225,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4216,
											"end": 4230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4216,
											"end": 4230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4216,
											"end": 4230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4216,
											"end": 4230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4216,
											"end": 4230,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4216,
											"end": 4230,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4163,
											"end": 4190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4163,
											"end": 4190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4208,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 4208,
											"end": 4236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4235,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4208,
											"end": 4236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4236,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 4208,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4191,
											"end": 4205,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4200,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4191,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4191,
											"end": 4205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4191,
											"end": 4205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4205,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4236,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4236,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4236,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4261,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4272,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4141,
											"end": 4276,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 4141,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4285,
											"end": 4424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4324,
											"end": 4329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4334,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4316,
											"end": 4335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4335,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4316,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4371,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4308,
											"end": 4335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4354,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 4354,
											"end": 4383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4354,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4354,
											"end": 4383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4354,
											"end": 4383,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 4354,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4345,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4383,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4383,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4383,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4389,
											"end": 4421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4389,
											"end": 4421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4416,
											"end": 4420,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4389,
											"end": 4421,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4389,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4421,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4421,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4424,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4285,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 4434,
											"end": 4507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 4498,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4487,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4478,
											"end": 4499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4478,
											"end": 4499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4499,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4499,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4470,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4470,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4470,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4466,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4446,
											"end": 4467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4446,
											"end": 4467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4446,
											"end": 4467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4446,
											"end": 4467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4446,
											"end": 4455,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4446,
											"end": 4467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4446,
											"end": 4467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4446,
											"end": 4467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4446,
											"end": 4467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4446,
											"end": 4467,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4446,
											"end": 4507,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4434,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 4434,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4525,
											"end": 4529,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4525,
											"end": 4529,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 4536,
											"name": "SWAP12",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2675,
											"end": 4536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1412,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1297,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1379,
											"end": 1380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1371,
											"end": 1386,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1386,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1386,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1371,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1401,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1400,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1405,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1400,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1412,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1292,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1176,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1256,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1255,
											"end": 1260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1260,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1255,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1284,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1270,
											"end": 1285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1285,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2438,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2091,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2217,
											"end": 2219,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2205,
											"end": 2214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2203,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2192,
											"end": 2215,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2220,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2237,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2185,
											"end": 2237,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2235,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2237,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2185,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 2275,
											"end": 2284,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2256,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2285,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 2256,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2337,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2333,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2339,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2387,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2388,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2389,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2390,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 2348,
											"end": 2408,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2406,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2408,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 2348,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2432,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2438,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2438,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2911,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2651,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2719,
											"end": 2725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2766,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2778,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2783,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2800,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 2748,
											"end": 2800,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2793,
											"end": 2794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2798,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2800,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 2748,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 2838,
											"end": 2847,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2819,
											"end": 2848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2848,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 2819,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 2901,
											"end": 2903,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2899,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2904,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2867,
											"end": 2905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2905,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 2867,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2911,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2911,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3846,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2916,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3079,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3129,
											"end": 3135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3202,
											"name": "PUSH",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3187,
											"end": 3196,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3185,
											"name": "DUP15",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3197,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3203,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3218,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3258,
											"end": 3267,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3239,
											"end": 3268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3268,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3239,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3268,
											"name": "SWAP11",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3287,
											"end": 3325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3325,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3287,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3325,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3344,
											"end": 3382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3382,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3344,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3382,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3435,
											"end": 3437,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3424,
											"end": 3433,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3401,
											"end": 3439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3439,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3401,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3391,
											"end": 3439,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 3391,
											"end": 3439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3492,
											"end": 3495,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3481,
											"end": 3490,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3458,
											"end": 3497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3497,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3458,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3497,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3550,
											"end": 3553,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3539,
											"end": 3548,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3516,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3555,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3516,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3555,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3608,
											"end": 3611,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3574,
											"end": 3613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3613,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3574,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3613,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3655,
											"end": 3664,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3632,
											"end": 3671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3671,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3632,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3671,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3690,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3724,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3713,
											"end": 3722,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3690,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3690,
											"end": 3729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3690,
											"end": 3729,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3690,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3729,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3782,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3748,
											"end": 3787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 3787,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3748,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3838,
											"name": "PUSH",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3840,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3846,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3846,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3846,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3846,
											"name": "SWAP12",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3846,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3846,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3846,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3846,
											"name": "SWAP12",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3846,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3846,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3846,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 4231,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3851,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3931,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3926,
											"end": 3938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3938,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3985,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3985,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3994,
											"end": 4055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4052,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 4040,
											"end": 4046,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4036,
											"end": 4053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4055,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3994,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4093,
											"end": 4099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4104,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4105,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4064,
											"end": 4225,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4157,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4142,
											"end": 4145,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4138,
											"end": 4158,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4159,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4182,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4179,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4172,
											"end": 4187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4214,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4207,
											"end": 4208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4215,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4225,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4064,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 4231,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 4231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 4231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 4231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4363,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4236,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4307,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4292,
											"end": 4295,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4288,
											"end": 4308,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4278,
											"end": 4309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4332,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4325,
											"end": 4326,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4318,
											"end": 4333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4356,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4349,
											"end": 4350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4496,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 4368,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4456,
											"end": 4467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4456,
											"end": 4467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4456,
											"end": 4467,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4453,
											"end": 4490,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4453,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4453,
											"end": 4490,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4470,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4470,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4470,
											"end": 4488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4626,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 4501,
											"end": 4626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4566,
											"end": 4575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4566,
											"end": 4575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4566,
											"end": 4575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4587,
											"end": 4597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4587,
											"end": 4597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4587,
											"end": 4597,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4584,
											"end": 4620,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4584,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4584,
											"end": 4620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4600,
											"end": 4618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									}
								}
							},
							"sourceList": [
								"contracts/Accessories/taikula.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"abdicate()": "314e99a2",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"is_robot(address)": "4b58c2b7",
							"kill_robot_owner()": "bcd59d8e",
							"name()": "06fdde03",
							"setRobot(address,bool)": "ae86852f",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferBatch(address,address,address,address,address,address,address,address,address,address,uint256)": "e8e11b2b",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"abdicate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"is_robot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill_robot_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"robot\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setRobot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to4\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to5\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to6\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to7\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to8\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to9\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to10\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"transferBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"sucess\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Accessories/taikula.sol\":\"Taikule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Accessories/taikula.sol\":{\"keccak256\":\"0x170ae7e484972d1ddf28d8dea0347216b3dec676002505230a75a75b0c904860\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ec4dcf0c565b7fd3bd88112a49d2f8ff140d37912c35978c73c6f6ab8abb1165\",\"dweb:/ipfs/QmQLAjiAymyEQ3NhKz2Nk8RfktUVDNibUKZMtRWh882Yk2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "contracts/Accessories/taikula.sol:Taikule",
								"label": "kill_robot_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 10,
								"contract": "contracts/Accessories/taikula.sol:Taikule",
								"label": "is_robot",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 13,
								"contract": "contracts/Accessories/taikula.sol:Taikule",
								"label": "symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 16,
								"contract": "contracts/Accessories/taikula.sol:Taikule",
								"label": "name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 19,
								"contract": "contracts/Accessories/taikula.sol:Taikule",
								"label": "decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 24,
								"contract": "contracts/Accessories/taikula.sol:Taikule",
								"label": "totalSupply",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 28,
								"contract": "contracts/Accessories/taikula.sol:Taikule",
								"label": "balanceOf",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 34,
								"contract": "contracts/Accessories/taikula.sol:Taikule",
								"label": "allowance",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Accessories/taikula.sol": {
				"ast": {
					"absolutePath": "contracts/Accessories/taikula.sol",
					"exportedSymbols": {
						"Taikule": [
							754
						]
					},
					"id": 755,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Taikule",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 754,
							"linearizedBaseContracts": [
								754
							],
							"name": "Taikule",
							"nameLocation": "136:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4,
									"mutability": "constant",
									"name": "Lovelace",
									"nameLocation": "170:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 754,
									"src": "155:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "155:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "181:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"value": "1000000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "bcd59d8e",
									"id": 6,
									"mutability": "mutable",
									"name": "kill_robot_owner",
									"nameLocation": "209:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 754,
									"src": "194:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 5,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "194:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4b58c2b7",
									"id": 10,
									"mutability": "mutable",
									"name": "is_robot",
									"nameLocation": "264:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 754,
									"src": "231:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 9,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 7,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "240:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "231:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 8,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "251:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 13,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "292:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 754,
									"src": "278:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 11,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "278:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "5461696b756c61",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "301:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ac5c2a3566e6eac3f4582c2767fb4a428acacf4bac5599b9dd223efaa1888317",
											"typeString": "literal_string \"Taikula\""
										},
										"value": "Taikula"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 16,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "331:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 754,
									"src": "316:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 14,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "316:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "5461696b756c6120436f696e",
										"id": 15,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "338:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2a9d40028d8c2cbd5846bf9ad10233867343630f7bc3e0c9597cec2098d00837",
											"typeString": "literal_string \"Taikula Coin\""
										},
										"value": "Taikula Coin"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 19,
									"mutability": "mutable",
									"name": "decimals",
									"nameLocation": "371:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 754,
									"src": "358:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 17,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "358:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 18,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "382:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 24,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "401:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 754,
									"src": "389:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 20,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "389:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 23,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030303030303030303030",
											"id": 21,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "415:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000000000_by_1",
												"typeString": "int_const 100000000000"
											},
											"value": "100000000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"id": 22,
											"name": "Lovelace",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4,
											"src": "430:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "415:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 28,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "477:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 754,
									"src": "445:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 27,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 25,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "453:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "445:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 26,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "464:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 34,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "546:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 754,
									"src": "492:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 33,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 29,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "501:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "492:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 32,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 30,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "521:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "512:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 31,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "532:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 42,
									"name": "Transfer",
									"nameLocation": "568:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "593:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "577:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "615:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "599:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "624:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "619:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "619:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "576:55:0"
									},
									"src": "562:70:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 50,
									"name": "Approval",
									"nameLocation": "643:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "668:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "652:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "696:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "680:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "710:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "705:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "705:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:66:0"
									},
									"src": "637:81:0"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "737:91:0",
										"statements": [
											{
												"expression": {
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 53,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "747:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 56,
														"indexExpression": {
															"expression": {
																"id": 54,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "757:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "761:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "757:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "747:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 57,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "771:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "747:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "747:35:0"
											},
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 60,
														"name": "kill_robot_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "792:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 61,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "811:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "815:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "811:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "792:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "792:29:0"
											}
										]
									},
									"id": 66,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "737:0:0"
									},
									"scope": 754,
									"src": "723:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "862:2:0",
										"statements": []
									},
									"id": 70,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:0:0"
									},
									"scope": 754,
									"src": "833:31:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "897:2:0",
										"statements": []
									},
									"id": 74,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "877:2:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "897:0:0"
									},
									"scope": 754,
									"src": "869:30:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "954:89:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 82,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "972:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "976:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "972:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 84,
																"name": "kill_robot_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "986:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "972:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 81,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "964:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "964:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "964:39:0"
											},
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 88,
															"name": "is_robot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "1013:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 90,
														"indexExpression": {
															"id": 89,
															"name": "robot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1022:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1013:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 91,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "1031:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1013:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1013:23:0"
											}
										]
									},
									"functionSelector": "ae86852f",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRobot",
									"nameLocation": "913:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "robot",
												"nameLocation": "930:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "922:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "941:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "936:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "936:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:26:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "954:0:0"
									},
									"scope": 754,
									"src": "904:139:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1074:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 99,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1092:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1096:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1092:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 101,
																"name": "kill_robot_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "1106:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1092:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1084:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1084:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1084:39:0"
											},
											{
												"expression": {
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 105,
														"name": "kill_robot_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1133:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1160:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1152:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 106,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1152:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1152:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1133:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1133:31:0"
											}
										]
									},
									"functionSelector": "314e99a2",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abdicate",
									"nameLocation": "1057:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1065:2:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1074:0:0"
									},
									"scope": 754,
									"src": "1048:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "1241:51:0",
										"statements": [
											{
												"expression": {
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 122,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1251:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 123,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "1255:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 124,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "1259:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1255:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1251:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "1251:9:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "1278:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1283:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1278:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1270:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1270:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "1270:15:0"
											}
										]
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeAdd",
									"nameLocation": "1185:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1198:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1193:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1193:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1206:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1201:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1201:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1192:16:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "1238:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1233:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1233:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:8:0"
									},
									"scope": 754,
									"src": "1176:116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "1361:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 145,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "1379:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 146,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "1384:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1379:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1371:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1371:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1371:15:0"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "1396:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 151,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1400:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 152,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "1404:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1400:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1396:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "1396:9:0"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeSub",
									"nameLocation": "1306:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1319:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1314:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1314:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1327:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1322:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1322:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1313:16:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "1358:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1353:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1353:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:8:0"
									},
									"scope": 754,
									"src": "1297:115:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "1481:65:0",
										"statements": [
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 166,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "1491:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 167,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1495:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 168,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "1499:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1495:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1491:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1491:9:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 173,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "1518:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1523:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1518:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 176,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 164,
																		"src": "1528:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 177,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 159,
																		"src": "1532:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1528:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 179,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1537:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1528:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1518:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1510:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1510:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "1510:29:0"
											}
										]
									},
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeMul",
									"nameLocation": "1426:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1439:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "1434:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1434:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1447:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "1442:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1442:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:16:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "1478:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "1473:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1473:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1472:8:0"
									},
									"scope": 754,
									"src": "1417:129:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "1615:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 195,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "1633:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1637:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1633:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1625:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1625:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "1625:14:0"
											},
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 200,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1649:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 201,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "1653:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 202,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "1657:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1653:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1649:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "1649:9:0"
											}
										]
									},
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDiv",
									"nameLocation": "1560:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1573:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1568:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1568:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1581:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1576:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1576:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:16:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "1612:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1607:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1607:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1606:8:0"
									},
									"scope": 754,
									"src": "1551:114:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "1745:251:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 217,
																	"name": "is_robot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "1763:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 220,
																"indexExpression": {
																	"expression": {
																		"id": 218,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1772:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1776:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1772:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1763:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1787:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1763:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1755:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1755:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "1755:38:0"
											},
											{
												"expression": {
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 225,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1803:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 228,
														"indexExpression": {
															"expression": {
																"id": 226,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1813:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1817:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1813:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1803:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 230,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "1835:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 233,
																"indexExpression": {
																	"expression": {
																		"id": 231,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1845:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1849:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1845:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1835:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 234,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "1858:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 229,
															"name": "safeSub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1827:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1827:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1803:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1803:62:0"
											},
											{
												"expression": {
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 238,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1875:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 240,
														"indexExpression": {
															"id": 239,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "1885:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1875:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 242,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "1899:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 244,
																"indexExpression": {
																	"id": 243,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "1909:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1899:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 245,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "1914:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 241,
															"name": "safeAdd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "1891:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1891:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1875:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "1875:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 250,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1945:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1949:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1945:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 252,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "1957:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 253,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "1961:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 249,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1936:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "EmitStatement",
												"src": "1931:37:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1985:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 215,
												"id": 257,
												"nodeType": "Return",
												"src": "1978:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1681:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1698:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1690:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "1707:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1702:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1689:25:0"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1736:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1731:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1731:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:14:0"
									},
									"scope": 754,
									"src": "1672:324:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "2079:177:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 269,
																	"name": "is_robot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "2097:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 272,
																"indexExpression": {
																	"expression": {
																		"id": 270,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2106:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2110:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2106:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2097:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2121:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "2097:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2089:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2089:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2089:38:0"
											},
											{
												"expression": {
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 277,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "2137:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 281,
															"indexExpression": {
																"expression": {
																	"id": 278,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2147:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2151:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2147:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2137:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 282,
														"indexExpression": {
															"id": 280,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2159:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2137:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 283,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "2170:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2137:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "2137:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 287,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2200:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2204:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2200:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 289,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2212:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 290,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2221:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 286,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2191:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2191:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "EmitStatement",
												"src": "2186:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2245:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 267,
												"id": 294,
												"nodeType": "Return",
												"src": "2238:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2011:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2027:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2019:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "2041:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2036:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2036:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2018:30:0"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2070:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2065:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2065:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:14:0"
									},
									"scope": 754,
									"src": "2002:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "2353:317:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 308,
																	"name": "is_robot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "2371:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 311,
																"indexExpression": {
																	"expression": {
																		"id": 309,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2380:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2384:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2380:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2371:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2395:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "2371:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2363:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2363:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "2363:38:0"
											},
											{
												"expression": {
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 316,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "2411:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 318,
														"indexExpression": {
															"id": 317,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "2421:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2411:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 320,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "2437:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 322,
																"indexExpression": {
																	"id": 321,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "2447:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2437:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 323,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "2454:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 319,
															"name": "safeSub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "2429:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2429:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2411:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "2411:50:0"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 327,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "2471:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 331,
															"indexExpression": {
																"id": 328,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "2481:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2471:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 332,
														"indexExpression": {
															"expression": {
																"id": 329,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2487:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2491:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2487:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2471:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"baseExpression": {
																		"id": 334,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 34,
																		"src": "2509:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 336,
																	"indexExpression": {
																		"id": 335,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 298,
																		"src": "2519:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2509:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 339,
																"indexExpression": {
																	"expression": {
																		"id": 337,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2525:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2529:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2525:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2509:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 340,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "2538:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 333,
															"name": "safeSub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "2501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2501:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2471:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "2471:74:0"
											},
											{
												"expression": {
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 344,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "2555:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 346,
														"indexExpression": {
															"id": 345,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "2565:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2555:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 348,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "2579:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 350,
																"indexExpression": {
																	"id": 349,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "2589:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2579:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 351,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "2594:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 347,
															"name": "safeAdd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "2571:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2571:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2555:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "2555:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 356,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "2625:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 357,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "2631:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 358,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "2635:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 355,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "2616:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2616:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "EmitStatement",
												"src": "2611:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2659:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 306,
												"id": 362,
												"nodeType": "Return",
												"src": "2652:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2271:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2292:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2284:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2306:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2298:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "2315:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2310:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2310:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:39:0"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2339:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2339:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2338:14:0"
									},
									"scope": 754,
									"src": "2262:408:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "2912:1624:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 392,
																	"name": "is_robot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "2930:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 395,
																"indexExpression": {
																	"expression": {
																		"id": 393,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2939:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2943:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2939:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2930:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2954:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "2930:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2922:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "2922:38:0"
											},
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "2975:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 752,
														"src": "2970:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 400,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2970:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 402,
												"nodeType": "VariableDeclarationStatement",
												"src": "2970:10:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 403,
														"name": "to1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "2993:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3006:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2998:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 404,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2998:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2998:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2993:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 435,
												"nodeType": "IfStatement",
												"src": "2990:134:0",
												"trueBody": {
													"id": 434,
													"nodeType": "Block",
													"src": "3011:113:0",
													"statements": [
														{
															"expression": {
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 409,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "3012:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 411,
																			"name": "total",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "3028:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 412,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "3034:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 410,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "3020:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3020:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3012:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 415,
															"nodeType": "ExpressionStatement",
															"src": "3012:27:0"
														},
														{
															"expression": {
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 416,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "3040:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 418,
																	"indexExpression": {
																		"id": 417,
																		"name": "to1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "3050:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3040:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 420,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "3065:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 422,
																			"indexExpression": {
																				"id": 421,
																				"name": "to1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 366,
																				"src": "3075:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3065:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 423,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "3080:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 419,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "3057:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3040:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 426,
															"nodeType": "ExpressionStatement",
															"src": "3040:45:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 428,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3100:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3104:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3100:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 430,
																		"name": "to1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "3112:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 431,
																		"name": "size",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "3117:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 427,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "3091:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3091:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 433,
															"nodeType": "EmitStatement",
															"src": "3086:36:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 436,
														"name": "to2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "3136:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3149:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3141:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 437,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3141:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3141:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3136:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 468,
												"nodeType": "IfStatement",
												"src": "3133:135:0",
												"trueBody": {
													"id": 467,
													"nodeType": "Block",
													"src": "3154:114:0",
													"statements": [
														{
															"expression": {
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 442,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "3155:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 444,
																			"name": "total",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "3171:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 445,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "3177:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 443,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "3163:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3163:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3155:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 448,
															"nodeType": "ExpressionStatement",
															"src": "3155:27:0"
														},
														{
															"expression": {
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 449,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "3183:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 451,
																	"indexExpression": {
																		"id": 450,
																		"name": "to2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "3193:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3183:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 453,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "3208:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 455,
																			"indexExpression": {
																				"id": 454,
																				"name": "to2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 368,
																				"src": "3218:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3208:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 456,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "3223:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 452,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "3200:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3200:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3183:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 459,
															"nodeType": "ExpressionStatement",
															"src": "3183:45:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 461,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3243:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3247:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3243:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 463,
																		"name": "to2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "3255:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 464,
																		"name": "size",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "3260:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 460,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "3234:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3234:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 466,
															"nodeType": "EmitStatement",
															"src": "3229:36:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 469,
														"name": "to3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "3280:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3293:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 470,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3285:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3285:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3280:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 501,
												"nodeType": "IfStatement",
												"src": "3277:135:0",
												"trueBody": {
													"id": 500,
													"nodeType": "Block",
													"src": "3298:114:0",
													"statements": [
														{
															"expression": {
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 475,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "3299:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 477,
																			"name": "total",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "3315:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 478,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "3321:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 476,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "3307:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3307:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3299:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 481,
															"nodeType": "ExpressionStatement",
															"src": "3299:27:0"
														},
														{
															"expression": {
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 482,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "3327:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 484,
																	"indexExpression": {
																		"id": 483,
																		"name": "to3",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "3337:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3327:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 486,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "3352:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 488,
																			"indexExpression": {
																				"id": 487,
																				"name": "to3",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 370,
																				"src": "3362:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3352:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 489,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "3367:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 485,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "3344:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3344:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3327:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 492,
															"nodeType": "ExpressionStatement",
															"src": "3327:45:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 494,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3387:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3391:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3387:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 496,
																		"name": "to3",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "3399:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 497,
																		"name": "size",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "3404:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 493,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "3378:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3378:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 499,
															"nodeType": "EmitStatement",
															"src": "3373:36:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 502,
														"name": "to4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3424:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3437:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3429:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 503,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3429:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3429:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3424:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 534,
												"nodeType": "IfStatement",
												"src": "3421:135:0",
												"trueBody": {
													"id": 533,
													"nodeType": "Block",
													"src": "3442:114:0",
													"statements": [
														{
															"expression": {
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 508,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "3443:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 510,
																			"name": "total",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "3459:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 511,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "3465:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 509,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "3451:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3451:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3443:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 514,
															"nodeType": "ExpressionStatement",
															"src": "3443:27:0"
														},
														{
															"expression": {
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 515,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "3471:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 517,
																	"indexExpression": {
																		"id": 516,
																		"name": "to4",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "3481:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3471:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 519,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "3496:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 521,
																			"indexExpression": {
																				"id": 520,
																				"name": "to4",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "3506:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3496:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 522,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "3511:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 518,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "3488:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3488:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3471:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 525,
															"nodeType": "ExpressionStatement",
															"src": "3471:45:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 527,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3531:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3535:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3531:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 529,
																		"name": "to4",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "3543:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 530,
																		"name": "size",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "3548:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 526,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "3522:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3522:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 532,
															"nodeType": "EmitStatement",
															"src": "3517:36:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 535,
														"name": "to5",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "3568:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3581:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3573:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 536,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3573:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3573:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3568:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 567,
												"nodeType": "IfStatement",
												"src": "3565:135:0",
												"trueBody": {
													"id": 566,
													"nodeType": "Block",
													"src": "3586:114:0",
													"statements": [
														{
															"expression": {
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 541,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "3587:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 543,
																			"name": "total",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "3603:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 544,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "3609:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 542,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "3595:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3595:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3587:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 547,
															"nodeType": "ExpressionStatement",
															"src": "3587:27:0"
														},
														{
															"expression": {
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 548,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "3615:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 550,
																	"indexExpression": {
																		"id": 549,
																		"name": "to5",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "3625:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3615:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 552,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "3640:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 554,
																			"indexExpression": {
																				"id": 553,
																				"name": "to5",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 374,
																				"src": "3650:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3640:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 555,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "3655:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 551,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "3632:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3632:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3615:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 558,
															"nodeType": "ExpressionStatement",
															"src": "3615:45:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 560,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3675:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3679:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3675:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 562,
																		"name": "to5",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "3687:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 563,
																		"name": "size",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "3692:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 559,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "3666:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3666:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 565,
															"nodeType": "EmitStatement",
															"src": "3661:36:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 568,
														"name": "to6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "3712:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3725:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3717:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 569,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3717:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3717:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3712:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "3709:135:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "3730:114:0",
													"statements": [
														{
															"expression": {
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 574,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "3731:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 576,
																			"name": "total",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "3747:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 577,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "3753:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 575,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "3739:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3739:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3731:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 580,
															"nodeType": "ExpressionStatement",
															"src": "3731:27:0"
														},
														{
															"expression": {
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 581,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "3759:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 583,
																	"indexExpression": {
																		"id": 582,
																		"name": "to6",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "3769:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3759:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 585,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "3784:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 587,
																			"indexExpression": {
																				"id": 586,
																				"name": "to6",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 376,
																				"src": "3794:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3784:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 588,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "3799:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 584,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "3776:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3776:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3759:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 591,
															"nodeType": "ExpressionStatement",
															"src": "3759:45:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 593,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3819:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3823:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3819:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "to6",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "3831:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "size",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "3836:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 592,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "3810:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3810:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "3805:36:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 601,
														"name": "to7",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "3856:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3869:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3861:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 602,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3861:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3856:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "3853:135:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "3874:114:0",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 607,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "3875:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 609,
																			"name": "total",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "3891:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 610,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "3897:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 608,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "3883:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3883:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3875:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "3875:27:0"
														},
														{
															"expression": {
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 614,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "3903:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 616,
																	"indexExpression": {
																		"id": 615,
																		"name": "to7",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "3913:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3903:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 618,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "3928:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 620,
																			"indexExpression": {
																				"id": 619,
																				"name": "to7",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 378,
																				"src": "3938:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3928:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 621,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "3943:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 617,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "3920:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3920:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3903:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "3903:45:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 626,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3963:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3967:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3963:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 628,
																		"name": "to7",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "3975:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 629,
																		"name": "size",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "3980:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 625,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "3954:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3954:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "EmitStatement",
															"src": "3949:36:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "to8",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "4000:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4013:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4005:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 635,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4005:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4005:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4000:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 666,
												"nodeType": "IfStatement",
												"src": "3997:135:0",
												"trueBody": {
													"id": 665,
													"nodeType": "Block",
													"src": "4018:114:0",
													"statements": [
														{
															"expression": {
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 640,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "4019:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 642,
																			"name": "total",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4035:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 643,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "4041:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 641,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "4027:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4027:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4019:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 646,
															"nodeType": "ExpressionStatement",
															"src": "4019:27:0"
														},
														{
															"expression": {
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 647,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "4047:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 649,
																	"indexExpression": {
																		"id": 648,
																		"name": "to8",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 380,
																		"src": "4057:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4047:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 651,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "4072:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 653,
																			"indexExpression": {
																				"id": 652,
																				"name": "to8",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 380,
																				"src": "4082:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4072:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 654,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "4087:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 650,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "4064:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4064:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4047:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 657,
															"nodeType": "ExpressionStatement",
															"src": "4047:45:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 659,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4107:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4111:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4107:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 661,
																		"name": "to8",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 380,
																		"src": "4119:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 662,
																		"name": "size",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "4124:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 658,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "4098:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 664,
															"nodeType": "EmitStatement",
															"src": "4093:36:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 667,
														"name": "to9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "4144:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4157:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4149:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 668,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4149:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4149:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4144:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"nodeType": "IfStatement",
												"src": "4141:135:0",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "4162:114:0",
													"statements": [
														{
															"expression": {
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 673,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "4163:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 675,
																			"name": "total",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4179:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 676,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "4185:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 674,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "4171:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4171:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4163:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 679,
															"nodeType": "ExpressionStatement",
															"src": "4163:27:0"
														},
														{
															"expression": {
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 680,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "4191:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 682,
																	"indexExpression": {
																		"id": 681,
																		"name": "to9",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 382,
																		"src": "4201:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4191:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 684,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "4216:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 686,
																			"indexExpression": {
																				"id": 685,
																				"name": "to9",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 382,
																				"src": "4226:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4216:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 687,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "4231:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 683,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "4208:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4208:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4191:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 690,
															"nodeType": "ExpressionStatement",
															"src": "4191:45:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 692,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4251:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4255:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4251:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 694,
																		"name": "to9",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 382,
																		"src": "4263:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "size",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "4268:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 691,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "4242:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4242:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "EmitStatement",
															"src": "4237:36:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "to10",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "4288:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4302:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4294:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 701,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4294:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4294:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4288:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 732,
												"nodeType": "IfStatement",
												"src": "4285:139:0",
												"trueBody": {
													"id": 731,
													"nodeType": "Block",
													"src": "4307:117:0",
													"statements": [
														{
															"expression": {
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 706,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "4308:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 708,
																			"name": "total",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4324:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 709,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "4330:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 707,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "4316:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4316:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4308:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 712,
															"nodeType": "ExpressionStatement",
															"src": "4308:27:0"
														},
														{
															"expression": {
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 713,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "4336:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 715,
																	"indexExpression": {
																		"id": 714,
																		"name": "to10",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "4346:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4336:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 717,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "4362:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 719,
																			"indexExpression": {
																				"id": 718,
																				"name": "to10",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "4372:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4362:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 720,
																			"name": "size",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "4378:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 716,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "4354:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4354:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4336:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 723,
															"nodeType": "ExpressionStatement",
															"src": "4336:47:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 725,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4398:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4402:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4398:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 727,
																		"name": "to10",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "4410:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 728,
																		"name": "size",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "4416:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 724,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "4389:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4389:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 730,
															"nodeType": "EmitStatement",
															"src": "4384:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 733,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "4437:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4444:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4437:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 749,
												"nodeType": "IfStatement",
												"src": "4434:73:0",
												"trueBody": {
													"expression": {
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"baseExpression": {
																"id": 736,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "4446:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 739,
															"indexExpression": {
																"expression": {
																	"id": 737,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4456:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4460:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4456:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "IndexAccess",
															"src": "4446:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 741,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "4478:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 744,
																	"indexExpression": {
																		"expression": {
																			"id": 742,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4488:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4492:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4488:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4478:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 745,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "4501:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 740,
																"name": "safeSub",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "4470:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4470:37:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4446:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 748,
													"nodeType": "ExpressionStatement",
													"src": "4446:61:0"
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4525:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 390,
												"id": 751,
												"nodeType": "Return",
												"src": "4518:11:0"
											}
										]
									},
									"functionSelector": "e8e11b2b",
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferBatch",
									"nameLocation": "2684:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "to1",
												"nameLocation": "2706:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2698:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to2",
												"nameLocation": "2718:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2710:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "to3",
												"nameLocation": "2730:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2722:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to4",
												"nameLocation": "2742:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2734:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2734:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "to5",
												"nameLocation": "2754:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2746:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "to6",
												"nameLocation": "2794:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2786:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "to7",
												"nameLocation": "2806:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2798:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "to8",
												"nameLocation": "2818:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2810:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "to9",
												"nameLocation": "2830:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2822:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "to10",
												"nameLocation": "2842:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2834:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2834:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "size",
												"nameLocation": "2880:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2875:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2875:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2697:188:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "sucess",
												"nameLocation": "2905:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2900:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2900:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2899:13:0"
									},
									"scope": 754,
									"src": "2675:1861:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 755,
							"src": "127:4411:0",
							"usedErrors": []
						}
					],
					"src": "101:4437:0"
				},
				"id": 0
			}
		}
	}
}