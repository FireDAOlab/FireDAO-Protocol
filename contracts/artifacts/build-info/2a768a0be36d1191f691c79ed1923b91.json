{
	"id": "2a768a0be36d1191f691c79ed1923b91",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FlameExchangeFdt.sol": {
				"content": "pragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./lib/TransferHelper.sol\";\n\ncontract FlameExchangeFdt is Ownable{\n\n    bool public status;\n    uint256 public minAmount;\n    address public flame;\n    address public fdt;\n    uint256 public exchangeRatio;\n\n    constructor(address _fdt,address _flame){\n        fdt = _fdt;\n        flame = _flame;\n        exchangeRatio= 1000;\n    }\n    function setstatus() public onlyOwner{\n        status = !status;\n    }\n    function setexchangeRatio(uint256 _exchangeRatio) public onlyOwner {\n        exchangeRatio = _exchangeRatio;\n    }\n    function setMinAmount(uint256 _amount) public onlyOwner{\n        minAmount = _amount;\n    }\n    function backToken(uint256 _amount) public onlyOwner{\n        require(IERC20(fdt).balanceOf(address(this)) >= _amount);\n        TransferHelper.safeTransfer(fdt, msg.sender, _amount);\n    }\n    function exchange(uint256 _amount) public {\n        require(_amount >= minAmount,\"The quantity you buy must be greater than the minimum quantity\");\n        TransferHelper.safeTransferFrom(flame, msg.sender, address(this), _amount);\n        TransferHelper.safeTransfer(fdt, msg.sender, _amount/exchangeRatio);\n    }\n}"
			},
			"contracts/lib/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >=0.6.0;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeApprove(address token, address to, uint value) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: APPROVE_FAILED');\n    }\n\n    function safeTransfer(address token, address to, uint value) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED');\n    }\n\n    function safeTransferFrom(address token, address from, address to, uint value) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');\n    }\n\n    function safeTransferETH(address to, uint value) internal {\n        (bool success,) = to.call{value:value}(new bytes(0));\n        require(success, 'TransferHelper: ETH_TRANSFER_FAILED');\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/FlameExchangeFdt.sol": {
				"FlameExchangeFdt": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_fdt",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_flame",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "backToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "exchange",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exchangeRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fdt",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "flame",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "setMinAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_exchangeRatio",
									"type": "uint256"
								}
							],
							"name": "setexchangeRatio",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setstatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FlameExchangeFdt.sol\":171:1277  contract FlameExchangeFdt is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FlameExchangeFdt.sol\":353:473  constructor(address _fdt,address _flame){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"contracts/FlameExchangeFdt.sol\":403:406  fdt */\n  0x03\n    /* \"contracts/FlameExchangeFdt.sol\":403:413  fdt = _fdt */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/FlameExchangeFdt.sol\":423:428  flame */\n  0x02\n    /* \"contracts/FlameExchangeFdt.sol\":423:437  flame = _flame */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/FlameExchangeFdt.sol\":462:466  1000 */\n  0x03e8\n    /* \"contracts/FlameExchangeFdt.sol\":447:460  exchangeRatio */\n  0x04\n    /* \"contracts/FlameExchangeFdt.sol\":447:466  exchangeRatio= 1000 */\n  sstore\n    /* \"contracts/FlameExchangeFdt.sol\":171:1277  contract FlameExchangeFdt is Ownable{... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_15:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_18:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_20:\n    /* \"#utility.yul\":375:415   */\n  tag_21\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_22\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_15\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_16:\n    /* \"contracts/FlameExchangeFdt.sol\":171:1277  contract FlameExchangeFdt is Ownable{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FlameExchangeFdt.sol\":171:1277  contract FlameExchangeFdt is Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5356172e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x92ccd3a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9b2cb5d8\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x5356172e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x897b0637\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x14c98009\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x200d2ed2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x22d392cb\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4006ccc5\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x41458c86\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x53556559\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/FlameExchangeFdt.sol\":478:548  function setstatus() public onlyOwner{... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/FlameExchangeFdt.sol\":214:232  bool public status */\n    tag_4:\n      sload(0x00)\n      tag_20\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":179:193   */\n      swap1\n      iszero\n        /* \"#utility.yul\":172:194   */\n      iszero\n        /* \"#utility.yul\":154:195   */\n      dup2\n      mstore\n        /* \"#utility.yul\":142:144   */\n      0x20\n        /* \"#utility.yul\":127:145   */\n      add\n        /* \"contracts/FlameExchangeFdt.sol\":214:232  bool public status */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FlameExchangeFdt.sol\":294:312  address public fdt */\n    tag_5:\n      sload(0x03)\n      tag_24\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_24:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":370:402   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":352:403   */\n      dup2\n      mstore\n        /* \"#utility.yul\":340:342   */\n      0x20\n        /* \"#utility.yul\":325:343   */\n      add\n        /* \"contracts/FlameExchangeFdt.sol\":294:312  address public fdt */\n      tag_22\n        /* \"#utility.yul\":206:409   */\n      jump\n        /* \"contracts/FlameExchangeFdt.sol\":318:346  uint256 public exchangeRatio */\n    tag_6:\n      tag_28\n      sload(0x04)\n      dup2\n      jump\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":560:585   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":548:550   */\n      0x20\n        /* \"#utility.yul\":533:551   */\n      add\n        /* \"contracts/FlameExchangeFdt.sol\":318:346  uint256 public exchangeRatio */\n      tag_22\n        /* \"#utility.yul\":414:591   */\n      jump\n        /* \"contracts/FlameExchangeFdt.sol\":768:956  function backToken(uint256 _amount) public onlyOwner{... */\n    tag_7:\n      tag_18\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"contracts/FlameExchangeFdt.sol\":961:1275  function exchange(uint256 _amount) public {... */\n    tag_8:\n      tag_18\n      tag_37\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n        /* \"contracts/FlameExchangeFdt.sol\":268:288  address public flame */\n    tag_9:\n      sload(0x02)\n      tag_24\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_18\n      tag_43\n      jump\t// in\n        /* \"contracts/FlameExchangeFdt.sol\":672:763  function setMinAmount(uint256 _amount) public onlyOwner{... */\n    tag_11:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_24)\n        /* \"contracts/FlameExchangeFdt.sol\":553:667  function setexchangeRatio(uint256 _exchangeRatio) public onlyOwner {... */\n    tag_13:\n      tag_18\n      tag_51\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"contracts/FlameExchangeFdt.sol\":238:262  uint256 public minAmount */\n    tag_14:\n      tag_28\n      sload(0x01)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_18\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"contracts/FlameExchangeFdt.sol\":478:548  function setstatus() public onlyOwner{... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_61:\n        /* \"contracts/FlameExchangeFdt.sol\":535:541  status */\n      0x00\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n        /* \"contracts/FlameExchangeFdt.sol\":525:541  status = !status */\n      dup2\n      and\n      shl(0xa0, 0x01)\n        /* \"contracts/FlameExchangeFdt.sol\":535:541  status */\n      swap2\n      dup3\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/FlameExchangeFdt.sol\":534:541  !status */\n      iszero\n        /* \"contracts/FlameExchangeFdt.sol\":525:541  status = !status */\n      swap1\n      swap2\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts/FlameExchangeFdt.sol\":478:548  function setstatus() public onlyOwner{... */\n      jump\t// out\n        /* \"contracts/FlameExchangeFdt.sol\":768:956  function backToken(uint256 _amount) public onlyOwner{... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_65:\n        /* \"contracts/FlameExchangeFdt.sol\":845:848  fdt */\n      sload(0x03)\n        /* \"contracts/FlameExchangeFdt.sol\":838:874  IERC20(fdt).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/FlameExchangeFdt.sol\":868:872  this */\n      address\n        /* \"contracts/FlameExchangeFdt.sol\":838:874  IERC20(fdt).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":352:403   */\n      mstore\n        /* \"contracts/FlameExchangeFdt.sol\":878:885  _amount */\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FlameExchangeFdt.sol\":845:848  fdt */\n      and\n      swap1\n        /* \"contracts/FlameExchangeFdt.sol\":838:859  IERC20(fdt).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":325:343   */\n      0x24\n      add\n        /* \"contracts/FlameExchangeFdt.sol\":838:874  IERC20(fdt).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"contracts/FlameExchangeFdt.sol\":838:885  IERC20(fdt).balanceOf(address(this)) >= _amount */\n      lt\n      iszero\n        /* \"contracts/FlameExchangeFdt.sol\":830:886  require(IERC20(fdt).balanceOf(address(this)) >= _amount) */\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n        /* \"contracts/FlameExchangeFdt.sol\":924:927  fdt */\n      sload(0x03)\n        /* \"contracts/FlameExchangeFdt.sol\":896:949  TransferHelper.safeTransfer(fdt, msg.sender, _amount) */\n      tag_73\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FlameExchangeFdt.sol\":924:927  fdt */\n      and\n        /* \"contracts/FlameExchangeFdt.sol\":929:939  msg.sender */\n      caller\n        /* \"contracts/FlameExchangeFdt.sol\":941:948  _amount */\n      dup4\n        /* \"contracts/FlameExchangeFdt.sol\":896:923  TransferHelper.safeTransfer */\n      tag_74\n        /* \"contracts/FlameExchangeFdt.sol\":896:949  TransferHelper.safeTransfer(fdt, msg.sender, _amount) */\n      jump\t// in\n    tag_73:\n        /* \"contracts/FlameExchangeFdt.sol\":768:956  function backToken(uint256 _amount) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"contracts/FlameExchangeFdt.sol\":961:1275  function exchange(uint256 _amount) public {... */\n    tag_38:\n        /* \"contracts/FlameExchangeFdt.sol\":1032:1041  minAmount */\n      sload(0x01)\n        /* \"contracts/FlameExchangeFdt.sol\":1021:1028  _amount */\n      dup2\n        /* \"contracts/FlameExchangeFdt.sol\":1021:1041  _amount >= minAmount */\n      lt\n      iszero\n        /* \"contracts/FlameExchangeFdt.sol\":1013:1107  require(_amount >= minAmount,\"The quantity you buy must be greater than the minimum quantity\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1463:1465   */\n      0x20\n        /* \"contracts/FlameExchangeFdt.sol\":1013:1107  require(_amount >= minAmount,\"The quantity you buy must be greater than the minimum quantity\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1445:1466   */\n      mstore\n        /* \"#utility.yul\":1502:1504   */\n      0x3e\n        /* \"#utility.yul\":1482:1500   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1475:1505   */\n      mstore\n        /* \"#utility.yul\":1541:1575   */\n      0x546865207175616e7469747920796f7520627579206d75737420626520677265\n        /* \"#utility.yul\":1521:1539   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1514:1576   */\n      mstore\n        /* \"#utility.yul\":1612:1644   */\n      0x61746572207468616e20746865206d696e696d756d207175616e746974790000\n        /* \"#utility.yul\":1592:1610   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1585:1645   */\n      mstore\n        /* \"#utility.yul\":1662:1681   */\n      0x84\n      add\n        /* \"contracts/FlameExchangeFdt.sol\":1013:1107  require(_amount >= minAmount,\"The quantity you buy must be greater than the minimum quantity\") */\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"contracts/FlameExchangeFdt.sol\":1149:1154  flame */\n      sload(0x02)\n        /* \"contracts/FlameExchangeFdt.sol\":1117:1191  TransferHelper.safeTransferFrom(flame, msg.sender, address(this), _amount) */\n      tag_79\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FlameExchangeFdt.sol\":1149:1154  flame */\n      and\n        /* \"contracts/FlameExchangeFdt.sol\":1156:1166  msg.sender */\n      caller\n        /* \"contracts/FlameExchangeFdt.sol\":1176:1180  this */\n      address\n        /* \"contracts/FlameExchangeFdt.sol\":1183:1190  _amount */\n      dup5\n        /* \"contracts/FlameExchangeFdt.sol\":1117:1148  TransferHelper.safeTransferFrom */\n      tag_80\n        /* \"contracts/FlameExchangeFdt.sol\":1117:1191  TransferHelper.safeTransferFrom(flame, msg.sender, address(this), _amount) */\n      jump\t// in\n    tag_79:\n        /* \"contracts/FlameExchangeFdt.sol\":1229:1232  fdt */\n      sload(0x03)\n        /* \"contracts/FlameExchangeFdt.sol\":1254:1267  exchangeRatio */\n      sload(0x04)\n        /* \"contracts/FlameExchangeFdt.sol\":1201:1268  TransferHelper.safeTransfer(fdt, msg.sender, _amount/exchangeRatio) */\n      tag_73\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FlameExchangeFdt.sol\":1229:1232  fdt */\n      and\n      swap1\n        /* \"contracts/FlameExchangeFdt.sol\":1234:1244  msg.sender */\n      caller\n      swap1\n        /* \"contracts/FlameExchangeFdt.sol\":1246:1267  _amount/exchangeRatio */\n      tag_82\n      swap1\n        /* \"contracts/FlameExchangeFdt.sol\":1246:1253  _amount */\n      dup6\n        /* \"contracts/FlameExchangeFdt.sol\":1246:1267  _amount/exchangeRatio */\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"contracts/FlameExchangeFdt.sol\":1201:1228  TransferHelper.safeTransfer */\n      tag_74\n        /* \"contracts/FlameExchangeFdt.sol\":1201:1268  TransferHelper.safeTransfer(fdt, msg.sender, _amount/exchangeRatio) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/FlameExchangeFdt.sol\":672:763  function setMinAmount(uint256 _amount) public onlyOwner{... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_90:\n        /* \"contracts/FlameExchangeFdt.sol\":737:746  minAmount */\n      0x01\n        /* \"contracts/FlameExchangeFdt.sol\":737:756  minAmount = _amount */\n      sstore\n        /* \"contracts/FlameExchangeFdt.sol\":672:763  function setMinAmount(uint256 _amount) public onlyOwner{... */\n      jump\t// out\n        /* \"contracts/FlameExchangeFdt.sol\":553:667  function setexchangeRatio(uint256 _exchangeRatio) public onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/FlameExchangeFdt.sol\":630:643  exchangeRatio */\n      0x04\n        /* \"contracts/FlameExchangeFdt.sol\":630:660  exchangeRatio = _exchangeRatio */\n      sstore\n        /* \"contracts/FlameExchangeFdt.sol\":553:667  function setexchangeRatio(uint256 _exchangeRatio) public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2116:2118   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2098:2119   */\n      mstore\n        /* \"#utility.yul\":2155:2157   */\n      0x26\n        /* \"#utility.yul\":2135:2153   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2128:2158   */\n      mstore\n        /* \"#utility.yul\":2194:2228   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2174:2192   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2167:2229   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":2245:2263   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2238:2274   */\n      mstore\n        /* \"#utility.yul\":2291:2310   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_77\n        /* \"#utility.yul\":1914:2316   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2523:2525   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2505:2526   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2542:2560   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2535:2565   */\n      mstore\n        /* \"#utility.yul\":2601:2635   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2581:2599   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2574:2636   */\n      mstore\n        /* \"#utility.yul\":2653:2671   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_77\n        /* \"#utility.yul\":2321:2677   */\n      jump\n        /* \"contracts/lib/TransferHelper.sol\":572:929  function safeTransfer(address token, address to, uint value) internal {... */\n    tag_74:\n        /* \"contracts/lib/TransferHelper.sol\":765:810  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2874:2906   */\n      dup5\n      dup2\n      and\n        /* \"contracts/lib/TransferHelper.sol\":765:810  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2856:2907   */\n      mstore\n        /* \"#utility.yul\":2923:2941   */\n      0x44\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":2916:2950   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/lib/TransferHelper.sol\":765:810  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":2829:2847   */\n      0x64\n      swap1\n      swap3\n      add\n        /* \"contracts/lib/TransferHelper.sol\":765:810  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"contracts/lib/TransferHelper.sol\":754:811  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"contracts/lib/TransferHelper.sol\":754:764  token.call */\n      swap1\n      dup8\n      and\n      swap2\n        /* \"contracts/lib/TransferHelper.sol\":754:811  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_113\n      swap2\n        /* \"contracts/lib/TransferHelper.sol\":765:810  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      swap1\n        /* \"contracts/lib/TransferHelper.sol\":754:811  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_114\n      jump\t// in\n    tag_113:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_117\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_116)\n    tag_117:\n      0x60\n      swap2\n      pop\n    tag_116:\n      pop\n        /* \"contracts/lib/TransferHelper.sol\":718:811  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/lib/TransferHelper.sol\":829:836  success */\n      dup2\n        /* \"contracts/lib/TransferHelper.sol\":829:886  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_120\n      jumpi\n      pop\n        /* \"contracts/lib/TransferHelper.sol\":841:852  data.length */\n      dup1\n      mload\n        /* \"contracts/lib/TransferHelper.sol\":841:857  data.length == 0 */\n      iszero\n      dup1\n        /* \"contracts/lib/TransferHelper.sol\":841:885  data.length == 0 || abi.decode(data, (bool)) */\n      tag_120\n      jumpi\n      pop\n        /* \"contracts/lib/TransferHelper.sol\":872:876  data */\n      dup1\n        /* \"contracts/lib/TransferHelper.sol\":861:885  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"contracts/lib/TransferHelper.sol\":821:922  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3862:3864   */\n      0x20\n        /* \"contracts/lib/TransferHelper.sol\":821:922  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3844:3865   */\n      mstore\n        /* \"#utility.yul\":3901:3903   */\n      0x1f\n        /* \"#utility.yul\":3881:3899   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3874:3904   */\n      mstore\n        /* \"#utility.yul\":3940:3973   */\n      0x5472616e7366657248656c7065723a205452414e534645525f4641494c454400\n        /* \"#utility.yul\":3920:3938   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3913:3974   */\n      mstore\n        /* \"#utility.yul\":3991:4009   */\n      0x64\n      add\n        /* \"contracts/lib/TransferHelper.sol\":821:922  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n      tag_77\n        /* \"#utility.yul\":3660:4015   */\n      jump\n        /* \"contracts/lib/TransferHelper.sol\":821:922  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n    tag_122:\n        /* \"contracts/lib/TransferHelper.sol\":642:929  {... */\n      pop\n      pop\n        /* \"contracts/lib/TransferHelper.sol\":572:929  function safeTransfer(address token, address to, uint value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lib/TransferHelper.sol\":935:1333  function safeTransferFrom(address token, address from, address to, uint value) internal {... */\n    tag_80:\n        /* \"contracts/lib/TransferHelper.sol\":1158:1209  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4278:4293   */\n      dup6\n      dup2\n      and\n        /* \"contracts/lib/TransferHelper.sol\":1158:1209  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4260:4294   */\n      mstore\n        /* \"#utility.yul\":4330:4345   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":4310:4328   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":4303:4346   */\n      mstore\n        /* \"#utility.yul\":4362:4380   */\n      0x64\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":4355:4389   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/lib/TransferHelper.sol\":1158:1209  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":4195:4213   */\n      0x84\n      swap1\n      swap3\n      add\n        /* \"contracts/lib/TransferHelper.sol\":1158:1209  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"contracts/lib/TransferHelper.sol\":1147:1210  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"contracts/lib/TransferHelper.sol\":1147:1157  token.call */\n      swap1\n      dup9\n      and\n      swap2\n        /* \"contracts/lib/TransferHelper.sol\":1147:1210  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      tag_128\n      swap2\n        /* \"contracts/lib/TransferHelper.sol\":1158:1209  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      swap1\n        /* \"contracts/lib/TransferHelper.sol\":1147:1210  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      tag_114\n      jump\t// in\n    tag_128:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_131\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_130)\n    tag_131:\n      0x60\n      swap2\n      pop\n    tag_130:\n      pop\n        /* \"contracts/lib/TransferHelper.sol\":1111:1210  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/lib/TransferHelper.sol\":1228:1235  success */\n      dup2\n        /* \"contracts/lib/TransferHelper.sol\":1228:1285  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_134\n      jumpi\n      pop\n        /* \"contracts/lib/TransferHelper.sol\":1240:1251  data.length */\n      dup1\n      mload\n        /* \"contracts/lib/TransferHelper.sol\":1240:1256  data.length == 0 */\n      iszero\n      dup1\n        /* \"contracts/lib/TransferHelper.sol\":1240:1284  data.length == 0 || abi.decode(data, (bool)) */\n      tag_134\n      jumpi\n      pop\n        /* \"contracts/lib/TransferHelper.sol\":1271:1275  data */\n      dup1\n        /* \"contracts/lib/TransferHelper.sol\":1260:1284  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_134:\n        /* \"contracts/lib/TransferHelper.sol\":1220:1326  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4602:4604   */\n      0x20\n        /* \"contracts/lib/TransferHelper.sol\":1220:1326  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4584:4605   */\n      mstore\n        /* \"#utility.yul\":4641:4643   */\n      0x24\n        /* \"#utility.yul\":4621:4639   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4614:4644   */\n      mstore\n        /* \"#utility.yul\":4680:4714   */\n      0x5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641\n        /* \"#utility.yul\":4660:4678   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4653:4715   */\n      mstore\n      shl(0xe2, 0x12531151)\n        /* \"#utility.yul\":4731:4749   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4724:4758   */\n      mstore\n        /* \"#utility.yul\":4775:4794   */\n      0x84\n      add\n        /* \"contracts/lib/TransferHelper.sol\":1220:1326  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n      tag_77\n        /* \"#utility.yul\":4400:4800   */\n      jump\n        /* \"contracts/lib/TransferHelper.sol\":1220:1326  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n    tag_135:\n        /* \"contracts/lib/TransferHelper.sol\":1023:1333  {... */\n      pop\n      pop\n        /* \"contracts/lib/TransferHelper.sol\":935:1333  function safeTransferFrom(address token, address from, address to, uint value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":596:776   */\n    tag_34:\n        /* \"#utility.yul\":655:661   */\n      0x00\n        /* \"#utility.yul\":708:710   */\n      0x20\n        /* \"#utility.yul\":696:705   */\n      dup3\n        /* \"#utility.yul\":687:694   */\n      dup5\n        /* \"#utility.yul\":683:706   */\n      sub\n        /* \"#utility.yul\":679:711   */\n      slt\n        /* \"#utility.yul\":676:728   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":721:722   */\n      dup1\n        /* \"#utility.yul\":714:726   */\n      revert\n        /* \"#utility.yul\":676:728   */\n    tag_145:\n      pop\n        /* \"#utility.yul\":747:770   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":596:776   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":781:1067   */\n    tag_58:\n        /* \"#utility.yul\":840:846   */\n      0x00\n        /* \"#utility.yul\":893:895   */\n      0x20\n        /* \"#utility.yul\":881:890   */\n      dup3\n        /* \"#utility.yul\":872:879   */\n      dup5\n        /* \"#utility.yul\":868:891   */\n      sub\n        /* \"#utility.yul\":864:896   */\n      slt\n        /* \"#utility.yul\":861:913   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":909:910   */\n      0x00\n        /* \"#utility.yul\":906:907   */\n      dup1\n        /* \"#utility.yul\":899:911   */\n      revert\n        /* \"#utility.yul\":861:913   */\n    tag_147:\n        /* \"#utility.yul\":935:958   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":987:1018   */\n      dup2\n      and\n        /* \"#utility.yul\":977:1019   */\n      dup2\n      eq\n        /* \"#utility.yul\":967:1037   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1030:1031   */\n      dup1\n        /* \"#utility.yul\":1023:1035   */\n      revert\n        /* \"#utility.yul\":967:1037   */\n    tag_148:\n        /* \"#utility.yul\":1056:1061   */\n      swap4\n        /* \"#utility.yul\":781:1067   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1072:1256   */\n    tag_71:\n        /* \"#utility.yul\":1142:1148   */\n      0x00\n        /* \"#utility.yul\":1195:1197   */\n      0x20\n        /* \"#utility.yul\":1183:1192   */\n      dup3\n        /* \"#utility.yul\":1174:1181   */\n      dup5\n        /* \"#utility.yul\":1170:1193   */\n      sub\n        /* \"#utility.yul\":1166:1198   */\n      slt\n        /* \"#utility.yul\":1163:1215   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":1211:1212   */\n      0x00\n        /* \"#utility.yul\":1208:1209   */\n      dup1\n        /* \"#utility.yul\":1201:1213   */\n      revert\n        /* \"#utility.yul\":1163:1215   */\n    tag_150:\n      pop\n        /* \"#utility.yul\":1234:1250   */\n      mload\n      swap2\n        /* \"#utility.yul\":1072:1256   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1692:1909   */\n    tag_83:\n        /* \"#utility.yul\":1732:1733   */\n      0x00\n        /* \"#utility.yul\":1758:1759   */\n      dup3\n        /* \"#utility.yul\":1748:1880   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1802:1812   */\n      0x4e487b71\n        /* \"#utility.yul\":1797:1800   */\n      0xe0\n        /* \"#utility.yul\":1793:1813   */\n      shl\n        /* \"#utility.yul\":1790:1791   */\n      0x00\n        /* \"#utility.yul\":1783:1814   */\n      mstore\n        /* \"#utility.yul\":1837:1841   */\n      0x12\n        /* \"#utility.yul\":1834:1835   */\n      0x04\n        /* \"#utility.yul\":1827:1842   */\n      mstore\n        /* \"#utility.yul\":1865:1869   */\n      0x24\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1855:1870   */\n      revert\n        /* \"#utility.yul\":1748:1880   */\n    tag_153:\n      pop\n        /* \"#utility.yul\":1894:1903   */\n      div\n      swap1\n        /* \"#utility.yul\":1692:1909   */\n      jump\t// out\n        /* \"#utility.yul\":2961:3373   */\n    tag_114:\n        /* \"#utility.yul\":3090:3093   */\n      0x00\n        /* \"#utility.yul\":3128:3134   */\n      dup3\n        /* \"#utility.yul\":3122:3135   */\n      mload\n        /* \"#utility.yul\":3153:3154   */\n      0x00\n        /* \"#utility.yul\":3163:3292   */\n    tag_158:\n        /* \"#utility.yul\":3177:3183   */\n      dup2\n        /* \"#utility.yul\":3174:3175   */\n      dup2\n        /* \"#utility.yul\":3171:3184   */\n      lt\n        /* \"#utility.yul\":3163:3292   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":3275:3279   */\n      0x20\n        /* \"#utility.yul\":3259:3273   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":3255:3280   */\n      dup2\n      add\n        /* \"#utility.yul\":3249:3281   */\n      mload\n        /* \"#utility.yul\":3236:3247   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":3229:3282   */\n      mstore\n        /* \"#utility.yul\":3192:3204   */\n      add\n        /* \"#utility.yul\":3163:3292   */\n      jump(tag_158)\n    tag_160:\n      pop\n        /* \"#utility.yul\":3347:3348   */\n      0x00\n        /* \"#utility.yul\":3311:3327   */\n      swap3\n      add\n        /* \"#utility.yul\":3336:3349   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":3311:3327   */\n      swap2\n        /* \"#utility.yul\":2961:3373   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3378:3655   */\n    tag_121:\n        /* \"#utility.yul\":3445:3451   */\n      0x00\n        /* \"#utility.yul\":3498:3500   */\n      0x20\n        /* \"#utility.yul\":3486:3495   */\n      dup3\n        /* \"#utility.yul\":3477:3484   */\n      dup5\n        /* \"#utility.yul\":3473:3496   */\n      sub\n        /* \"#utility.yul\":3469:3501   */\n      slt\n        /* \"#utility.yul\":3466:3518   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":3514:3515   */\n      0x00\n        /* \"#utility.yul\":3511:3512   */\n      dup1\n        /* \"#utility.yul\":3504:3516   */\n      revert\n        /* \"#utility.yul\":3466:3518   */\n    tag_162:\n        /* \"#utility.yul\":3546:3555   */\n      dup2\n        /* \"#utility.yul\":3540:3556   */\n      mload\n        /* \"#utility.yul\":3599:3604   */\n      dup1\n        /* \"#utility.yul\":3592:3605   */\n      iszero\n        /* \"#utility.yul\":3585:3606   */\n      iszero\n        /* \"#utility.yul\":3578:3583   */\n      dup2\n        /* \"#utility.yul\":3575:3607   */\n      eq\n        /* \"#utility.yul\":3565:3625   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":3621:3622   */\n      0x00\n        /* \"#utility.yul\":3618:3619   */\n      dup1\n        /* \"#utility.yul\":3611:3623   */\n      revert\n\n    auxdata: 0xa264697066735822122032b39ed8bb7b1a55f044b94bcebdd98d95e469b1db663de3a750f1cf4b504eae64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_249": {
									"entryPoint": null,
									"id": 249,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 111,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:491:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:5"
															},
															"nodeType": "YulIf",
															"src": "115:70:5"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "14:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:195:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "352:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:5"
															},
															"nodeType": "YulIf",
															"src": "304:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "365:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:40:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "424:59:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "479:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:49:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:5",
														"type": ""
													}
												],
												"src": "196:293:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161091a38038061091a83398101604081905261002f916100db565b6100383361006f565b600380546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556103e860045561010e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d657600080fd5b919050565b600080604083850312156100ee57600080fd5b6100f7836100bf565b9150610105602084016100bf565b90509250929050565b6107fd8061011d6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80635356172e1161008c5780638da5cb5b116100665780638da5cb5b1461019d57806392ccd3a6146101ae5780639b2cb5d8146101c1578063f2fde38b146101ca57600080fd5b80635356172e1461016f578063715018a614610182578063897b06371461018a57600080fd5b806314c98009146100d4578063200d2ed2146100de57806322d392cb146101075780634006ccc51461013257806341458c8614610149578063535565591461015c575b600080fd5b6100dc6101dd565b005b6000546100f290600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b60035461011a906001600160a01b031681565b6040516001600160a01b0390911681526020016100fe565b61013b60045481565b6040519081526020016100fe565b6100dc6101573660046106f2565b610206565b6100dc61016a3660046106f2565b61029f565b60025461011a906001600160a01b031681565b6100dc610359565b6100dc6101983660046106f2565b61036d565b6000546001600160a01b031661011a565b6100dc6101bc3660046106f2565b61037a565b61013b60015481565b6100dc6101d836600461070b565b610387565b6101e56103fd565b6000805460ff60a01b198116600160a01b9182900460ff1615909102179055565b61020e6103fd565b6003546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027a919061073b565b101561028557600080fd5b60035461029c906001600160a01b03163383610457565b50565b60015481101561031c5760405162461bcd60e51b815260206004820152603e60248201527f546865207175616e7469747920796f7520627579206d7573742062652067726560448201527f61746572207468616e20746865206d696e696d756d207175616e74697479000060648201526084015b60405180910390fd5b600254610334906001600160a01b0316333084610572565b60035460045461029c916001600160a01b03169033906103549085610754565b610457565b6103616103fd565b61036b60006106a2565b565b6103756103fd565b600155565b6103826103fd565b600455565b61038f6103fd565b6001600160a01b0381166103f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610313565b61029c816106a2565b6000546001600160a01b0316331461036b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610313565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916104b39190610776565b6000604051808303816000865af19150503d80600081146104f0576040519150601f19603f3d011682016040523d82523d6000602084013e6104f5565b606091505b509150915081801561051f57508051158061051f57508080602001905181019061051f91906107a5565b61056b5760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c4544006044820152606401610313565b5050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916105d69190610776565b6000604051808303816000865af19150503d8060008114610613576040519150601f19603f3d011682016040523d82523d6000602084013e610618565b606091505b509150915081801561064257508051158061064257508080602001905181019061064291906107a5565b61069a5760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b6064820152608401610313565b505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561070457600080fd5b5035919050565b60006020828403121561071d57600080fd5b81356001600160a01b038116811461073457600080fd5b9392505050565b60006020828403121561074d57600080fd5b5051919050565b60008261077157634e487b7160e01b600052601260045260246000fd5b500490565b6000825160005b81811015610797576020818601810151858301520161077d565b506000920191825250919050565b6000602082840312156107b757600080fd5b8151801515811461073457600080fdfea264697066735822122032b39ed8bb7b1a55f044b94bcebdd98d95e469b1db663de3a750f1cf4b504eae64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x91A CODESIZE SUB DUP1 PUSH2 0x91A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xDB JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x6F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x3E8 PUSH1 0x4 SSTORE PUSH2 0x10E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 DUP4 PUSH2 0xBF JUMP JUMPDEST SWAP2 POP PUSH2 0x105 PUSH1 0x20 DUP5 ADD PUSH2 0xBF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FD DUP1 PUSH2 0x11D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5356172E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x92CCD3A6 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x9B2CB5D8 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5356172E EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x897B0637 EQ PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14C98009 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x22D392CB EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x4006CCC5 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x41458C86 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x53556559 EQ PUSH2 0x15C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x1DD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xF2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x11A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0x13B PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0xDC PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x11A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11A JUMP JUMPDEST PUSH2 0xDC PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH2 0x13B PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x20E PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x73B JUMP JUMPDEST LT ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x29C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x457 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865207175616E7469747920796F7520627579206D75737420626520677265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61746572207468616E20746865206D696E696D756D207175616E746974790000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x334 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x572 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH2 0x29C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLER SWAP1 PUSH2 0x354 SWAP1 DUP6 PUSH2 0x754 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH2 0x361 PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x36B PUSH1 0x0 PUSH2 0x6A2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x375 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x382 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH2 0x38F PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x313 JUMP JUMPDEST PUSH2 0x29C DUP2 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x776 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4F0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x51F JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x51F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x51F SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x56B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F4641494C454400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x313 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x776 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x618 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x642 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x642 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x12531151 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x313 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x771 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x797 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x77D JUMP JUMPDEST POP PUSH1 0x0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xB3 SWAP15 0xD8 0xBB PUSH28 0x1A55F044B94BCEBDD98D95E469B1DB663DE3A750F1CF4B504EAE6473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "171:1106:3:-:0;;;353:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:2;936:18:0;:32::i;:::-;403:3:3;:10;;-1:-1:-1;;;;;403:10:3;;;-1:-1:-1;;;;;;403:10:3;;;;;;;423:5;:14;;;;;;;;;;;462:4;447:13;:19;171:1106;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:177:5:-;93:13;;-1:-1:-1;;;;;135:31:5;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;171:1106:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 1021,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1698,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@backToken_315": {
									"entryPoint": 518,
									"id": 315,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@exchangeRatio_229": {
									"entryPoint": null,
									"id": 229,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@exchange_352": {
									"entryPoint": 671,
									"id": 352,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@fdt_227": {
									"entryPoint": null,
									"id": 227,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@flame_225": {
									"entryPoint": null,
									"id": 225,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minAmount_223": {
									"entryPoint": null,
									"id": 223,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 857,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_487": {
									"entryPoint": 1394,
									"id": 487,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_441": {
									"entryPoint": 1111,
									"id": 441,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setMinAmount_284": {
									"entryPoint": 877,
									"id": 284,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setexchangeRatio_272": {
									"entryPoint": 890,
									"id": 272,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setstatus_260": {
									"entryPoint": 477,
									"id": 260,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@status_221": {
									"entryPoint": null,
									"id": 221,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 903,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e8029f7e34aa94a809f6125a796c506562a6ddd5c48753a5543dc9b7ba087a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4802:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "109:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "119:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "131:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "142:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "127:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "127:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "119:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "161:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "186:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "179:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "179:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "172:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "154:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "154:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "154:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "78:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "89:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "100:4:5",
														"type": ""
													}
												],
												"src": "14:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "307:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "317:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "329:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "340:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "325:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "325:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "317:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "359:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "374:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "390:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "395:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "386:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "386:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "399:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "382:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "382:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "370:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "370:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "352:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "352:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "352:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "276:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "287:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "298:4:5",
														"type": ""
													}
												],
												"src": "206:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "515:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "525:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "537:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "533:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "533:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "525:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "567:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "578:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "560:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "560:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "484:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "495:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "506:4:5",
														"type": ""
													}
												],
												"src": "414:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "712:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "721:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "724:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "714:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "714:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "714:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "687:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "696:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "683:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "683:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "708:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "679:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "679:32:5"
															},
															"nodeType": "YulIf",
															"src": "676:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "737:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "760:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "747:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "737:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "632:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "643:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "655:6:5",
														"type": ""
													}
												],
												"src": "596:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "851:216:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "897:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "906:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "899:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "899:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "899:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "872:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "881:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "868:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "868:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "893:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "864:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "864:32:5"
															},
															"nodeType": "YulIf",
															"src": "861:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "922:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "948:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "935:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "926:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1021:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1030:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1023:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1023:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "980:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "991:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1006:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1011:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1002:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1002:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1015:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "998:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "998:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "977:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "977:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:50:5"
															},
															"nodeType": "YulIf",
															"src": "967:70:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1046:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1056:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1046:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "817:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "828:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "840:6:5",
														"type": ""
													}
												],
												"src": "781:286:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1153:103:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1199:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1208:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1211:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1201:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1201:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1201:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1174:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1183:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1170:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1170:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1195:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:32:5"
															},
															"nodeType": "YulIf",
															"src": "1163:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1224:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1240:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1234:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:16:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1224:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1119:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1130:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1142:6:5",
														"type": ""
													}
												],
												"src": "1072:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1435:252:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1452:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1463:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1445:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1445:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1445:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1486:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1497:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1482:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1482:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1502:2:5",
																		"type": "",
																		"value": "62"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1475:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1475:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1525:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1536:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1521:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1521:18:5"
																	},
																	{
																		"hexValue": "546865207175616e7469747920796f7520627579206d75737420626520677265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1541:34:5",
																		"type": "",
																		"value": "The quantity you buy must be gre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1514:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1514:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1514:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1596:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1607:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1592:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1592:18:5"
																	},
																	{
																		"hexValue": "61746572207468616e20746865206d696e696d756d207175616e74697479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1612:32:5",
																		"type": "",
																		"value": "ater than the minimum quantity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1585:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1585:60:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1585:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1654:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1666:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1677:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1662:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1654:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e8029f7e34aa94a809f6125a796c506562a6ddd5c48753a5543dc9b7ba087a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1412:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1426:4:5",
														"type": ""
													}
												],
												"src": "1261:426:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1738:171:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1769:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1790:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1797:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1802:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1793:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1793:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1783:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1783:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1783:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1834:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1837:4:5",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1827:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1827:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1827:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1862:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1865:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1855:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1855:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1855:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1758:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1751:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1751:9:5"
															},
															"nodeType": "YulIf",
															"src": "1748:132:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1889:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1898:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1901:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1894:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1894:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1889:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1723:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1726:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1732:1:5",
														"type": ""
													}
												],
												"src": "1692:217:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2088:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2105:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2116:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2098:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2098:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2098:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2139:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2150:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2135:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2135:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2155:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2128:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2128:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2128:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2178:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2189:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2174:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2174:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2194:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2167:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2167:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2167:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2249:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2260:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2245:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2245:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2265:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2238:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2283:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2295:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2306:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2291:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2291:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2283:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2065:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2079:4:5",
														"type": ""
													}
												],
												"src": "1914:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2495:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2512:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2523:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2505:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2505:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2505:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2546:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2557:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2542:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2542:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2562:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2535:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2535:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2585:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2596:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2581:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2581:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2601:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2574:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2574:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2574:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2645:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2657:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2668:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2653:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2645:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2472:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2486:4:5",
														"type": ""
													}
												],
												"src": "2321:356:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2811:145:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2821:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2833:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2844:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2829:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2821:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2863:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2878:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2894:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2899:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2890:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2890:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2903:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2886:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2886:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2874:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2874:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2856:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2856:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2856:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2927:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2938:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2923:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2923:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2943:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2916:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2916:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2916:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2772:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2783:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2791:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2802:4:5",
														"type": ""
													}
												],
												"src": "2682:274:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3098:275:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3108:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3128:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3122:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3122:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3112:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3144:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3153:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3148:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3215:77:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "3240:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3245:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3236:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3236:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "3263:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3271:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3259:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3259:14:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3275:4:5",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3255:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3255:25:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3249:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3249:32:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3229:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3229:53:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3229:53:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3174:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3177:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3171:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3185:21:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3187:17:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3196:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3199:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3192:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3192:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3187:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3167:3:5",
																"statements": []
															},
															"src": "3163:129:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3301:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3315:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3320:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3311:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3311:16:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3305:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3343:2:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3347:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3336:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3336:13:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3336:13:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3358:9:5",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "3365:2:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3358:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3074:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3079:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3090:3:5",
														"type": ""
													}
												],
												"src": "2961:412:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3456:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3502:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3511:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3514:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3504:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3504:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3504:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3477:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3486:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3473:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3498:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3469:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:32:5"
															},
															"nodeType": "YulIf",
															"src": "3466:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3527:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3546:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3540:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3540:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3531:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3609:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3618:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3621:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3611:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3611:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3611:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3578:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3599:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3592:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3592:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3585:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3585:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3575:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3575:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3568:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3568:40:5"
															},
															"nodeType": "YulIf",
															"src": "3565:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3634:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3644:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3634:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3422:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3433:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3445:6:5",
														"type": ""
													}
												],
												"src": "3378:277:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3834:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3851:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3862:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3844:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3844:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3844:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3885:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3896:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3881:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3881:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3901:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3874:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3874:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3874:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3924:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3935:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3920:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3920:18:5"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3940:33:5",
																		"type": "",
																		"value": "TransferHelper: TRANSFER_FAILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3913:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3913:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3913:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3983:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3995:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4006:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3991:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3991:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3983:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3811:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3825:4:5",
														"type": ""
													}
												],
												"src": "3660:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4177:218:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4187:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4199:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4210:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4195:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4195:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4187:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4222:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4240:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4245:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4236:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4236:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4249:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4232:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4232:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4226:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4267:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4282:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4290:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4278:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4278:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4260:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4260:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4260:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4314:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4325:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4310:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4310:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4334:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4342:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4330:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4330:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4303:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4303:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4303:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4366:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4377:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4362:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4362:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4382:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4355:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4355:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4355:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4130:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4141:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4149:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4157:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4168:4:5",
														"type": ""
													}
												],
												"src": "4020:375:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4574:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4591:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4602:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4584:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4584:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4584:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4625:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4636:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4621:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4621:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4641:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4614:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4614:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4614:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4664:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4675:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4660:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4660:18:5"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4680:34:5",
																		"type": "",
																		"value": "TransferHelper: TRANSFER_FROM_FA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4653:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4653:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4653:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4735:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4746:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4731:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4731:18:5"
																	},
																	{
																		"hexValue": "494c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4751:6:5",
																		"type": "",
																		"value": "ILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4767:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4779:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4790:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4775:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4775:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4767:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4551:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4565:4:5",
														"type": ""
													}
												],
												"src": "4400:400:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_2e8029f7e34aa94a809f6125a796c506562a6ddd5c48753a5543dc9b7ba087a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 62)\n        mstore(add(headStart, 64), \"The quantity you buy must be gre\")\n        mstore(add(headStart, 96), \"ater than the minimum quantity\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"TransferHelper: TRANSFER_FAILED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"TransferHelper: TRANSFER_FROM_FA\")\n        mstore(add(headStart, 96), \"ILED\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80635356172e1161008c5780638da5cb5b116100665780638da5cb5b1461019d57806392ccd3a6146101ae5780639b2cb5d8146101c1578063f2fde38b146101ca57600080fd5b80635356172e1461016f578063715018a614610182578063897b06371461018a57600080fd5b806314c98009146100d4578063200d2ed2146100de57806322d392cb146101075780634006ccc51461013257806341458c8614610149578063535565591461015c575b600080fd5b6100dc6101dd565b005b6000546100f290600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b60035461011a906001600160a01b031681565b6040516001600160a01b0390911681526020016100fe565b61013b60045481565b6040519081526020016100fe565b6100dc6101573660046106f2565b610206565b6100dc61016a3660046106f2565b61029f565b60025461011a906001600160a01b031681565b6100dc610359565b6100dc6101983660046106f2565b61036d565b6000546001600160a01b031661011a565b6100dc6101bc3660046106f2565b61037a565b61013b60015481565b6100dc6101d836600461070b565b610387565b6101e56103fd565b6000805460ff60a01b198116600160a01b9182900460ff1615909102179055565b61020e6103fd565b6003546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027a919061073b565b101561028557600080fd5b60035461029c906001600160a01b03163383610457565b50565b60015481101561031c5760405162461bcd60e51b815260206004820152603e60248201527f546865207175616e7469747920796f7520627579206d7573742062652067726560448201527f61746572207468616e20746865206d696e696d756d207175616e74697479000060648201526084015b60405180910390fd5b600254610334906001600160a01b0316333084610572565b60035460045461029c916001600160a01b03169033906103549085610754565b610457565b6103616103fd565b61036b60006106a2565b565b6103756103fd565b600155565b6103826103fd565b600455565b61038f6103fd565b6001600160a01b0381166103f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610313565b61029c816106a2565b6000546001600160a01b0316331461036b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610313565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916104b39190610776565b6000604051808303816000865af19150503d80600081146104f0576040519150601f19603f3d011682016040523d82523d6000602084013e6104f5565b606091505b509150915081801561051f57508051158061051f57508080602001905181019061051f91906107a5565b61056b5760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c4544006044820152606401610313565b5050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916105d69190610776565b6000604051808303816000865af19150503d8060008114610613576040519150601f19603f3d011682016040523d82523d6000602084013e610618565b606091505b509150915081801561064257508051158061064257508080602001905181019061064291906107a5565b61069a5760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b6064820152608401610313565b505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561070457600080fd5b5035919050565b60006020828403121561071d57600080fd5b81356001600160a01b038116811461073457600080fd5b9392505050565b60006020828403121561074d57600080fd5b5051919050565b60008261077157634e487b7160e01b600052601260045260246000fd5b500490565b6000825160005b81811015610797576020818601810151858301520161077d565b506000920191825250919050565b6000602082840312156107b757600080fd5b8151801515811461073457600080fdfea264697066735822122032b39ed8bb7b1a55f044b94bcebdd98d95e469b1db663de3a750f1cf4b504eae64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5356172E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x92CCD3A6 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x9B2CB5D8 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5356172E EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x897B0637 EQ PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14C98009 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x22D392CB EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x4006CCC5 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x41458C86 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x53556559 EQ PUSH2 0x15C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x1DD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xF2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x11A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0x13B PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0xDC PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x11A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11A JUMP JUMPDEST PUSH2 0xDC PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH2 0x13B PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x20E PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x73B JUMP JUMPDEST LT ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x29C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x457 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865207175616E7469747920796F7520627579206D75737420626520677265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61746572207468616E20746865206D696E696D756D207175616E746974790000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x334 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x572 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH2 0x29C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLER SWAP1 PUSH2 0x354 SWAP1 DUP6 PUSH2 0x754 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH2 0x361 PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x36B PUSH1 0x0 PUSH2 0x6A2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x375 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x382 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH2 0x38F PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x313 JUMP JUMPDEST PUSH2 0x29C DUP2 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x776 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4F0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x51F JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x51F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x51F SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x56B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F4641494C454400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x313 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x776 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x618 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x642 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x642 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x12531151 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x313 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x771 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x797 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x77D JUMP JUMPDEST POP PUSH1 0x0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xB3 SWAP15 0xD8 0xBB PUSH28 0x1A55F044B94BCEBDD98D95E469B1DB663DE3A750F1CF4B504EAE6473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "171:1106:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;478:70;;;:::i;:::-;;214:18;;;;;-1:-1:-1;;;214:18:3;;;;;;;;;179:14:5;;172:22;154:41;;142:2;127:18;214::3;;;;;;;;294;;;;;-1:-1:-1;;;;;294:18:3;;;;;;-1:-1:-1;;;;;370:32:5;;;352:51;;340:2;325:18;294::3;206:203:5;318:28:3;;;;;;;;;560:25:5;;;548:2;533:18;318:28:3;414:177:5;768:188:3;;;;;;:::i;:::-;;:::i;961:314::-;;;;;;:::i;:::-;;:::i;268:20::-;;;;;-1:-1:-1;;;;;268:20:3;;;1831:101:0;;;:::i;672:91:3:-;;;;;;:::i;:::-;;:::i;1201:85:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;553:114:3;;;;;;:::i;:::-;;:::i;238:24::-;;;;;;2081:198:0;;;;;;:::i;:::-;;:::i;478:70:3:-;1094:13:0;:11;:13::i;:::-;535:6:3::1;::::0;;-1:-1:-1;;;;525:16:3;::::1;-1:-1:-1::0;;;535:6:3;;;::::1;;;534:7;525:16:::0;;::::1;;::::0;;478:70::o;768:188::-;1094:13:0;:11;:13::i;:::-;845:3:3::1;::::0;838:36:::1;::::0;-1:-1:-1;;;838:36:3;;868:4:::1;838:36;::::0;::::1;352:51:5::0;878:7:3;;-1:-1:-1;;;;;845:3:3::1;::::0;838:21:::1;::::0;325:18:5;;838:36:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;830:56;;;::::0;::::1;;924:3;::::0;896:53:::1;::::0;-1:-1:-1;;;;;924:3:3::1;929:10;941:7:::0;896:27:::1;:53::i;:::-;768:188:::0;:::o;961:314::-;1032:9;;1021:7;:20;;1013:94;;;;-1:-1:-1;;;1013:94:3;;1463:2:5;1013:94:3;;;1445:21:5;1502:2;1482:18;;;1475:30;1541:34;1521:18;;;1514:62;1612:32;1592:18;;;1585:60;1662:19;;1013:94:3;;;;;;;;;1149:5;;1117:74;;-1:-1:-1;;;;;1149:5:3;1156:10;1176:4;1183:7;1117:31;:74::i;:::-;1229:3;;1254:13;;1201:67;;-1:-1:-1;;;;;1229:3:3;;1234:10;;1246:21;;:7;:21;:::i;:::-;1201:27;:67::i;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;672:91:3:-;1094:13:0;:11;:13::i;:::-;737:9:3::1;:19:::0;672:91::o;553:114::-;1094:13:0;:11;:13::i;:::-;630::3::1;:30:::0;553:114::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;2116:2:5;2161:73:0::1;::::0;::::1;2098:21:5::0;2155:2;2135:18;;;2128:30;2194:34;2174:18;;;2167:62;-1:-1:-1;;;2245:18:5;;;2238:36;2291:19;;2161:73:0::1;1914:402:5::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;1359:130::-:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:2;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;2523:2:5;1414:68:0;;;2505:21:5;;;2542:18;;;2535:30;2601:34;2581:18;;;2574:62;2653:18;;1414:68:0;2321:356:5;572:357:4;765:45;;;-1:-1:-1;;;;;2874:32:5;;;765:45:4;;;2856:51:5;2923:18;;;;2916:34;;;765:45:4;;;;;;;;;;2829:18:5;;;;765:45:4;;;;;;;-1:-1:-1;;;;;765:45:4;-1:-1:-1;;;765:45:4;;;754:57;;-1:-1:-1;;;;754:10:4;;;;:57;;765:45;754:57;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:93;;;;829:7;:57;;;;-1:-1:-1;841:11:4;;:16;;:44;;;872:4;861:24;;;;;;;;;;;;:::i;:::-;821:101;;;;-1:-1:-1;;;821:101:4;;3862:2:5;821:101:4;;;3844:21:5;3901:2;3881:18;;;3874:30;3940:33;3920:18;;;3913:61;3991:18;;821:101:4;3660:355:5;821:101:4;642:287;;572:357;;;:::o;935:398::-;1158:51;;;-1:-1:-1;;;;;4278:15:5;;;1158:51:4;;;4260:34:5;4330:15;;;4310:18;;;4303:43;4362:18;;;;4355:34;;;1158:51:4;;;;;;;;;;4195:18:5;;;;1158:51:4;;;;;;;-1:-1:-1;;;;;1158:51:4;-1:-1:-1;;;1158:51:4;;;1147:63;;-1:-1:-1;;;;1147:10:4;;;;:63;;1158:51;1147:63;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1111:99;;;;1228:7;:57;;;;-1:-1:-1;1240:11:4;;:16;;:44;;;1271:4;1260:24;;;;;;;;;;;;:::i;:::-;1220:106;;;;-1:-1:-1;;;1220:106:4;;4602:2:5;1220:106:4;;;4584:21:5;4641:2;4621:18;;;4614:30;4680:34;4660:18;;;4653:62;-1:-1:-1;;;4731:18:5;;;4724:34;4775:19;;1220:106:4;4400:400:5;1220:106:4;1023:310;;935:398;;;;:::o;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;596:180:5:-;655:6;708:2;696:9;687:7;683:23;679:32;676:52;;;724:1;721;714:12;676:52;-1:-1:-1;747:23:5;;596:180;-1:-1:-1;596:180:5:o;781:286::-;840:6;893:2;881:9;872:7;868:23;864:32;861:52;;;909:1;906;899:12;861:52;935:23;;-1:-1:-1;;;;;987:31:5;;977:42;;967:70;;1033:1;1030;1023:12;967:70;1056:5;781:286;-1:-1:-1;;;781:286:5:o;1072:184::-;1142:6;1195:2;1183:9;1174:7;1170:23;1166:32;1163:52;;;1211:1;1208;1201:12;1163:52;-1:-1:-1;1234:16:5;;1072:184;-1:-1:-1;1072:184:5:o;1692:217::-;1732:1;1758;1748:132;;1802:10;1797:3;1793:20;1790:1;1783:31;1837:4;1834:1;1827:15;1865:4;1862:1;1855:15;1748:132;-1:-1:-1;1894:9:5;;1692:217::o;2961:412::-;3090:3;3128:6;3122:13;3153:1;3163:129;3177:6;3174:1;3171:13;3163:129;;;3275:4;3259:14;;;3255:25;;3249:32;3236:11;;;3229:53;3192:12;3163:129;;;-1:-1:-1;3347:1:5;3311:16;;3336:13;;;-1:-1:-1;3311:16:5;2961:412;-1:-1:-1;2961:412:5:o;3378:277::-;3445:6;3498:2;3486:9;3477:7;3473:23;3469:32;3466:52;;;3514:1;3511;3504:12;3466:52;3546:9;3540:16;3599:5;3592:13;3585:21;3578:5;3575:32;3565:60;;3621:1;3618;3611:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "409000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"backToken(uint256)": "infinite",
								"exchange(uint256)": "infinite",
								"exchangeRatio()": "2362",
								"fdt()": "2382",
								"flame()": "2360",
								"minAmount()": "2361",
								"owner()": "2353",
								"renounceOwnership()": "infinite",
								"setMinAmount(uint256)": "24555",
								"setexchangeRatio(uint256)": "24532",
								"setstatus()": "26582",
								"status()": "2339",
								"transferOwnership(address)": "28386"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 171,
									"end": 1277,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 171,
									"end": 1277,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 171,
									"end": 1277,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 353,
									"end": 473,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 473,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 353,
									"end": 473,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 353,
									"end": 473,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 353,
									"end": 473,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 353,
									"end": 473,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 353,
									"end": 473,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 353,
									"end": 473,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 353,
									"end": 473,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 403,
									"end": 406,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 403,
									"end": 413,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 403,
									"end": 413,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 403,
									"end": 413,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 403,
									"end": 413,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 403,
									"end": 413,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 403,
									"end": 413,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 403,
									"end": 413,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 403,
									"end": 413,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 403,
									"end": 413,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 403,
									"end": 413,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 403,
									"end": 413,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 403,
									"end": 413,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 423,
									"end": 428,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 423,
									"end": 437,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 423,
									"end": 437,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 423,
									"end": 437,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 423,
									"end": 437,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 423,
									"end": 437,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 423,
									"end": 437,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 423,
									"end": 437,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 423,
									"end": 437,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 423,
									"end": 437,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 423,
									"end": 437,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 423,
									"end": 437,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 462,
									"end": 466,
									"name": "PUSH",
									"source": 3,
									"value": "3E8"
								},
								{
									"begin": 447,
									"end": 460,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 447,
									"end": 466,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 171,
									"end": 1277,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 171,
									"end": 1277,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 171,
									"end": 1277,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 1277,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 171,
									"end": 1277,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 1277,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 1277,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 171,
									"end": 1277,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 1277,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122032b39ed8bb7b1a55f044b94bcebdd98d95e469b1db663de3a750f1cf4b504eae64736f6c63430008120033",
									".code": [
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "5356172E"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "92CCD3A6"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "9B2CB5D8"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "5356172E"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "897B0637"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "14C98009"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "200D2ED2"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "22D392CB"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "4006CCC5"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "41458C86"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "53556559"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 1277,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 478,
											"end": 548,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 478,
											"end": 548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 478,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 478,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 478,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 478,
											"end": 548,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 478,
											"end": 548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 478,
											"end": 548,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 232,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 214,
											"end": 232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 232,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 214,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 214,
											"end": 232,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 214,
											"end": 232,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 232,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 214,
											"end": 232,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 214,
											"end": 232,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 214,
											"end": 232,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 232,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 232,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 214,
											"end": 232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 232,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 232,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 179,
											"end": 193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 179,
											"end": 193,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 172,
											"end": 194,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 154,
											"end": 195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 154,
											"end": 195,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 142,
											"end": 144,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 214,
											"end": 232,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 214,
											"end": 232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 232,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 232,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 214,
											"end": 232,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 232,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 232,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 214,
											"end": 232,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 232,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 294,
											"end": 312,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 294,
											"end": 312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 294,
											"end": 312,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 294,
											"end": 312,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 294,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 294,
											"end": 312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 294,
											"end": 312,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 294,
											"end": 312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 294,
											"end": 312,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 294,
											"end": 312,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 294,
											"end": 312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 294,
											"end": 312,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 294,
											"end": 312,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 370,
											"end": 402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 370,
											"end": 402,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 370,
											"end": 402,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 352,
											"end": 403,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 352,
											"end": 403,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 340,
											"end": 342,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 294,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 206,
											"end": 409,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 318,
											"end": 346,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 318,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 318,
											"end": 346,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 318,
											"end": 346,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 318,
											"end": 346,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 318,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 560,
											"end": 585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 560,
											"end": 585,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 560,
											"end": 585,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 533,
											"end": 551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 318,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 414,
											"end": 591,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 768,
											"end": 956,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 768,
											"end": 956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 768,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 768,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 768,
											"end": 956,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 768,
											"end": 956,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 768,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 768,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 768,
											"end": 956,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 768,
											"end": 956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 768,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 768,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1275,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 961,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 961,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 961,
											"end": 1275,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1275,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 961,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 961,
											"end": 1275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1275,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 961,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 961,
											"end": 1275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 268,
											"end": 288,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 268,
											"end": 288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 268,
											"end": 288,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 268,
											"end": 288,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 268,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 268,
											"end": 288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 268,
											"end": 288,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 268,
											"end": 288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 268,
											"end": 288,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 672,
											"end": 763,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 672,
											"end": 763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 672,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 672,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 672,
											"end": 763,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 672,
											"end": 763,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 672,
											"end": 763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 672,
											"end": 763,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 672,
											"end": 763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 672,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 672,
											"end": 763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 553,
											"end": 667,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 553,
											"end": 667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 553,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 553,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 553,
											"end": 667,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 553,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 553,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 553,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 553,
											"end": 667,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 553,
											"end": 667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 553,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 553,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 238,
											"end": 262,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 238,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 238,
											"end": 262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 238,
											"end": 262,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 548,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 478,
											"end": 548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 535,
											"end": 541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 535,
											"end": 541,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 525,
											"end": 541,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 525,
											"end": 541,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 535,
											"end": 541,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 535,
											"end": 541,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 535,
											"end": 541,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 535,
											"end": 541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 535,
											"end": 541,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 534,
											"end": 541,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 525,
											"end": 541,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 525,
											"end": 541,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 525,
											"end": 541,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 525,
											"end": 541,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 525,
											"end": 541,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 525,
											"end": 541,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 478,
											"end": 548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 768,
											"end": 956,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 768,
											"end": 956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 845,
											"end": 848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 845,
											"end": 848,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 838,
											"end": 874,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 838,
											"end": 874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 868,
											"end": 872,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 838,
											"end": 874,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 352,
											"end": 403,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 878,
											"end": 885,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 878,
											"end": 885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 845,
											"end": 848,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 845,
											"end": 848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 838,
											"end": 859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 838,
											"end": 859,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 838,
											"end": 874,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 838,
											"end": 874,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 838,
											"end": 874,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 838,
											"end": 885,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 838,
											"end": 885,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 830,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 830,
											"end": 886,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 830,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 886,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 830,
											"end": 886,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 830,
											"end": 886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 830,
											"end": 886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 924,
											"end": 927,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 896,
											"end": 949,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 924,
											"end": 927,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 929,
											"end": 939,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 941,
											"end": 948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 896,
											"end": 923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 896,
											"end": 949,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 896,
											"end": 949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 896,
											"end": 949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 768,
											"end": 956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 768,
											"end": 956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1275,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 961,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1041,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1041,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1028,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1041,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1041,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1465,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1466,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1502,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "3E"
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1505,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "546865207175616E7469747920796F7520627579206D75737420626520677265"
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1514,
											"end": 1576,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1644,
											"name": "PUSH",
											"source": 5,
											"value": "61746572207468616E20746865206D696E696D756D207175616E746974790000"
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1645,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1681,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1662,
											"end": 1681,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1013,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1149,
											"end": 1154,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1117,
											"end": 1191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1149,
											"end": 1154,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1166,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1180,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1183,
											"end": 1190,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1117,
											"end": 1191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1191,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1117,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1232,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1229,
											"end": 1232,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1267,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1267,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1201,
											"end": 1268,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1229,
											"end": 1232,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1232,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1234,
											"end": 1244,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1234,
											"end": 1244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1253,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1246,
											"end": 1267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1246,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1201,
											"end": 1268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 672,
											"end": 763,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 672,
											"end": 763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 737,
											"end": 746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 737,
											"end": 756,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 672,
											"end": 763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 553,
											"end": 667,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 553,
											"end": 667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 630,
											"end": 643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 630,
											"end": 660,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 553,
											"end": 667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2118,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2155,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2158,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2229,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2263,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2245,
											"end": 2263,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2263,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2274,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2310,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2291,
											"end": 2310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1914,
											"end": 2316,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2525,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2526,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2526,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2526,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2535,
											"end": 2565,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2635,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2581,
											"end": 2599,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2581,
											"end": 2599,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2574,
											"end": 2636,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2653,
											"end": 2671,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2653,
											"end": 2671,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2321,
											"end": 2677,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 572,
											"end": 929,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 572,
											"end": 929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2874,
											"end": 2906,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2906,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2906,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 765,
											"end": 810,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 765,
											"end": 810,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 2907,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2916,
											"end": 2950,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2916,
											"end": 2950,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2916,
											"end": 2950,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 765,
											"end": 810,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 765,
											"end": 810,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 765,
											"end": 810,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 765,
											"end": 810,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 765,
											"end": 810,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 754,
											"end": 764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 754,
											"end": 764,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 754,
											"end": 764,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 754,
											"end": 764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 765,
											"end": 810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 754,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 754,
											"end": 811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 754,
											"end": 811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 718,
											"end": 811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 718,
											"end": 811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 718,
											"end": 811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 718,
											"end": 811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 829,
											"end": 836,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 829,
											"end": 886,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 829,
											"end": 886,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 841,
											"end": 852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 841,
											"end": 852,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 841,
											"end": 857,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 841,
											"end": 857,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 841,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 841,
											"end": 885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 841,
											"end": 885,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 872,
											"end": 876,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 861,
											"end": 885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 861,
											"end": 885,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 861,
											"end": 885,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 861,
											"end": 885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 861,
											"end": 885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 861,
											"end": 885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 861,
											"end": 885,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 861,
											"end": 885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 861,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 861,
											"end": 885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 861,
											"end": 885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 861,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 861,
											"end": 885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 861,
											"end": 885,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 861,
											"end": 885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 821,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 821,
											"end": 922,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 821,
											"end": 922,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 821,
											"end": 922,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 821,
											"end": 922,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 821,
											"end": 922,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3864,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 821,
											"end": 922,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 821,
											"end": 922,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 821,
											"end": 922,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3865,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3903,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3881,
											"end": 3899,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3881,
											"end": 3899,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3881,
											"end": 3899,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3874,
											"end": 3904,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3973,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E7366657248656C7065723A205452414E534645525F4641494C454400"
										},
										{
											"begin": 3920,
											"end": 3938,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3920,
											"end": 3938,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3920,
											"end": 3938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3913,
											"end": 3974,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 821,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3660,
											"end": 4015,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 821,
											"end": 922,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 821,
											"end": 922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 642,
											"end": 929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 642,
											"end": 929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 572,
											"end": 929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 572,
											"end": 929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 572,
											"end": 929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 572,
											"end": 929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1333,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 935,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4278,
											"end": 4293,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4278,
											"end": 4293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4278,
											"end": 4293,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4260,
											"end": 4294,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4345,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4345,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4328,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4310,
											"end": 4328,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4328,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4346,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4389,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4389,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1147,
											"end": 1157,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1157,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1157,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1157,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1147,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1251,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1256,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1256,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1240,
											"end": 1284,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1284,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1275,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1260,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1260,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1220,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1220,
											"end": 1326,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1220,
											"end": 1326,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1220,
											"end": 1326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1220,
											"end": 1326,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1220,
											"end": 1326,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4602,
											"end": 4604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1326,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1220,
											"end": 1326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1220,
											"end": 1326,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4605,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4641,
											"end": 4643,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4621,
											"end": 4639,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4621,
											"end": 4639,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4621,
											"end": 4639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4614,
											"end": 4644,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4714,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641"
										},
										{
											"begin": 4660,
											"end": 4678,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4660,
											"end": 4678,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4660,
											"end": 4678,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4715,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12531151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4775,
											"end": 4794,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4775,
											"end": 4794,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4400,
											"end": 4800,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1326,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1220,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 935,
											"end": 1333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 596,
											"end": 776,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 596,
											"end": 776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 655,
											"end": 661,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 710,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 696,
											"end": 705,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 687,
											"end": 694,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 683,
											"end": 706,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 679,
											"end": 711,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 676,
											"end": 728,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 676,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 676,
											"end": 728,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 722,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 714,
											"end": 726,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 676,
											"end": 728,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 676,
											"end": 728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 747,
											"end": 770,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 747,
											"end": 770,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 596,
											"end": 776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 596,
											"end": 776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 840,
											"end": 846,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 895,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 872,
											"end": 879,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 868,
											"end": 891,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 864,
											"end": 896,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 861,
											"end": 913,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 861,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 861,
											"end": 913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 907,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 899,
											"end": 911,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 861,
											"end": 913,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 861,
											"end": 913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 935,
											"end": 958,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 935,
											"end": 958,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1031,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1035,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1056,
											"end": 1061,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 781,
											"end": 1067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1256,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1072,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1148,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1195,
											"end": 1197,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1183,
											"end": 1192,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1181,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1193,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1198,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1215,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1163,
											"end": 1215,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1215,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1163,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1256,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1072,
											"end": 1256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1692,
											"end": 1909,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1692,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1732,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1748,
											"end": 1880,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1812,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 1797,
											"end": 1800,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1793,
											"end": 1813,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1814,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1837,
											"end": 1841,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1834,
											"end": 1835,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1827,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1870,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1880,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1748,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1894,
											"end": 1903,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 1903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1692,
											"end": 1909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 3373,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2961,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3093,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3135,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3153,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3292,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3163,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3177,
											"end": 3183,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3175,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3184,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3292,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3163,
											"end": 3292,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3275,
											"end": 3279,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3259,
											"end": 3273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3259,
											"end": 3273,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3259,
											"end": 3273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3280,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3280,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3281,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3236,
											"end": 3247,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3236,
											"end": 3247,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3236,
											"end": 3247,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3229,
											"end": 3282,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3192,
											"end": 3204,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3163,
											"end": 3292,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3292,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3163,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3347,
											"end": 3348,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3327,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3311,
											"end": 3327,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3349,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3349,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3311,
											"end": 3327,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 3373,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2961,
											"end": 3373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3655,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3378,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3445,
											"end": 3451,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3495,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3501,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3466,
											"end": 3518,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3466,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3466,
											"end": 3518,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3515,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3504,
											"end": 3516,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3466,
											"end": 3518,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3466,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3546,
											"end": 3555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3556,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 3605,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3585,
											"end": 3606,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3578,
											"end": 3583,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3575,
											"end": 3607,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3565,
											"end": 3625,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3622,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3618,
											"end": 3619,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3623,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/FlameExchangeFdt.sol",
								"contracts/lib/TransferHelper.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"backToken(uint256)": "41458c86",
							"exchange(uint256)": "53556559",
							"exchangeRatio()": "4006ccc5",
							"fdt()": "22d392cb",
							"flame()": "5356172e",
							"minAmount()": "9b2cb5d8",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setMinAmount(uint256)": "897b0637",
							"setexchangeRatio(uint256)": "92ccd3a6",
							"setstatus()": "14c98009",
							"status()": "200d2ed2",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_flame\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"backToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flame\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMinAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeRatio\",\"type\":\"uint256\"}],\"name\":\"setexchangeRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setstatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FlameExchangeFdt.sol\":\"FlameExchangeFdt\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/FlameExchangeFdt.sol\":{\"keccak256\":\"0x47fb5544907ce75ef28d3c524690abaf28785d99978e66940368f06eb8ee17d5\",\"urls\":[\"bzz-raw://4eaa04516918f4ceebe6e8ccf00c977c8c29e3386f5469a0d05a9d035b7182fa\",\"dweb:/ipfs/QmTrmykAjnHoUPE6kjh2uDGaxuW2vhbdW5FrUCiFAPexkY\"]},\"contracts/lib/TransferHelper.sol\":{\"keccak256\":\"0xf1d71350584d577cff628f0aac7a7ce4eaf0b7f25759448099288575183da807\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://df99373e094561adc81e27aa305abcde1305454810f69587518bd738cc014572\",\"dweb:/ipfs/QmQ7sFubdStHJEVDtESXyt2xU6btvemKRTXJ74EJgZS2rr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/FlameExchangeFdt.sol:FlameExchangeFdt",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 221,
								"contract": "contracts/FlameExchangeFdt.sol:FlameExchangeFdt",
								"label": "status",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 223,
								"contract": "contracts/FlameExchangeFdt.sol:FlameExchangeFdt",
								"label": "minAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 225,
								"contract": "contracts/FlameExchangeFdt.sol:FlameExchangeFdt",
								"label": "flame",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 227,
								"contract": "contracts/FlameExchangeFdt.sol:FlameExchangeFdt",
								"label": "fdt",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 229,
								"contract": "contracts/FlameExchangeFdt.sol:FlameExchangeFdt",
								"label": "exchangeRatio",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/lib/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lib/TransferHelper.sol\":183:1533  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lib/TransferHelper.sol\":183:1533  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209fc556474026525d36c7b619d2e988bd69ade49d32857a4e0f67dbba118a05b564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209fc556474026525d36c7b619d2e988bd69ade49d32857a4e0f67dbba118a05b564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xC5 JUMP SELFBALANCE BLOCKHASH 0x26 MSTORE 0x5D CALLDATASIZE 0xC7 0xB6 NOT 0xD2 0xE9 DUP9 0xBD PUSH10 0xADE49D32857A4E0F67DB 0xBA GT DUP11 SDIV 0xB5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "183:1350:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;183:1350:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209fc556474026525d36c7b619d2e988bd69ade49d32857a4e0f67dbba118a05b564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xC5 JUMP SELFBALANCE BLOCKHASH 0x26 MSTORE 0x5D CALLDATASIZE 0xC7 0xB6 NOT 0xD2 0xE9 DUP9 0xBD PUSH10 0xADE49D32857A4E0F67DB 0xBA GT DUP11 SDIV 0xB5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "183:1350:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 1533,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 183,
									"end": 1533,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209fc556474026525d36c7b619d2e988bd69ade49d32857a4e0f67dbba118a05b564736f6c63430008120033",
									".code": [
										{
											"begin": 183,
											"end": 1533,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 183,
											"end": 1533,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 183,
											"end": 1533,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 183,
											"end": 1533,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 1533,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 1533,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 183,
											"end": 1533,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 1533,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 183,
											"end": 1533,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/FlameExchangeFdt.sol",
								"contracts/lib/TransferHelper.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/TransferHelper.sol\":{\"keccak256\":\"0xf1d71350584d577cff628f0aac7a7ce4eaf0b7f25759448099288575183da807\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://df99373e094561adc81e27aa305abcde1305454810f69587518bd738cc014572\",\"dweb:/ipfs/QmQ7sFubdStHJEVDtESXyt2xU6btvemKRTXJ74EJgZS2rr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/FlameExchangeFdt.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/FlameExchangeFdt.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							212
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 213,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								212
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 190,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 198,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 197,
												"id": 200,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 212,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 207,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 206,
												"id": 209,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 212,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"contracts/FlameExchangeFdt.sol": {
				"ast": {
					"absolutePath": "contracts/FlameExchangeFdt.sol",
					"exportedSymbols": {
						"Context": [
							212
						],
						"FlameExchangeFdt": [
							353
						],
						"IERC20": [
							190
						],
						"Ownable": [
							112
						],
						"TransferHelper": [
							513
						]
					},
					"id": 354,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 215,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 354,
							"sourceUnit": 191,
							"src": "25:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 216,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 354,
							"sourceUnit": 113,
							"src": "82:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/TransferHelper.sol",
							"file": "./lib/TransferHelper.sol",
							"id": 217,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 354,
							"sourceUnit": 514,
							"src": "135:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 218,
										"name": "Ownable",
										"nameLocations": [
											"200:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "200:7:3"
									},
									"id": 219,
									"nodeType": "InheritanceSpecifier",
									"src": "200:7:3"
								}
							],
							"canonicalName": "FlameExchangeFdt",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 353,
							"linearizedBaseContracts": [
								353,
								112,
								212
							],
							"name": "FlameExchangeFdt",
							"nameLocation": "180:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "200d2ed2",
									"id": 221,
									"mutability": "mutable",
									"name": "status",
									"nameLocation": "226:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 353,
									"src": "214:18:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 220,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "214:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b2cb5d8",
									"id": 223,
									"mutability": "mutable",
									"name": "minAmount",
									"nameLocation": "253:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 353,
									"src": "238:24:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 222,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "238:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5356172e",
									"id": 225,
									"mutability": "mutable",
									"name": "flame",
									"nameLocation": "283:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 353,
									"src": "268:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 224,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "268:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "22d392cb",
									"id": 227,
									"mutability": "mutable",
									"name": "fdt",
									"nameLocation": "309:3:3",
									"nodeType": "VariableDeclaration",
									"scope": 353,
									"src": "294:18:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 226,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "294:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4006ccc5",
									"id": 229,
									"mutability": "mutable",
									"name": "exchangeRatio",
									"nameLocation": "333:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 353,
									"src": "318:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 228,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "318:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "393:80:3",
										"statements": [
											{
												"expression": {
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 236,
														"name": "fdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "403:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 237,
														"name": "_fdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "409:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "403:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "403:10:3"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 240,
														"name": "flame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "423:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 241,
														"name": "_flame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "431:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "423:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "423:14:3"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 244,
														"name": "exchangeRatio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "447:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "462:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "447:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "447:19:3"
											}
										]
									},
									"id": 249,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "_fdt",
												"nameLocation": "373:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "365:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "365:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "_flame",
												"nameLocation": "386:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "378:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "364:29:3"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "393:0:3"
									},
									"scope": 353,
									"src": "353:120:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "515:33:3",
										"statements": [
											{
												"expression": {
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 254,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "525:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "534:7:3",
														"subExpression": {
															"id": 255,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "535:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "525:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "525:16:3"
											}
										]
									},
									"functionSelector": "14c98009",
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 252,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 251,
												"name": "onlyOwner",
												"nameLocations": [
													"506:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "506:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "506:9:3"
										}
									],
									"name": "setstatus",
									"nameLocation": "487:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:2:3"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "515:0:3"
									},
									"scope": 353,
									"src": "478:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "620:47:3",
										"statements": [
											{
												"expression": {
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 267,
														"name": "exchangeRatio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "630:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 268,
														"name": "_exchangeRatio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "646:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "630:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "630:30:3"
											}
										]
									},
									"functionSelector": "92ccd3a6",
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 265,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 264,
												"name": "onlyOwner",
												"nameLocations": [
													"610:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "610:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "610:9:3"
										}
									],
									"name": "setexchangeRatio",
									"nameLocation": "562:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "_exchangeRatio",
												"nameLocation": "587:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "579:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "578:24:3"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "620:0:3"
									},
									"scope": 353,
									"src": "553:114:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "727:36:3",
										"statements": [
											{
												"expression": {
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 279,
														"name": "minAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "737:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 280,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "749:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "737:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "737:19:3"
											}
										]
									},
									"functionSelector": "897b0637",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 277,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 276,
												"name": "onlyOwner",
												"nameLocations": [
													"718:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "718:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "718:9:3"
										}
									],
									"name": "setMinAmount",
									"nameLocation": "681:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "702:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "694:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:17:3"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:0:3"
									},
									"scope": 353,
									"src": "672:91:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "820:136:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 298,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "868:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_FlameExchangeFdt_$353",
																					"typeString": "contract FlameExchangeFdt"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_FlameExchangeFdt_$353",
																					"typeString": "contract FlameExchangeFdt"
																				}
																			],
																			"id": 297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "860:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 296,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "860:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "860:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 293,
																				"name": "fdt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "845:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 292,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "838:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "838:11:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "850:9:3",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 147,
																	"src": "838:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "838:36:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 301,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "878:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "838:47:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "830:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "830:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "830:56:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 308,
															"name": "fdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "924:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 309,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "929:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "933:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "929:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 311,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 305,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "896:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$513_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "911:12:3",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 441,
														"src": "896:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "896:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "896:53:3"
											}
										]
									},
									"functionSelector": "41458c86",
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 289,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 288,
												"name": "onlyOwner",
												"nameLocations": [
													"811:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "811:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "811:9:3"
										}
									],
									"name": "backToken",
									"nameLocation": "777:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "795:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "787:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "786:17:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:0:3"
									},
									"scope": 353,
									"src": "768:188:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "1003:272:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 321,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "1021:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 322,
																"name": "minAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "1032:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1021:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865207175616e7469747920796f7520627579206d7573742062652067726561746572207468616e20746865206d696e696d756d207175616e74697479",
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1042:64:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e8029f7e34aa94a809f6125a796c506562a6ddd5c48753a5543dc9b7ba087a6",
																"typeString": "literal_string \"The quantity you buy must be greater than the minimum quantity\""
															},
															"value": "The quantity you buy must be greater than the minimum quantity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e8029f7e34aa94a809f6125a796c506562a6ddd5c48753a5543dc9b7ba087a6",
																"typeString": "literal_string \"The quantity you buy must be greater than the minimum quantity\""
															}
														],
														"id": 320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1013:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1013:94:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "1013:94:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "flame",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "1149:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 331,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1156:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1160:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1156:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 335,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1176:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FlameExchangeFdt_$353",
																		"typeString": "contract FlameExchangeFdt"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FlameExchangeFdt_$353",
																		"typeString": "contract FlameExchangeFdt"
																	}
																],
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1168:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 333,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1168:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1168:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "1183:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 327,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "1117:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$513_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1132:16:3",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 487,
														"src": "1117:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1117:74:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "1117:74:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"name": "fdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "1229:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 344,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1234:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1238:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1234:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 346,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "1246:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 347,
																"name": "exchangeRatio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "1254:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1246:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 340,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "1201:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$513_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1216:12:3",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 441,
														"src": "1201:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1201:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "1201:67:3"
											}
										]
									},
									"functionSelector": "53556559",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exchange",
									"nameLocation": "970:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "987:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "979:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:17:3"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1003:0:3"
									},
									"scope": 353,
									"src": "961:314:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 354,
							"src": "171:1106:3",
							"usedErrors": []
						}
					],
					"src": "0:1277:3"
				},
				"id": 3
			},
			"contracts/lib/TransferHelper.sol": {
				"ast": {
					"absolutePath": "contracts/lib/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							513
						]
					},
					"id": 514,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 355,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 513,
							"linearizedBaseContracts": [
								513
							],
							"name": "TransferHelper",
							"nameLocation": "191:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "281:285:4",
										"statements": [
											{
												"assignments": [
													365,
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "362:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 397,
														"src": "357:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "357:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "384:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 397,
														"src": "371:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "371:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "426:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 373,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "438:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 374,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "442:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 370,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "403:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "407:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "403:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "403:45:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 368,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "392:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "398:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "392:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "392:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "356:93:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "467:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 380,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 367,
																					"src": "479:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 381,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "484:6:4",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "479:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 382,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "494:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "479:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 386,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 367,
																					"src": "510:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 388,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "517:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 387,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "517:4:4",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 389,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "516:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 384,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "499:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 385,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "503:6:4",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "499:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "499:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "479:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 392,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "478:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "467:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "526:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "459:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "459:100:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "459:100:4"
											}
										]
									},
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "221:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "256:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "248:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "248:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "265:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "260:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "260:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "232:39:4"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:0:4"
									},
									"scope": 513,
									"src": "212:354:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "642:287:4",
										"statements": [
											{
												"assignments": [
													408,
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "724:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 440,
														"src": "719:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "719:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "746:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 440,
														"src": "733:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 409,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "733:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 420,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "788:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 416,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "800:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 417,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "804:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 413,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "765:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "769:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "765:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "765:45:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 411,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "754:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "760:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "754:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "754:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "718:93:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 422,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "829:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 423,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 410,
																					"src": "841:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "846:6:4",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "841:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 425,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "856:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "841:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 429,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 410,
																					"src": "872:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 431,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "879:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 430,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "879:4:4",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 432,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "878:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 427,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "861:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "865:6:4",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "861:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "861:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "841:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 435,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "840:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "829:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "888:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															}
														],
														"id": 421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "821:101:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "821:101:4"
											}
										]
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "581:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "602:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "594:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "617:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "609:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "626:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "621:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "621:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "593:39:4"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "642:0:4"
									},
									"scope": 513,
									"src": "572:357:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "1023:310:4",
										"statements": [
											{
												"assignments": [
													453,
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 453,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1117:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "1112:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 452,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1112:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1139:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "1126:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 454,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1126:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1181:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 461,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "1193:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 462,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "1199:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 463,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "1203:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 458,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1158:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1162:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1158:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1158:51:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 456,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "1147:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1153:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1147:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1111:99:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 468,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "1228:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 469,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 455,
																					"src": "1240:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1245:6:4",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1240:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1255:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1240:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 475,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 455,
																					"src": "1271:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 477,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1278:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 476,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1278:4:4",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 478,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1277:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 473,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1260:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 474,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1264:6:4",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1260:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1260:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1240:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 481,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1239:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1228:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1287:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1220:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1220:106:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "1220:106:4"
											}
										]
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "944:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "969:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "961:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "984:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "976:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "998:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "990:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1007:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "1002:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1002:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:53:4"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1023:0:4"
									},
									"scope": 513,
									"src": "935:398:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "1397:134:4",
										"statements": [
											{
												"assignments": [
													495,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 495,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1413:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "1408:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 494,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1408:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 505,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1456:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1446:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 500,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1450:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1446:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 496,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "1425:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1428:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1425:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 498,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "1439:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1425:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1425:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1407:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "1477:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a204554485f5452414e534645525f4641494c4544",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1486:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881",
																"typeString": "literal_string \"TransferHelper: ETH_TRANSFER_FAILED\""
															},
															"value": "TransferHelper: ETH_TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881",
																"typeString": "literal_string \"TransferHelper: ETH_TRANSFER_FAILED\""
															}
														],
														"id": 506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1469:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1469:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "1469:55:4"
											}
										]
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "1348:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1372:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1364:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1381:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1376:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:24:4"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1397:0:4"
									},
									"scope": 513,
									"src": "1339:192:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 514,
							"src": "183:1350:4",
							"usedErrors": []
						}
					],
					"src": "46:1488:4"
				},
				"id": 4
			}
		}
	}
}