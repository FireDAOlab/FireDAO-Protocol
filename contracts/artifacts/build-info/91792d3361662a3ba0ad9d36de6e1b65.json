{
	"id": "91792d3361662a3ba0ad9d36de6e1b65",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FireLockFeeTransfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\ncontract FireLockFeeTransfer is Ownable{\n    uint256 public fee;\n    address public setAddr;\n    bool public useTreasuryDistributionContract;\n    constructor(address _setAddr) {\n        fee = 8000000000000000;\n        setAddr = _setAddr;\n    }\nfunction isUseTreasuryDistributionContract() public onlyOwner {\n    useTreasuryDistributionContract = !useTreasuryDistributionContract;\n}\nfunction setFee(uint _fee) public onlyOwner{\n    fee = _fee;\n}\nfunction setAddress(address _addr) public onlyOwner{\n    setAddr = _addr;\n}\nfunction getFee() external view returns(uint256) {\n    return fee;\n}\nfunction getUseTreasuryDistributionContract() external view returns(bool) {\n    return useTreasuryDistributionContract;\n}\n\nfunction getAddress() external view returns(address) {\n    return setAddr;\n}\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/FireLockFeeTransfer.sol": {
				"FireLockFeeTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_setAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUseTreasuryDistributionContract",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isUseTreasuryDistributionContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setAddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "setAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"name": "setFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "useTreasuryDistributionContract",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FireLockFeeTransfer.sol\":109:900  contract FireLockFeeTransfer is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FireLockFeeTransfer.sol\":255:352  constructor(address _setAddr) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"contracts/FireLockFeeTransfer.sol\":301:317  8000000000000000 */\n  0x1c6bf526340000\n    /* \"contracts/FireLockFeeTransfer.sol\":295:298  fee */\n  0x01\n    /* \"contracts/FireLockFeeTransfer.sol\":295:317  fee = 8000000000000000 */\n  sstore\n    /* \"contracts/FireLockFeeTransfer.sol\":327:334  setAddr */\n  0x02\n    /* \"contracts/FireLockFeeTransfer.sol\":327:345  setAddr = _setAddr */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/FireLockFeeTransfer.sol\":109:900  contract FireLockFeeTransfer is Ownable{... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_17:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_18:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_15:\n    /* \"contracts/FireLockFeeTransfer.sol\":109:900  contract FireLockFeeTransfer is Ownable{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FireLockFeeTransfer.sol\":109:900  contract FireLockFeeTransfer is Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9b8be4ee\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x9b8be4ee\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xced72f87\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xddca3f43\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe30081a0\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf143d102\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x13fe5521\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x38cc4831\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4ad2287f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x69fe0e2d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/FireLockFeeTransfer.sol\":353:490  function isUseTreasuryDistributionContract() public onlyOwner {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/FireLockFeeTransfer.sol\":822:898  function getAddress() external view returns(address) {... */\n    tag_4:\n        /* \"contracts/FireLockFeeTransfer.sol\":888:895  setAddr */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/FireLockFeeTransfer.sol\":822:898  function getAddress() external view returns(address) {... */\n    tag_18:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/FireLockFeeTransfer.sol\":822:898  function getAddress() external view returns(address) {... */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FireLockFeeTransfer.sol\":699:820  function getUseTreasuryDistributionContract() external view returns(bool) {... */\n    tag_5:\n        /* \"contracts/FireLockFeeTransfer.sol\":786:817  useTreasuryDistributionContract */\n      sload(0x02)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/FireLockFeeTransfer.sol\":699:820  function getUseTreasuryDistributionContract() external view returns(bool) {... */\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":387:401   */\n      swap1\n      iszero\n        /* \"#utility.yul\":380:402   */\n      iszero\n        /* \"#utility.yul\":362:403   */\n      dup2\n      mstore\n        /* \"#utility.yul\":350:352   */\n      0x20\n        /* \"#utility.yul\":335:353   */\n      add\n        /* \"contracts/FireLockFeeTransfer.sol\":699:820  function getUseTreasuryDistributionContract() external view returns(bool) {... */\n      tag_20\n        /* \"#utility.yul\":222:409   */\n      jump\n        /* \"contracts/FireLockFeeTransfer.sol\":491:553  function setFee(uint _fee) public onlyOwner{... */\n    tag_6:\n      tag_16\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_16\n      tag_31\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_18)\n        /* \"contracts/FireLockFeeTransfer.sol\":178:200  address public setAddr */\n    tag_9:\n      sload(0x02)\n      tag_18\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/FireLockFeeTransfer.sol\":630:698  function getFee() external view returns(uint256) {... */\n    tag_10:\n        /* \"contracts/FireLockFeeTransfer.sol\":692:695  fee */\n      sload(0x01)\n        /* \"contracts/FireLockFeeTransfer.sol\":630:698  function getFee() external view returns(uint256) {... */\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":745:770   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":733:735   */\n      0x20\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"contracts/FireLockFeeTransfer.sol\":630:698  function getFee() external view returns(uint256) {... */\n      tag_20\n        /* \"#utility.yul\":599:776   */\n      jump\n        /* \"contracts/FireLockFeeTransfer.sol\":154:172  uint256 public fee */\n    tag_11:\n      tag_38\n      sload(0x01)\n      dup2\n      jump\n        /* \"contracts/FireLockFeeTransfer.sol\":554:629  function setAddress(address _addr) public onlyOwner{... */\n    tag_12:\n      tag_16\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"contracts/FireLockFeeTransfer.sol\":206:249  bool public useTreasuryDistributionContract */\n    tag_13:\n      sload(0x02)\n      tag_22\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_16\n      tag_53\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"contracts/FireLockFeeTransfer.sol\":353:490  function isUseTreasuryDistributionContract() public onlyOwner {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_56:\n        /* \"contracts/FireLockFeeTransfer.sol\":456:487  useTreasuryDistributionContract */\n      0x02\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n        /* \"contracts/FireLockFeeTransfer.sol\":421:487  useTreasuryDistributionContract = !useTreasuryDistributionContract */\n      dup2\n      and\n      shl(0xa0, 0x01)\n        /* \"contracts/FireLockFeeTransfer.sol\":456:487  useTreasuryDistributionContract */\n      swap2\n      dup3\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/FireLockFeeTransfer.sol\":455:487  !useTreasuryDistributionContract */\n      iszero\n        /* \"contracts/FireLockFeeTransfer.sol\":421:487  useTreasuryDistributionContract = !useTreasuryDistributionContract */\n      swap1\n      swap2\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts/FireLockFeeTransfer.sol\":353:490  function isUseTreasuryDistributionContract() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/FireLockFeeTransfer.sol\":491:553  function setFee(uint _fee) public onlyOwner{... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_62:\n        /* \"contracts/FireLockFeeTransfer.sol\":540:543  fee */\n      0x01\n        /* \"contracts/FireLockFeeTransfer.sol\":540:550  fee = _fee */\n      sstore\n        /* \"contracts/FireLockFeeTransfer.sol\":491:553  function setFee(uint _fee) public onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/FireLockFeeTransfer.sol\":554:629  function setAddress(address _addr) public onlyOwner{... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_72:\n        /* \"contracts/FireLockFeeTransfer.sol\":611:618  setAddr */\n      0x02\n        /* \"contracts/FireLockFeeTransfer.sol\":611:626  setAddr = _addr */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/FireLockFeeTransfer.sol\":554:629  function setAddress(address _addr) public onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1274:1276   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1256:1277   */\n      mstore\n        /* \"#utility.yul\":1313:1315   */\n      0x26\n        /* \"#utility.yul\":1293:1311   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1286:1316   */\n      mstore\n        /* \"#utility.yul\":1352:1386   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1332:1350   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1325:1387   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":1403:1421   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1396:1432   */\n      mstore\n        /* \"#utility.yul\":1449:1468   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1681:1683   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1663:1684   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1700:1718   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1693:1723   */\n      mstore\n        /* \"#utility.yul\":1759:1793   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1739:1757   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1732:1794   */\n      mstore\n        /* \"#utility.yul\":1811:1829   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_78\n        /* \"#utility.yul\":1479:1835   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":414:594   */\n    tag_28:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":526:528   */\n      0x20\n        /* \"#utility.yul\":514:523   */\n      dup3\n        /* \"#utility.yul\":505:512   */\n      dup5\n        /* \"#utility.yul\":501:524   */\n      sub\n        /* \"#utility.yul\":497:529   */\n      slt\n        /* \"#utility.yul\":494:546   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":542:543   */\n      0x00\n        /* \"#utility.yul\":539:540   */\n      dup1\n        /* \"#utility.yul\":532:544   */\n      revert\n        /* \"#utility.yul\":494:546   */\n    tag_94:\n      pop\n        /* \"#utility.yul\":565:588   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":414:594   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":781:1067   */\n    tag_47:\n        /* \"#utility.yul\":840:846   */\n      0x00\n        /* \"#utility.yul\":893:895   */\n      0x20\n        /* \"#utility.yul\":881:890   */\n      dup3\n        /* \"#utility.yul\":872:879   */\n      dup5\n        /* \"#utility.yul\":868:891   */\n      sub\n        /* \"#utility.yul\":864:896   */\n      slt\n        /* \"#utility.yul\":861:913   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":909:910   */\n      0x00\n        /* \"#utility.yul\":906:907   */\n      dup1\n        /* \"#utility.yul\":899:911   */\n      revert\n        /* \"#utility.yul\":861:913   */\n    tag_97:\n        /* \"#utility.yul\":935:958   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":987:1018   */\n      dup2\n      and\n        /* \"#utility.yul\":977:1019   */\n      dup2\n      eq\n        /* \"#utility.yul\":967:1037   */\n      tag_98\n      jumpi\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1030:1031   */\n      dup1\n        /* \"#utility.yul\":1023:1035   */\n      revert\n        /* \"#utility.yul\":967:1037   */\n    tag_98:\n        /* \"#utility.yul\":1056:1061   */\n      swap4\n        /* \"#utility.yul\":781:1067   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122039eb16b26e4776ea614e8500c03de19bd0741d7b9ff89222b94e6d66cde89c7e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_159": {
									"entryPoint": null,
									"id": 159,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 104,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:3"
															},
															"nodeType": "YulIf",
															"src": "105:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:3"
															},
															"nodeType": "YulIf",
															"src": "204:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:3",
														"type": ""
													}
												],
												"src": "14:290:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516104b13803806104b183398101604081905261002f916100b8565b61003833610068565b661c6bf526340000600155600280546001600160a01b0319166001600160a01b03929092169190911790556100e8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ca57600080fd5b81516001600160a01b03811681146100e157600080fd5b9392505050565b6103ba806100f76000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639b8be4ee116100715780639b8be4ee14610137578063ced72f871461014a578063ddca3f431461015c578063e30081a014610165578063f143d10214610178578063f2fde38b1461018c57600080fd5b806313fe5521146100b957806338cc4831146100c35780634ad2287f146100ed57806369fe0e2d1461010b578063715018a61461011e5780638da5cb5b14610126575b600080fd5b6100c161019f565b005b6002546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b600254600160a01b900460ff165b60405190151581526020016100e4565b6100c161011936600461033b565b6101c8565b6100c16101d5565b6000546001600160a01b03166100d0565b6002546100d0906001600160a01b031681565b6001545b6040519081526020016100e4565b61014e60015481565b6100c1610173366004610354565b6101e9565b6002546100fb90600160a01b900460ff1681565b6100c161019a366004610354565b610213565b6101a7610291565b6002805460ff60a01b198116600160a01b9182900460ff1615909102179055565b6101d0610291565b600155565b6101dd610291565b6101e760006102eb565b565b6101f1610291565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61021b610291565b6001600160a01b0381166102855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61028e816102eb565b50565b6000546001600160a01b031633146101e75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561034d57600080fd5b5035919050565b60006020828403121561036657600080fd5b81356001600160a01b038116811461037d57600080fd5b939250505056fea264697066735822122039eb16b26e4776ea614e8500c03de19bd0741d7b9ff89222b94e6d66cde89c7e64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4B1 CODESIZE SUB DUP1 PUSH2 0x4B1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xB8 JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x68 JUMP JUMPDEST PUSH7 0x1C6BF526340000 PUSH1 0x1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3BA DUP1 PUSH2 0xF7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B8BE4EE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9B8BE4EE EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xCED72F87 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xE30081A0 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xF143D102 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13FE5521 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x38CC4831 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x4AD2287F EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x126 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x19F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x119 CALLDATASIZE PUSH1 0x4 PUSH2 0x33B JUMP JUMPDEST PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xD0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x14E PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xFB SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1D0 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x291 JUMP JUMPDEST PUSH2 0x1E7 PUSH1 0x0 PUSH2 0x2EB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x21B PUSH2 0x291 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28E DUP2 PUSH2 0x2EB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xEB AND 0xB2 PUSH15 0x4776EA614E8500C03DE19BD0741D7B SWAP16 0xF8 SWAP3 0x22 0xB9 0x4E PUSH14 0x66CDE89C7E64736F6C6343000812 STOP CALLER ",
							"sourceMap": "109:791:2:-:0;;;255:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;301:16:2;295:3;:22;327:7;:18;;-1:-1:-1;;;;;;327:18:2;-1:-1:-1;;;;;327:18:2;;;;;;;;;;109:791;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:3:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:3;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:3:o;:::-;109:791:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 657,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 747,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@fee_141": {
									"entryPoint": null,
									"id": 141,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAddress_218": {
									"entryPoint": null,
									"id": 218,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getFee_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUseTreasuryDistributionContract_210": {
									"entryPoint": null,
									"id": 210,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isUseTreasuryDistributionContract_170": {
									"entryPoint": 415,
									"id": 170,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 469,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAddr_143": {
									"entryPoint": null,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAddress_194": {
									"entryPoint": 489,
									"id": 194,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFee_182": {
									"entryPoint": 456,
									"id": 182,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 531,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@useTreasuryDistributionContract_145": {
									"entryPoint": null,
									"id": 145,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1837:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:3",
														"type": ""
													}
												],
												"src": "14:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "317:92:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "327:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "339:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "350:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "335:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "327:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "369:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "394:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "387:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "387:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "380:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "362:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "362:41:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "286:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "297:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "308:4:3",
														"type": ""
													}
												],
												"src": "222:187:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:110:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "530:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "539:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "542:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "532:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "532:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "532:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "505:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "514:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "501:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "501:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "526:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "497:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:32:3"
															},
															"nodeType": "YulIf",
															"src": "494:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "555:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "578:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "565:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "565:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "555:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "450:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "461:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "473:6:3",
														"type": ""
													}
												],
												"src": "414:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "700:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "710:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "722:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "718:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "710:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "752:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "763:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "669:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "680:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "691:4:3",
														"type": ""
													}
												],
												"src": "599:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "851:216:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "897:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "906:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "899:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "899:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "899:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "872:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "881:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "868:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "868:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "893:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "864:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "864:32:3"
															},
															"nodeType": "YulIf",
															"src": "861:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "922:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "948:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "935:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "926:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1021:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1030:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1023:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1023:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "980:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "991:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1006:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1011:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1002:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1002:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1015:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "998:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "998:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "977:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "977:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:50:3"
															},
															"nodeType": "YulIf",
															"src": "967:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1046:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1056:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1046:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "817:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "828:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "840:6:3",
														"type": ""
													}
												],
												"src": "781:286:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:228:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1263:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1274:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1297:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1308:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1293:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1313:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1286:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1336:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1347:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1332:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:18:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1352:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1325:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1325:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1325:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1407:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1418:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1403:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1403:18:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1423:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1396:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1396:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1396:36:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1441:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1453:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1464:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1449:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1449:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1441:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1223:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1237:4:3",
														"type": ""
													}
												],
												"src": "1072:402:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1653:182:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1670:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1681:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1663:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1663:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1663:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1704:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1715:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1700:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1700:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1693:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1693:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1743:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1754:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1739:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1739:18:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1759:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1732:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1732:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1732:62:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1803:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1815:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1826:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1811:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1811:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1803:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1630:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1644:4:3",
														"type": ""
													}
												],
												"src": "1479:356:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c80639b8be4ee116100715780639b8be4ee14610137578063ced72f871461014a578063ddca3f431461015c578063e30081a014610165578063f143d10214610178578063f2fde38b1461018c57600080fd5b806313fe5521146100b957806338cc4831146100c35780634ad2287f146100ed57806369fe0e2d1461010b578063715018a61461011e5780638da5cb5b14610126575b600080fd5b6100c161019f565b005b6002546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b600254600160a01b900460ff165b60405190151581526020016100e4565b6100c161011936600461033b565b6101c8565b6100c16101d5565b6000546001600160a01b03166100d0565b6002546100d0906001600160a01b031681565b6001545b6040519081526020016100e4565b61014e60015481565b6100c1610173366004610354565b6101e9565b6002546100fb90600160a01b900460ff1681565b6100c161019a366004610354565b610213565b6101a7610291565b6002805460ff60a01b198116600160a01b9182900460ff1615909102179055565b6101d0610291565b600155565b6101dd610291565b6101e760006102eb565b565b6101f1610291565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61021b610291565b6001600160a01b0381166102855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61028e816102eb565b50565b6000546001600160a01b031633146101e75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561034d57600080fd5b5035919050565b60006020828403121561036657600080fd5b81356001600160a01b038116811461037d57600080fd5b939250505056fea264697066735822122039eb16b26e4776ea614e8500c03de19bd0741d7b9ff89222b94e6d66cde89c7e64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B8BE4EE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9B8BE4EE EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xCED72F87 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xE30081A0 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xF143D102 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13FE5521 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x38CC4831 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x4AD2287F EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x126 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x19F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x119 CALLDATASIZE PUSH1 0x4 PUSH2 0x33B JUMP JUMPDEST PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xD0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x14E PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xFB SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1D0 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x291 JUMP JUMPDEST PUSH2 0x1E7 PUSH1 0x0 PUSH2 0x2EB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x21B PUSH2 0x291 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28E DUP2 PUSH2 0x2EB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xEB AND 0xB2 PUSH15 0x4776EA614E8500C03DE19BD0741D7B SWAP16 0xF8 SWAP3 0x22 0xB9 0x4E PUSH14 0x66CDE89C7E64736F6C6343000812 STOP CALLER ",
							"sourceMap": "109:791:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;353:137;;;:::i;:::-;;822:76;888:7;;-1:-1:-1;;;;;888:7:2;822:76;;;-1:-1:-1;;;;;178:32:3;;;160:51;;148:2;133:18;822:76:2;;;;;;;;699:121;786:31;;-1:-1:-1;;;786:31:2;;;;699:121;;;387:14:3;;380:22;362:41;;350:2;335:18;699:121:2;222:187:3;491:62:2;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;178:22:2;;;;;-1:-1:-1;;;;;178:22:2;;;630:68;692:3;;630:68;;;745:25:3;;;733:2;718:18;630:68:2;599:177:3;154:18:2;;;;;;554:75;;;;;;:::i;:::-;;:::i;206:43::-;;;;;-1:-1:-1;;;206:43:2;;;;;;2081:198:0;;;;;;:::i;:::-;;:::i;353:137:2:-;1094:13:0;:11;:13::i;:::-;456:31:2::1;::::0;;-1:-1:-1;;;;421:66:2;::::1;-1:-1:-1::0;;;456:31:2;;;::::1;;;455:32;421:66:::0;;::::1;;::::0;;353:137::o;491:62::-;1094:13:0;:11;:13::i;:::-;540:3:2::1;:10:::0;491:62::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;554:75:2:-;1094:13:0;:11;:13::i;:::-;611:7:2::1;:15:::0;;-1:-1:-1;;;;;;611:15:2::1;-1:-1:-1::0;;;;;611:15:2;;;::::1;::::0;;;::::1;::::0;;554:75::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;1274:2:3;2161:73:0::1;::::0;::::1;1256:21:3::0;1313:2;1293:18;;;1286:30;1352:34;1332:18;;;1325:62;-1:-1:-1;;;1403:18:3;;;1396:36;1449:19;;2161:73:0::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;1681:2:3;1414:68:0;;;1663:21:3;;;1700:18;;;1693:30;1759:34;1739:18;;;1732:62;1811:18;;1414:68:0;1479:356:3;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;414:180:3:-;473:6;526:2;514:9;505:7;501:23;497:32;494:52;;;542:1;539;532:12;494:52;-1:-1:-1;565:23:3;;414:180;-1:-1:-1;414:180:3:o;781:286::-;840:6;893:2;881:9;872:7;868:23;864:32;861:52;;;909:1;906;899:12;861:52;935:23;;-1:-1:-1;;;;;987:31:3;;977:42;;967:70;;1033:1;1030;1023:12;967:70;1056:5;781:286;-1:-1:-1;;;781:286:3:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "190800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"fee()": "2339",
								"getAddress()": "2332",
								"getFee()": "2303",
								"getUseTreasuryDistributionContract()": "2355",
								"isUseTreasuryDistributionContract()": "26582",
								"owner()": "2431",
								"renounceOwnership()": "infinite",
								"setAddr()": "2326",
								"setAddress(address)": "26766",
								"setFee(uint256)": "24555",
								"transferOwnership(address)": "28408",
								"useTreasuryDistributionContract()": "2415"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 900,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 109,
									"end": 900,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 109,
									"end": 900,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 352,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 352,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 352,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 352,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 352,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 255,
									"end": 352,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 255,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 255,
									"end": 352,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 255,
									"end": 352,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 301,
									"end": 317,
									"name": "PUSH",
									"source": 2,
									"value": "1C6BF526340000"
								},
								{
									"begin": 295,
									"end": 298,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 295,
									"end": 317,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 327,
									"end": 334,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 327,
									"end": 345,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 327,
									"end": 345,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 327,
									"end": 345,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 327,
									"end": 345,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 327,
									"end": 345,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 327,
									"end": 345,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 327,
									"end": 345,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 327,
									"end": 345,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 327,
									"end": 345,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 327,
									"end": 345,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 327,
									"end": 345,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 327,
									"end": 345,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 327,
									"end": 345,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 109,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 109,
									"end": 900,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 109,
									"end": 900,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 900,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 109,
									"end": 900,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 900,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 900,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 109,
									"end": 900,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 900,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122039eb16b26e4776ea614e8500c03de19bd0741d7b9ff89222b94e6d66cde89c7e64736f6c63430008120033",
									".code": [
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "9B8BE4EE"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "9B8BE4EE"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "CED72F87"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "DDCA3F43"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "E30081A0"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "F143D102"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "13FE5521"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "38CC4831"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "4AD2287F"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "69FE0E2D"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 900,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 353,
											"end": 490,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 353,
											"end": 490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 353,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 353,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 353,
											"end": 490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 353,
											"end": 490,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 353,
											"end": 490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 353,
											"end": 490,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 822,
											"end": 898,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 822,
											"end": 898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 888,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 888,
											"end": 895,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 888,
											"end": 895,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 822,
											"end": 898,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 822,
											"end": 898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 822,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 822,
											"end": 898,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 822,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 822,
											"end": 898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 822,
											"end": 898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 822,
											"end": 898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 822,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 822,
											"end": 898,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 699,
											"end": 820,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 699,
											"end": 820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 786,
											"end": 817,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 786,
											"end": 817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 786,
											"end": 817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 786,
											"end": 817,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 786,
											"end": 817,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 786,
											"end": 817,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 699,
											"end": 820,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 699,
											"end": 820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 699,
											"end": 820,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 820,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 387,
											"end": 401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 401,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 380,
											"end": 402,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 362,
											"end": 403,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 362,
											"end": 403,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 350,
											"end": 352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 353,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 699,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 409,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 491,
											"end": 553,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 491,
											"end": 553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 491,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 491,
											"end": 553,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 553,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 491,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 491,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 553,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 491,
											"end": 553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 491,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 178,
											"end": 200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 178,
											"end": 200,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 178,
											"end": 200,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 178,
											"end": 200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 178,
											"end": 200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 178,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 178,
											"end": 200,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 630,
											"end": 698,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 630,
											"end": 698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 692,
											"end": 695,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 692,
											"end": 695,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 630,
											"end": 698,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 630,
											"end": 698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 630,
											"end": 698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 698,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 733,
											"end": 735,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 630,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 599,
											"end": 776,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 154,
											"end": 172,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 154,
											"end": 172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 154,
											"end": 172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 154,
											"end": 172,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 154,
											"end": 172,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 154,
											"end": 172,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 154,
											"end": 172,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 554,
											"end": 629,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 554,
											"end": 629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 554,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 554,
											"end": 629,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 554,
											"end": 629,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 554,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 554,
											"end": 629,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 554,
											"end": 629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 554,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 206,
											"end": 249,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 206,
											"end": 249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 249,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 206,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 206,
											"end": 249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 206,
											"end": 249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 206,
											"end": 249,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 206,
											"end": 249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 206,
											"end": 249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 206,
											"end": 249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 353,
											"end": 490,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 353,
											"end": 490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 456,
											"end": 487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 456,
											"end": 487,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 456,
											"end": 487,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 421,
											"end": 487,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 421,
											"end": 487,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 456,
											"end": 487,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 456,
											"end": 487,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 456,
											"end": 487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 456,
											"end": 487,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 456,
											"end": 487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 456,
											"end": 487,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 455,
											"end": 487,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 421,
											"end": 487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 421,
											"end": 487,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 421,
											"end": 487,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 421,
											"end": 487,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 421,
											"end": 487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 421,
											"end": 487,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 353,
											"end": 490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 553,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 491,
											"end": 553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 540,
											"end": 550,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 554,
											"end": 629,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 554,
											"end": 629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 611,
											"end": 618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 611,
											"end": 626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 611,
											"end": 626,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 611,
											"end": 626,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 611,
											"end": 626,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 611,
											"end": 626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 611,
											"end": 626,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 611,
											"end": 626,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 611,
											"end": 626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 611,
											"end": 626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 611,
											"end": 626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 611,
											"end": 626,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 611,
											"end": 626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 611,
											"end": 626,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 554,
											"end": 629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1276,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1313,
											"end": 1315,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1386,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1332,
											"end": 1350,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1332,
											"end": 1350,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1350,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1387,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1421,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1403,
											"end": 1421,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 1421,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1396,
											"end": 1432,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1700,
											"end": 1718,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1718,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1723,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1793,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1739,
											"end": 1757,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1739,
											"end": 1757,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1757,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 1794,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1479,
											"end": 1835,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 414,
											"end": 594,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 414,
											"end": 594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 528,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 505,
											"end": 512,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 501,
											"end": 524,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 497,
											"end": 529,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 494,
											"end": 546,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 494,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 494,
											"end": 546,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 542,
											"end": 543,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 540,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 532,
											"end": 544,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 494,
											"end": 546,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 494,
											"end": 546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 565,
											"end": 588,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 565,
											"end": 588,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 414,
											"end": 594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 414,
											"end": 594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 840,
											"end": 846,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 895,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 890,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 872,
											"end": 879,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 868,
											"end": 891,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 864,
											"end": 896,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 861,
											"end": 913,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 861,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 861,
											"end": 913,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 907,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 899,
											"end": 911,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 861,
											"end": 913,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 861,
											"end": 913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 935,
											"end": 958,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 935,
											"end": 958,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1031,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1023,
											"end": 1035,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1061,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 781,
											"end": 1067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/FireLockFeeTransfer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"fee()": "ddca3f43",
							"getAddress()": "38cc4831",
							"getFee()": "ced72f87",
							"getUseTreasuryDistributionContract()": "4ad2287f",
							"isUseTreasuryDistributionContract()": "13fe5521",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setAddr()": "9b8be4ee",
							"setAddress(address)": "e30081a0",
							"setFee(uint256)": "69fe0e2d",
							"transferOwnership(address)": "f2fde38b",
							"useTreasuryDistributionContract()": "f143d102"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_setAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUseTreasuryDistributionContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isUseTreasuryDistributionContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useTreasuryDistributionContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FireLockFeeTransfer.sol\":\"FireLockFeeTransfer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/FireLockFeeTransfer.sol\":{\"keccak256\":\"0x41c57dd45af270d2ff0e0a4c4b1fc672ae6c99899d5cc439b7244422e52f550a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c60d9da5f6900e0a4612118c5bf1ea8b12e140cb522c8f1c9bd5611ab7c0a1f\",\"dweb:/ipfs/QmSdUi3EJqcA1SZfh5szHeT6YAFzGDA2kQKqjJCP6LoERx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/FireLockFeeTransfer.sol:FireLockFeeTransfer",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 141,
								"contract": "contracts/FireLockFeeTransfer.sol:FireLockFeeTransfer",
								"label": "fee",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "contracts/FireLockFeeTransfer.sol:FireLockFeeTransfer",
								"label": "setAddr",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 145,
								"contract": "contracts/FireLockFeeTransfer.sol:FireLockFeeTransfer",
								"label": "useTreasuryDistributionContract",
								"offset": 20,
								"slot": "2",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/FireLockFeeTransfer.sol": {
				"ast": {
					"absolutePath": "contracts/FireLockFeeTransfer.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"FireLockFeeTransfer": [
							219
						],
						"Ownable": [
							112
						]
					},
					"id": 220,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 220,
							"sourceUnit": 113,
							"src": "56:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "Ownable",
										"nameLocations": [
											"141:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "141:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "141:7:2"
								}
							],
							"canonicalName": "FireLockFeeTransfer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 219,
							"linearizedBaseContracts": [
								219,
								112,
								134
							],
							"name": "FireLockFeeTransfer",
							"nameLocation": "118:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "ddca3f43",
									"id": 141,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "169:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 219,
									"src": "154:18:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "154:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b8be4ee",
									"id": 143,
									"mutability": "mutable",
									"name": "setAddr",
									"nameLocation": "193:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 219,
									"src": "178:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 142,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "178:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f143d102",
									"id": 145,
									"mutability": "mutable",
									"name": "useTreasuryDistributionContract",
									"nameLocation": "218:31:2",
									"nodeType": "VariableDeclaration",
									"scope": 219,
									"src": "206:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 144,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "206:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "285:67:2",
										"statements": [
											{
												"expression": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "295:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "38303030303030303030303030303030",
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "301:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8000000000000000_by_1",
															"typeString": "int_const 8000000000000000"
														},
														"value": "8000000000000000"
													},
													"src": "295:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "295:22:2"
											},
											{
												"expression": {
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 154,
														"name": "setAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "327:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 155,
														"name": "_setAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "337:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "327:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "327:18:2"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "_setAddr",
												"nameLocation": "275:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "267:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:18:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:0:2"
									},
									"scope": 219,
									"src": "255:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "415:75:2",
										"statements": [
											{
												"expression": {
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 164,
														"name": "useTreasuryDistributionContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "421:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "455:32:2",
														"subExpression": {
															"id": 165,
															"name": "useTreasuryDistributionContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "456:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "421:66:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "421:66:2"
											}
										]
									},
									"functionSelector": "13fe5521",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 162,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 161,
												"name": "onlyOwner",
												"nameLocations": [
													"405:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "405:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "405:9:2"
										}
									],
									"name": "isUseTreasuryDistributionContract",
									"nameLocation": "362:33:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:2:2"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "415:0:2"
									},
									"scope": 219,
									"src": "353:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "534:19:2",
										"statements": [
											{
												"expression": {
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 177,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "540:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 178,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "546:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "540:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "540:10:2"
											}
										]
									},
									"functionSelector": "69fe0e2d",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 175,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 174,
												"name": "onlyOwner",
												"nameLocations": [
													"525:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "525:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "525:9:2"
										}
									],
									"name": "setFee",
									"nameLocation": "500:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "512:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "507:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "507:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "506:11:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "534:0:2"
									},
									"scope": 219,
									"src": "491:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "605:24:2",
										"statements": [
											{
												"expression": {
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 189,
														"name": "setAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "611:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 190,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "621:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "611:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "611:15:2"
											}
										]
									},
									"functionSelector": "e30081a0",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 187,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 186,
												"name": "onlyOwner",
												"nameLocations": [
													"596:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "596:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "596:9:2"
										}
									],
									"name": "setAddress",
									"nameLocation": "563:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "582:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "574:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:15:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:0:2"
									},
									"scope": 219,
									"src": "554:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "679:19:2",
										"statements": [
											{
												"expression": {
													"id": 199,
													"name": "fee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 141,
													"src": "692:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 198,
												"id": 200,
												"nodeType": "Return",
												"src": "685:10:2"
											}
										]
									},
									"functionSelector": "ced72f87",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFee",
									"nameLocation": "639:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:2:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "670:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:9:2"
									},
									"scope": 219,
									"src": "630:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "773:47:2",
										"statements": [
											{
												"expression": {
													"id": 207,
													"name": "useTreasuryDistributionContract",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "786:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 206,
												"id": 208,
												"nodeType": "Return",
												"src": "779:38:2"
											}
										]
									},
									"functionSelector": "4ad2287f",
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUseTreasuryDistributionContract",
									"nameLocation": "708:34:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "742:2:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "767:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "767:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:6:2"
									},
									"scope": 219,
									"src": "699:121:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "875:23:2",
										"statements": [
											{
												"expression": {
													"id": 215,
													"name": "setAddr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 143,
													"src": "888:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 214,
												"id": 216,
												"nodeType": "Return",
												"src": "881:14:2"
											}
										]
									},
									"functionSelector": "38cc4831",
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "831:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:2:2"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "866:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "865:9:2"
									},
									"scope": 219,
									"src": "822:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 220,
							"src": "109:791:2",
							"usedErrors": []
						}
					],
					"src": "32:868:2"
				},
				"id": 2
			}
		}
	}
}