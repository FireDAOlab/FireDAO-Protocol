{
	"id": "3898c3a7733c221fe8b522333cbbd0ac",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MarketValueManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./lib/Address.sol\";\nimport \"./interface/IUniswapV2Router02.sol\";\nimport \"./interface/IReputation.sol\";\n\ncontract MarketValueManager is Ownable {\n    IERC20 public weth;\n    address public token;\n    uint256 public cooldown;\n    IUniswapV2Router02 public uniswapV2Router;\n    mapping(address => uint256) public isOrNotUseWallet;\n    address public cityNodeAddress;\n    constructor() {\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3);\n        uniswapV2Router = _uniswapV2Router;\n        weth = IERC20(uniswapV2Router.WETH());\n        weth.approve(address(0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3), 10**34);\n        weth.approve(address(this), 10**34);\n    }\n    modifier notContract() {\n        require(!Address.isContract(msg.sender), \"No contracts\");\n        _;\n    }\n    function setcityNodeAddress(address _cityNodeAddress) public onlyOwner {\n        cityNodeAddress = _cityNodeAddress;\n    }\n\n    function buyAndBurn() public  {\n        require(weth.balanceOf(address(this)) >=10 **18 , \"BNB balance error\");\n        require(block.timestamp > cooldown + 300 , \"is not cooldown\");\n        require(IERC20(token).balanceOf(msg.sender) > 1000*10**18,\"u hold amount error\" );\n        if(block.timestamp - isOrNotUseWallet[msg.sender] < 3600){\n            revert();\n        }\n        swapTokensForOther(10**18);\n        isOrNotUseWallet[msg.sender] = block.timestamp;\n        cooldown = block.timestamp;\n    }\n   \n    function checkSAFEBalance() public view returns(uint256){\n        return IERC20(token).balanceOf(address(this));\n    }\n\n    function checkBNBBalance() public view returns(uint256) {\n        return weth.balanceOf(address(this));\n    }\n \n    function setAimToken(address _token) public onlyOwner {\n        token = _token;\n    }\n    \n\n\n    function swapTokensForOther(uint256 tokenAmount) private {\n        // generate the uniswap pair path of token -> weth\n\t\taddress[] memory path = new address[](2);\n        path[0] = uniswapV2Router.WETH();\n        path[1] = token ;//testnet\n        uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(\n            tokenAmount,\n            0,\n            path,\n            address(this),\n            block.timestamp\n        );\n        IERC20(token).transfer(address(0x000000000000000000000000000000000000dEaD), checkSAFEBalance()/100*95);\n        IERC20(token).transfer(msg.sender, checkSAFEBalance()/100*5);\n    }\n    function withdraw() public onlyOwner{\n        weth.transfer(msg.sender, checkBNBBalance());\n    }\n}"
			},
			"contracts/interface/IReputation.sol": {
				"content": "//\tSPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IReputation{\n  function checkReputation(address _user) external view returns(uint256); \n\n}"
			},
			"contracts/interface/IUniswapV2Router02.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
			},
			"contracts/lib/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/interface/IUniswapV2Router01.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MarketValueManager.sol": {
				"MarketValueManager": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "buyAndBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkBNBBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkSAFEBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cityNodeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cooldown",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isOrNotUseWallet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "setAimToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_cityNodeAddress",
									"type": "address"
								}
							],
							"name": "setcityNodeAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weth",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MarketValueManager.sol\":279:2723  contract MarketValueManager is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MarketValueManager.sol\":543:893  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"contracts/MarketValueManager.sol\":677:692  uniswapV2Router */\n  0x04\n    /* \"contracts/MarketValueManager.sol\":677:711  uniswapV2Router = _uniswapV2Router */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/MarketValueManager.sol\":624:666  0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3 */\n  0x9ac64cc6e4415144c455bd8e4837fea55603e5c3\n    /* \"contracts/MarketValueManager.sol\":677:711  uniswapV2Router = _uniswapV2Router */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/MarketValueManager.sol\":735:757  uniswapV2Router.WETH() */\n  0x40\n  dup1\n  mload\n  shl(0xe3, 0x15ab88c9)\n  dup2\n  mstore\n  swap1\n  mload\n    /* \"contracts/MarketValueManager.sol\":624:666  0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3 */\n  swap2\n  swap3\n  dup4\n  swap3\n    /* \"contracts/MarketValueManager.sol\":735:755  uniswapV2Router.WETH */\n  0xad5c4648\n  swap3\n    /* \"contracts/MarketValueManager.sol\":735:757  uniswapV2Router.WETH() */\n  dup1\n  dup4\n  add\n  swap3\n  0x20\n  swap3\n  swap2\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"contracts/MarketValueManager.sol\":624:666  0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3 */\n  dup7\n    /* \"contracts/MarketValueManager.sol\":735:757  uniswapV2Router.WETH() */\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_11\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_11:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"contracts/MarketValueManager.sol\":721:725  weth */\n  0x01\n    /* \"contracts/MarketValueManager.sol\":721:758  weth = IERC20(uniswapV2Router.WETH()) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  dup3\n  or\n  swap1\n  sstore\n    /* \"contracts/MarketValueManager.sol\":768:841  weth.approve(address(0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3), 10**34) */\n  mload(0x40)\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n    /* \"contracts/MarketValueManager.sol\":789:831  0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3 */\n  0x9ac64cc6e4415144c455bd8e4837fea55603e5c3\n    /* \"contracts/MarketValueManager.sol\":768:841  weth.approve(address(0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3), 10**34) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":525:576   */\n  mstore\n    /* \"contracts/MarketValueManager.sol\":834:840  10**34 */\n  0x01ed09bead87c0378d8e6400000000\n    /* \"#utility.yul\":592:610   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":585:619   */\n  mstore\n    /* \"contracts/MarketValueManager.sol\":768:780  weth.approve */\n  0x095ea7b3\n  swap1\n    /* \"#utility.yul\":498:516   */\n  0x44\n  add\n    /* \"contracts/MarketValueManager.sol\":768:841  weth.approve(address(0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3), 10**34) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_17\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_17:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  pop\n    /* \"contracts/MarketValueManager.sol\":851:855  weth */\n  sload(0x01)\n    /* \"contracts/MarketValueManager.sol\":851:886  weth.approve(address(this), 10**34) */\n  mload(0x40)\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n    /* \"contracts/MarketValueManager.sol\":872:876  this */\n  address\n    /* \"contracts/MarketValueManager.sol\":851:886  weth.approve(address(this), 10**34) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":525:576   */\n  mstore\n    /* \"contracts/MarketValueManager.sol\":879:885  10**34 */\n  0x01ed09bead87c0378d8e6400000000\n    /* \"#utility.yul\":592:610   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":585:619   */\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/MarketValueManager.sol\":851:855  weth */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"contracts/MarketValueManager.sol\":851:863  weth.approve */\n  0x095ea7b3\n  swap1\n    /* \"#utility.yul\":498:516   */\n  0x44\n  add\n    /* \"contracts/MarketValueManager.sol\":851:886  weth.approve(address(this), 10**34) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_22\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_22:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_23\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_23:\n  pop\n    /* \"contracts/MarketValueManager.sol\":557:893  {... */\n  pop\n    /* \"contracts/MarketValueManager.sol\":279:2723  contract MarketValueManager is Ownable {... */\n  jump(tag_27)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_13:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_29:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_30:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":630:907   */\ntag_19:\n    /* \"#utility.yul\":697:703   */\n  0x00\n    /* \"#utility.yul\":750:752   */\n  0x20\n    /* \"#utility.yul\":738:747   */\n  dup3\n    /* \"#utility.yul\":729:736   */\n  dup5\n    /* \"#utility.yul\":725:748   */\n  sub\n    /* \"#utility.yul\":721:753   */\n  slt\n    /* \"#utility.yul\":718:770   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":766:767   */\n  0x00\n    /* \"#utility.yul\":763:764   */\n  dup1\n    /* \"#utility.yul\":756:768   */\n  revert\n    /* \"#utility.yul\":718:770   */\ntag_33:\n    /* \"#utility.yul\":798:807   */\n  dup2\n    /* \"#utility.yul\":792:808   */\n  mload\n    /* \"#utility.yul\":851:856   */\n  dup1\n    /* \"#utility.yul\":844:857   */\n  iszero\n    /* \"#utility.yul\":837:858   */\n  iszero\n    /* \"#utility.yul\":830:835   */\n  dup2\n    /* \"#utility.yul\":827:859   */\n  eq\n    /* \"#utility.yul\":817:877   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":873:874   */\n  0x00\n    /* \"#utility.yul\":870:871   */\n  dup1\n    /* \"#utility.yul\":863:875   */\n  revert\n    /* \"#utility.yul\":630:907   */\ntag_27:\n    /* \"contracts/MarketValueManager.sol\":279:2723  contract MarketValueManager is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MarketValueManager.sol\":279:2723  contract MarketValueManager is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xcc9b2e0e\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xcc9b2e0e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdab9e087\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa703bd02\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xaa6df299\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xcb464c49\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x467e8814\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x467e8814\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x610abe35\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x787a08a6\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x1694505e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3fc8cef3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MarketValueManager.sol\":403:444  IUniswapV2Router02 public uniswapV2Router */\n    tag_3:\n      sload(0x04)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_21:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":204:236   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":186:237   */\n      dup2\n      mstore\n        /* \"#utility.yul\":174:176   */\n      0x20\n        /* \"#utility.yul\":159:177   */\n      add\n        /* \"contracts/MarketValueManager.sol\":403:444  IUniswapV2Router02 public uniswapV2Router */\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MarketValueManager.sol\":2624:2721  function withdraw() public onlyOwner{... */\n    tag_4:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/MarketValueManager.sol\":324:342  IERC20 public weth */\n    tag_5:\n      sload(0x01)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MarketValueManager.sol\":1893:1978  function setAimToken(address _token) public onlyOwner {... */\n    tag_6:\n      tag_25\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"contracts/MarketValueManager.sol\":1653:1771  function checkSAFEBalance() public view returns(uint256){... */\n    tag_7:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1004:1029   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":992:994   */\n      0x20\n        /* \"#utility.yul\":977:995   */\n      add\n        /* \"contracts/MarketValueManager.sol\":1653:1771  function checkSAFEBalance() public view returns(uint256){... */\n      tag_23\n        /* \"#utility.yul\":858:1035   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_25\n      tag_40\n      jump\t// in\n        /* \"contracts/MarketValueManager.sol\":374:397  uint256 public cooldown */\n    tag_9:\n      tag_35\n      sload(0x03)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_21)\n        /* \"contracts/MarketValueManager.sol\":1010:1132  function setcityNodeAddress(address _cityNodeAddress) public onlyOwner {... */\n    tag_11:\n      tag_25\n      tag_49\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"contracts/MarketValueManager.sol\":1138:1644  function buyAndBurn() public  {... */\n    tag_12:\n      tag_25\n      tag_52\n      jump\t// in\n        /* \"contracts/MarketValueManager.sol\":450:501  mapping(address => uint256) public isOrNotUseWallet */\n    tag_13:\n      tag_35\n      tag_54\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_54:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/MarketValueManager.sol\":1777:1886  function checkBNBBalance() public view returns(uint256) {... */\n    tag_14:\n      tag_35\n      tag_58\n      jump\t// in\n        /* \"contracts/MarketValueManager.sol\":507:537  address public cityNodeAddress */\n    tag_15:\n      sload(0x06)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_25\n      tag_64\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"contracts/MarketValueManager.sol\":348:368  address public token */\n    tag_17:\n      sload(0x02)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MarketValueManager.sol\":2624:2721  function withdraw() public onlyOwner{... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_70:\n        /* \"contracts/MarketValueManager.sol\":2670:2674  weth */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/MarketValueManager.sol\":2670:2683  weth.transfer */\n      0xa9059cbb\n        /* \"contracts/MarketValueManager.sol\":2684:2694  msg.sender */\n      caller\n        /* \"contracts/MarketValueManager.sol\":2696:2713  checkBNBBalance() */\n      tag_73\n        /* \"contracts/MarketValueManager.sol\":2696:2711  checkBNBBalance */\n      tag_58\n        /* \"contracts/MarketValueManager.sol\":2696:2713  checkBNBBalance() */\n      jump\t// in\n    tag_73:\n        /* \"contracts/MarketValueManager.sol\":2670:2714  weth.transfer(msg.sender, checkBNBBalance()) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1440:1472   */\n      swap1\n      swap3\n      and\n        /* \"contracts/MarketValueManager.sol\":2670:2714  weth.transfer(msg.sender, checkBNBBalance()) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1422:1473   */\n      mstore\n        /* \"#utility.yul\":1489:1507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1482:1516   */\n      mstore\n        /* \"#utility.yul\":1395:1413   */\n      0x44\n      add\n        /* \"contracts/MarketValueManager.sol\":2670:2714  weth.transfer(msg.sender, checkBNBBalance()) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      pop\n        /* \"contracts/MarketValueManager.sol\":2624:2721  function withdraw() public onlyOwner{... */\n      jump\t// out\n        /* \"contracts/MarketValueManager.sol\":1893:1978  function setAimToken(address _token) public onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_81:\n        /* \"contracts/MarketValueManager.sol\":1957:1962  token */\n      0x02\n        /* \"contracts/MarketValueManager.sol\":1957:1971  token = _token */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/MarketValueManager.sol\":1893:1978  function setAimToken(address _token) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MarketValueManager.sol\":1653:1771  function checkSAFEBalance() public view returns(uint256){... */\n    tag_36:\n        /* \"contracts/MarketValueManager.sol\":1733:1738  token */\n      sload(0x02)\n        /* \"contracts/MarketValueManager.sol\":1726:1764  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/MarketValueManager.sol\":1758:1762  this */\n      address\n        /* \"contracts/MarketValueManager.sol\":1726:1764  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":186:237   */\n      mstore\n        /* \"contracts/MarketValueManager.sol\":1701:1708  uint256 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MarketValueManager.sol\":1733:1738  token */\n      and\n      swap1\n        /* \"contracts/MarketValueManager.sol\":1726:1749  IERC20(token).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":159:177   */\n      0x24\n      add\n        /* \"contracts/MarketValueManager.sol\":1726:1764  IERC20(token).balanceOf(address(this)) */\n    tag_84:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"contracts/MarketValueManager.sol\":1719:1764  return IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/MarketValueManager.sol\":1653:1771  function checkSAFEBalance() public view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MarketValueManager.sol\":1010:1132  function setcityNodeAddress(address _cityNodeAddress) public onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_96:\n        /* \"contracts/MarketValueManager.sol\":1091:1106  cityNodeAddress */\n      0x06\n        /* \"contracts/MarketValueManager.sol\":1091:1125  cityNodeAddress = _cityNodeAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/MarketValueManager.sol\":1010:1132  function setcityNodeAddress(address _cityNodeAddress) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MarketValueManager.sol\":1138:1644  function buyAndBurn() public  {... */\n    tag_52:\n        /* \"contracts/MarketValueManager.sol\":1186:1190  weth */\n      sload(0x01)\n        /* \"contracts/MarketValueManager.sol\":1186:1215  weth.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/MarketValueManager.sol\":1209:1213  this */\n      address\n        /* \"contracts/MarketValueManager.sol\":1186:1215  weth.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":186:237   */\n      mstore\n        /* \"contracts/MarketValueManager.sol\":1218:1225  10 **18 */\n      0x0de0b6b3a7640000\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MarketValueManager.sol\":1186:1190  weth */\n      and\n      swap1\n        /* \"contracts/MarketValueManager.sol\":1186:1200  weth.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":159:177   */\n      0x24\n      add\n        /* \"contracts/MarketValueManager.sol\":1186:1215  weth.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_102:\n        /* \"contracts/MarketValueManager.sol\":1186:1225  weth.balanceOf(address(this)) >=10 **18 */\n      lt\n      iszero\n        /* \"contracts/MarketValueManager.sol\":1178:1248  require(weth.balanceOf(address(this)) >=10 **18 , \"BNB balance error\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2200:2202   */\n      0x20\n        /* \"contracts/MarketValueManager.sol\":1178:1248  require(weth.balanceOf(address(this)) >=10 **18 , \"BNB balance error\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2182:2203   */\n      mstore\n        /* \"#utility.yul\":2239:2241   */\n      0x11\n        /* \"#utility.yul\":2219:2237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2212:2242   */\n      mstore\n      shl(0x79, 0x212721103130b630b731b29032b93937b9)\n        /* \"#utility.yul\":2258:2276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2251:2298   */\n      mstore\n        /* \"#utility.yul\":2315:2333   */\n      0x64\n      add\n        /* \"contracts/MarketValueManager.sol\":1178:1248  require(weth.balanceOf(address(this)) >=10 **18 , \"BNB balance error\") */\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"contracts/MarketValueManager.sol\":1284:1292  cooldown */\n      sload(0x03)\n        /* \"contracts/MarketValueManager.sol\":1284:1298  cooldown + 300 */\n      tag_106\n      swap1\n        /* \"contracts/MarketValueManager.sol\":1295:1298  300 */\n      0x012c\n        /* \"contracts/MarketValueManager.sol\":1284:1298  cooldown + 300 */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"contracts/MarketValueManager.sol\":1266:1281  block.timestamp */\n      timestamp\n        /* \"contracts/MarketValueManager.sol\":1266:1298  block.timestamp > cooldown + 300 */\n      gt\n        /* \"contracts/MarketValueManager.sol\":1258:1319  require(block.timestamp > cooldown + 300 , \"is not cooldown\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2808:2810   */\n      0x20\n        /* \"contracts/MarketValueManager.sol\":1258:1319  require(block.timestamp > cooldown + 300 , \"is not cooldown\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2790:2811   */\n      mstore\n        /* \"#utility.yul\":2847:2849   */\n      0x0f\n        /* \"#utility.yul\":2827:2845   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2820:2850   */\n      mstore\n      shl(0x89, 0x34b9903737ba1031b7b7b63237bbb7)\n        /* \"#utility.yul\":2866:2884   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2859:2904   */\n      mstore\n        /* \"#utility.yul\":2921:2939   */\n      0x64\n      add\n        /* \"contracts/MarketValueManager.sol\":1258:1319  require(block.timestamp > cooldown + 300 , \"is not cooldown\") */\n      tag_104\n        /* \"#utility.yul\":2606:2945   */\n      jump\n        /* \"contracts/MarketValueManager.sol\":1258:1319  require(block.timestamp > cooldown + 300 , \"is not cooldown\") */\n    tag_108:\n        /* \"contracts/MarketValueManager.sol\":1344:1349  token */\n      sload(0x02)\n        /* \"contracts/MarketValueManager.sol\":1337:1372  IERC20(token).balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/MarketValueManager.sol\":1361:1371  msg.sender */\n      caller\n        /* \"contracts/MarketValueManager.sol\":1337:1372  IERC20(token).balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":186:237   */\n      mstore\n        /* \"contracts/MarketValueManager.sol\":1375:1386  1000*10**18 */\n      0x3635c9adc5dea00000\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MarketValueManager.sol\":1344:1349  token */\n      and\n      swap1\n        /* \"contracts/MarketValueManager.sol\":1337:1360  IERC20(token).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":159:177   */\n      0x24\n      add\n        /* \"contracts/MarketValueManager.sol\":1337:1372  IERC20(token).balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_114:\n        /* \"contracts/MarketValueManager.sol\":1337:1386  IERC20(token).balanceOf(msg.sender) > 1000*10**18 */\n      gt\n        /* \"contracts/MarketValueManager.sol\":1329:1410  require(IERC20(token).balanceOf(msg.sender) > 1000*10**18,\"u hold amount error\" ) */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3152:3154   */\n      0x20\n        /* \"contracts/MarketValueManager.sol\":1329:1410  require(IERC20(token).balanceOf(msg.sender) > 1000*10**18,\"u hold amount error\" ) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3134:3155   */\n      mstore\n        /* \"#utility.yul\":3191:3193   */\n      0x13\n        /* \"#utility.yul\":3171:3189   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3164:3194   */\n      mstore\n      shl(0x69, 0x3a903437b6321030b6b7bab73a1032b93937b9)\n        /* \"#utility.yul\":3210:3228   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3203:3252   */\n      mstore\n        /* \"#utility.yul\":3269:3287   */\n      0x64\n      add\n        /* \"contracts/MarketValueManager.sol\":1329:1410  require(IERC20(token).balanceOf(msg.sender) > 1000*10**18,\"u hold amount error\" ) */\n      tag_104\n        /* \"#utility.yul\":2950:3293   */\n      jump\n        /* \"contracts/MarketValueManager.sol\":1329:1410  require(IERC20(token).balanceOf(msg.sender) > 1000*10**18,\"u hold amount error\" ) */\n    tag_115:\n        /* \"contracts/MarketValueManager.sol\":1458:1468  msg.sender */\n      caller\n        /* \"contracts/MarketValueManager.sol\":1441:1469  isOrNotUseWallet[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MarketValueManager.sol\":1441:1457  isOrNotUseWallet */\n      0x05\n        /* \"contracts/MarketValueManager.sol\":1441:1469  isOrNotUseWallet[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/MarketValueManager.sol\":1472:1476  3600 */\n      0x0e10\n      swap1\n        /* \"contracts/MarketValueManager.sol\":1423:1469  block.timestamp - isOrNotUseWallet[msg.sender] */\n      tag_118\n      swap1\n        /* \"contracts/MarketValueManager.sol\":1423:1438  block.timestamp */\n      timestamp\n        /* \"contracts/MarketValueManager.sol\":1423:1469  block.timestamp - isOrNotUseWallet[msg.sender] */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"contracts/MarketValueManager.sol\":1423:1476  block.timestamp - isOrNotUseWallet[msg.sender] < 3600 */\n      lt\n        /* \"contracts/MarketValueManager.sol\":1420:1510  if(block.timestamp - isOrNotUseWallet[msg.sender] < 3600){... */\n      iszero\n      tag_120\n      jumpi\n        /* \"contracts/MarketValueManager.sol\":1491:1499  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/MarketValueManager.sol\":1420:1510  if(block.timestamp - isOrNotUseWallet[msg.sender] < 3600){... */\n    tag_120:\n        /* \"contracts/MarketValueManager.sol\":1519:1545  swapTokensForOther(10**18) */\n      tag_121\n        /* \"contracts/MarketValueManager.sol\":1538:1544  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/MarketValueManager.sol\":1519:1537  swapTokensForOther */\n      tag_122\n        /* \"contracts/MarketValueManager.sol\":1519:1545  swapTokensForOther(10**18) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/MarketValueManager.sol\":1572:1582  msg.sender */\n      caller\n        /* \"contracts/MarketValueManager.sol\":1555:1583  isOrNotUseWallet[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MarketValueManager.sol\":1555:1571  isOrNotUseWallet */\n      0x05\n        /* \"contracts/MarketValueManager.sol\":1555:1583  isOrNotUseWallet[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/MarketValueManager.sol\":1586:1601  block.timestamp */\n      timestamp\n        /* \"contracts/MarketValueManager.sol\":1555:1601  isOrNotUseWallet[msg.sender] = block.timestamp */\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"contracts/MarketValueManager.sol\":1611:1619  cooldown */\n      0x03\n        /* \"contracts/MarketValueManager.sol\":1611:1637  cooldown = block.timestamp */\n      sstore\n        /* \"contracts/MarketValueManager.sol\":1138:1644  function buyAndBurn() public  {... */\n      jump\t// out\n        /* \"contracts/MarketValueManager.sol\":1777:1886  function checkBNBBalance() public view returns(uint256) {... */\n    tag_58:\n        /* \"contracts/MarketValueManager.sol\":1850:1854  weth */\n      sload(0x01)\n        /* \"contracts/MarketValueManager.sol\":1850:1879  weth.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/MarketValueManager.sol\":1873:1877  this */\n      address\n        /* \"contracts/MarketValueManager.sol\":1850:1879  weth.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":186:237   */\n      mstore\n        /* \"contracts/MarketValueManager.sol\":1824:1831  uint256 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MarketValueManager.sol\":1850:1854  weth */\n      and\n      swap1\n        /* \"contracts/MarketValueManager.sol\":1850:1864  weth.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":159:177   */\n      0x24\n      add\n        /* \"contracts/MarketValueManager.sol\":1850:1879  weth.balanceOf(address(this)) */\n      tag_84\n        /* \"#utility.yul\":14:243   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3633:3635   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3615:3636   */\n      mstore\n        /* \"#utility.yul\":3672:3674   */\n      0x26\n        /* \"#utility.yul\":3652:3670   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3645:3675   */\n      mstore\n        /* \"#utility.yul\":3711:3745   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3691:3709   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3684:3746   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3762:3780   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3755:3791   */\n      mstore\n        /* \"#utility.yul\":3808:3827   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_104\n        /* \"#utility.yul\":3431:3833   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4022:4043   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4059:4077   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4052:4082   */\n      mstore\n        /* \"#utility.yul\":4118:4152   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4098:4116   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4091:4153   */\n      mstore\n        /* \"#utility.yul\":4170:4188   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_104\n        /* \"#utility.yul\":3838:4194   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/MarketValueManager.sol\":1990:2619  function swapTokensForOther(uint256 tokenAmount) private {... */\n    tag_122:\n        /* \"contracts/MarketValueManager.sol\":2134:2150  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/MarketValueManager.sol\":2148:2149  2 */\n      0x02\n        /* \"contracts/MarketValueManager.sol\":2134:2150  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n        /* \"contracts/MarketValueManager.sol\":2110:2131  address[] memory path */\n      0x00\n      swap3\n        /* \"contracts/MarketValueManager.sol\":2134:2150  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n        /* \"contracts/MarketValueManager.sol\":2170:2185  uniswapV2Router */\n      0x04\n      dup1\n      sload\n        /* \"contracts/MarketValueManager.sol\":2170:2192  uniswapV2Router.WETH() */\n      0x40\n      dup1\n      mload\n      shl(0xe3, 0x15ab88c9)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/MarketValueManager.sol\":2110:2150  address[] memory path = new address[](2) */\n      swap5\n      swap6\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MarketValueManager.sol\":2170:2185  uniswapV2Router */\n      swap1\n      swap2\n      and\n      swap4\n        /* \"contracts/MarketValueManager.sol\":2170:2190  uniswapV2Router.WETH */\n      0xad5c4648\n      swap4\n      pop\n        /* \"contracts/MarketValueManager.sol\":2170:2192  uniswapV2Router.WETH() */\n      dup2\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/MarketValueManager.sol\":2170:2185  uniswapV2Router */\n      dup7\n        /* \"contracts/MarketValueManager.sol\":2170:2192  uniswapV2Router.WETH() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_149\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"contracts/MarketValueManager.sol\":2160:2164  path */\n      dup2\n        /* \"contracts/MarketValueManager.sol\":2165:2166  0 */\n      0x00\n        /* \"contracts/MarketValueManager.sol\":2160:2167  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_153\n      jumpi\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MarketValueManager.sol\":2160:2192  path[0] = uniswapV2Router.WETH() */\n      swap3\n      dup4\n      and\n        /* \"contracts/MarketValueManager.sol\":2160:2167  path[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/MarketValueManager.sol\":2160:2192  path[0] = uniswapV2Router.WETH() */\n      mstore\n        /* \"contracts/MarketValueManager.sol\":2212:2217  token */\n      sload(0x02)\n        /* \"contracts/MarketValueManager.sol\":2202:2209  path[1] */\n      dup3\n      mload\n        /* \"contracts/MarketValueManager.sol\":2212:2217  token */\n      swap2\n      and\n      swap1\n        /* \"contracts/MarketValueManager.sol\":2202:2206  path */\n      dup3\n      swap1\n        /* \"contracts/MarketValueManager.sol\":2212:2217  token */\n      0x01\n      swap1\n        /* \"contracts/MarketValueManager.sol\":2202:2209  path[1] */\n      dup2\n      lt\n      tag_156\n      jumpi\n      tag_156\n      tag_154\n      jump\t// in\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MarketValueManager.sol\":2202:2217  path[1] = token */\n      swap3\n      dup4\n      and\n        /* \"contracts/MarketValueManager.sol\":2202:2209  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/MarketValueManager.sol\":2202:2217  path[1] = token */\n      mstore\n        /* \"contracts/MarketValueManager.sol\":2237:2252  uniswapV2Router */\n      0x04\n      dup1\n      sload\n        /* \"contracts/MarketValueManager.sol\":2237:2430  uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(... */\n      mload(0x40)\n      shl(0xe0, 0x5c11d795)\n      dup2\n      mstore\n        /* \"contracts/MarketValueManager.sol\":2237:2252  uniswapV2Router */\n      swap3\n      and\n      swap2\n        /* \"contracts/MarketValueManager.sol\":2237:2306  uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens */\n      0x5c11d795\n      swap2\n        /* \"contracts/MarketValueManager.sol\":2237:2430  uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(... */\n      tag_157\n      swap2\n        /* \"contracts/MarketValueManager.sol\":2320:2331  tokenAmount */\n      dup7\n      swap2\n        /* \"contracts/MarketValueManager.sol\":2237:2252  uniswapV2Router */\n      0x00\n      swap2\n        /* \"contracts/MarketValueManager.sol\":2360:2364  path */\n      dup8\n      swap2\n        /* \"contracts/MarketValueManager.sol\":2386:2390  this */\n      address\n      swap2\n        /* \"contracts/MarketValueManager.sol\":2405:2420  block.timestamp */\n      timestamp\n      swap2\n        /* \"contracts/MarketValueManager.sol\":2237:2430  uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(... */\n      add\n      tag_158\n      jump\t// in\n    tag_157:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n        /* \"contracts/MarketValueManager.sol\":2447:2452  token */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      swap2\n      pop\n        /* \"contracts/MarketValueManager.sol\":2440:2462  IERC20(token).transfer */\n      0xa9059cbb\n      swap1\n      pop\n        /* \"contracts/MarketValueManager.sol\":2471:2513  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/MarketValueManager.sol\":2535:2538  100 */\n      0x64\n        /* \"contracts/MarketValueManager.sol\":2516:2534  checkSAFEBalance() */\n      tag_162\n        /* \"contracts/MarketValueManager.sol\":2516:2532  checkSAFEBalance */\n      tag_36\n        /* \"contracts/MarketValueManager.sol\":2516:2534  checkSAFEBalance() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/MarketValueManager.sol\":2516:2538  checkSAFEBalance()/100 */\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"contracts/MarketValueManager.sol\":2516:2541  checkSAFEBalance()/100*95 */\n      tag_165\n      swap1\n        /* \"contracts/MarketValueManager.sol\":2539:2541  95 */\n      0x5f\n        /* \"contracts/MarketValueManager.sol\":2516:2541  checkSAFEBalance()/100*95 */\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"contracts/MarketValueManager.sol\":2440:2542  IERC20(token).transfer(address(0x000000000000000000000000000000000000dEaD), checkSAFEBalance()/100*95) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1440:1472   */\n      swap1\n      swap3\n      and\n        /* \"contracts/MarketValueManager.sol\":2440:2542  IERC20(token).transfer(address(0x000000000000000000000000000000000000dEaD), checkSAFEBalance()/100*95) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1422:1473   */\n      mstore\n        /* \"#utility.yul\":1489:1507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1482:1516   */\n      mstore\n        /* \"#utility.yul\":1395:1413   */\n      0x44\n      add\n        /* \"contracts/MarketValueManager.sol\":2440:2542  IERC20(token).transfer(address(0x000000000000000000000000000000000000dEaD), checkSAFEBalance()/100*95) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_170:\n      pop\n        /* \"contracts/MarketValueManager.sol\":2559:2564  token */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/MarketValueManager.sol\":2552:2574  IERC20(token).transfer */\n      0xa9059cbb\n        /* \"contracts/MarketValueManager.sol\":2575:2585  msg.sender */\n      caller\n        /* \"contracts/MarketValueManager.sol\":2606:2609  100 */\n      0x64\n        /* \"contracts/MarketValueManager.sol\":2587:2605  checkSAFEBalance() */\n      tag_171\n        /* \"contracts/MarketValueManager.sol\":2587:2603  checkSAFEBalance */\n      tag_36\n        /* \"contracts/MarketValueManager.sol\":2587:2605  checkSAFEBalance() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/MarketValueManager.sol\":2587:2609  checkSAFEBalance()/100 */\n      tag_172\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_172:\n        /* \"contracts/MarketValueManager.sol\":2587:2611  checkSAFEBalance()/100*5 */\n      tag_173\n      swap1\n        /* \"contracts/MarketValueManager.sol\":2610:2611  5 */\n      0x05\n        /* \"contracts/MarketValueManager.sol\":2587:2611  checkSAFEBalance()/100*5 */\n      tag_166\n      jump\t// in\n    tag_173:\n        /* \"contracts/MarketValueManager.sol\":2552:2612  IERC20(token).transfer(msg.sender, checkSAFEBalance()/100*5) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1440:1472   */\n      swap1\n      swap3\n      and\n        /* \"contracts/MarketValueManager.sol\":2552:2612  IERC20(token).transfer(msg.sender, checkSAFEBalance()/100*5) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1422:1473   */\n      mstore\n        /* \"#utility.yul\":1489:1507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1482:1516   */\n      mstore\n        /* \"#utility.yul\":1395:1413   */\n      0x44\n      add\n        /* \"contracts/MarketValueManager.sol\":2552:2612  IERC20(token).transfer(msg.sender, checkSAFEBalance()/100*5) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_177:\n      pop\n        /* \"contracts/MarketValueManager.sol\":2047:2619  {... */\n      pop\n        /* \"contracts/MarketValueManager.sol\":1990:2619  function swapTokensForOther(uint256 tokenAmount) private {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":470:601   */\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":545:576   */\n      dup2\n      and\n        /* \"#utility.yul\":535:577   */\n      dup2\n      eq\n        /* \"#utility.yul\":525:595   */\n      tag_78\n      jumpi\n        /* \"#utility.yul\":591:592   */\n      0x00\n        /* \"#utility.yul\":588:589   */\n      dup1\n        /* \"#utility.yul\":581:593   */\n      revert\n        /* \"#utility.yul\":606:853   */\n    tag_33:\n        /* \"#utility.yul\":665:671   */\n      0x00\n        /* \"#utility.yul\":718:720   */\n      0x20\n        /* \"#utility.yul\":706:715   */\n      dup3\n        /* \"#utility.yul\":697:704   */\n      dup5\n        /* \"#utility.yul\":693:716   */\n      sub\n        /* \"#utility.yul\":689:721   */\n      slt\n        /* \"#utility.yul\":686:738   */\n      iszero\n      tag_187\n      jumpi\n        /* \"#utility.yul\":734:735   */\n      0x00\n        /* \"#utility.yul\":731:732   */\n      dup1\n        /* \"#utility.yul\":724:736   */\n      revert\n        /* \"#utility.yul\":686:738   */\n    tag_187:\n        /* \"#utility.yul\":773:782   */\n      dup2\n        /* \"#utility.yul\":760:783   */\n      calldataload\n        /* \"#utility.yul\":792:823   */\n      tag_188\n        /* \"#utility.yul\":817:822   */\n      dup2\n        /* \"#utility.yul\":792:823   */\n      tag_179\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":842:847   */\n      swap4\n        /* \"#utility.yul\":606:853   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1527:1804   */\n    tag_79:\n        /* \"#utility.yul\":1594:1600   */\n      0x00\n        /* \"#utility.yul\":1647:1649   */\n      0x20\n        /* \"#utility.yul\":1635:1644   */\n      dup3\n        /* \"#utility.yul\":1626:1633   */\n      dup5\n        /* \"#utility.yul\":1622:1645   */\n      sub\n        /* \"#utility.yul\":1618:1650   */\n      slt\n        /* \"#utility.yul\":1615:1667   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":1663:1664   */\n      0x00\n        /* \"#utility.yul\":1660:1661   */\n      dup1\n        /* \"#utility.yul\":1653:1665   */\n      revert\n        /* \"#utility.yul\":1615:1667   */\n    tag_193:\n        /* \"#utility.yul\":1695:1704   */\n      dup2\n        /* \"#utility.yul\":1689:1705   */\n      mload\n        /* \"#utility.yul\":1748:1753   */\n      dup1\n        /* \"#utility.yul\":1741:1754   */\n      iszero\n        /* \"#utility.yul\":1734:1755   */\n      iszero\n        /* \"#utility.yul\":1727:1732   */\n      dup2\n        /* \"#utility.yul\":1724:1756   */\n      eq\n        /* \"#utility.yul\":1714:1774   */\n      tag_188\n      jumpi\n        /* \"#utility.yul\":1770:1771   */\n      0x00\n        /* \"#utility.yul\":1767:1768   */\n      dup1\n        /* \"#utility.yul\":1760:1772   */\n      revert\n        /* \"#utility.yul\":1809:1993   */\n    tag_88:\n        /* \"#utility.yul\":1879:1885   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1920:1929   */\n      dup3\n        /* \"#utility.yul\":1911:1918   */\n      dup5\n        /* \"#utility.yul\":1907:1930   */\n      sub\n        /* \"#utility.yul\":1903:1935   */\n      slt\n        /* \"#utility.yul\":1900:1952   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":1948:1949   */\n      0x00\n        /* \"#utility.yul\":1945:1946   */\n      dup1\n        /* \"#utility.yul\":1938:1950   */\n      revert\n        /* \"#utility.yul\":1900:1952   */\n    tag_196:\n      pop\n        /* \"#utility.yul\":1971:1987   */\n      mload\n      swap2\n        /* \"#utility.yul\":1809:1993   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2344:2471   */\n    tag_180:\n        /* \"#utility.yul\":2405:2415   */\n      0x4e487b71\n        /* \"#utility.yul\":2400:2403   */\n      0xe0\n        /* \"#utility.yul\":2396:2416   */\n      shl\n        /* \"#utility.yul\":2393:2394   */\n      0x00\n        /* \"#utility.yul\":2386:2417   */\n      mstore\n        /* \"#utility.yul\":2436:2440   */\n      0x11\n        /* \"#utility.yul\":2433:2434   */\n      0x04\n        /* \"#utility.yul\":2426:2441   */\n      mstore\n        /* \"#utility.yul\":2460:2464   */\n      0x24\n        /* \"#utility.yul\":2457:2458   */\n      0x00\n        /* \"#utility.yul\":2450:2465   */\n      revert\n        /* \"#utility.yul\":2476:2601   */\n    tag_107:\n        /* \"#utility.yul\":2541:2550   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2562:2572   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2559:2595   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":2575:2593   */\n      tag_201\n      tag_180\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2476:2601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3298:3426   */\n    tag_119:\n        /* \"#utility.yul\":3365:3374   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3386:3397   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3383:3420   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":3400:3418   */\n      tag_201\n      tag_180\n      jump\t// in\n        /* \"#utility.yul\":4331:4582   */\n    tag_151:\n        /* \"#utility.yul\":4401:4407   */\n      0x00\n        /* \"#utility.yul\":4454:4456   */\n      0x20\n        /* \"#utility.yul\":4442:4451   */\n      dup3\n        /* \"#utility.yul\":4433:4440   */\n      dup5\n        /* \"#utility.yul\":4429:4452   */\n      sub\n        /* \"#utility.yul\":4425:4457   */\n      slt\n        /* \"#utility.yul\":4422:4474   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":4470:4471   */\n      0x00\n        /* \"#utility.yul\":4467:4468   */\n      dup1\n        /* \"#utility.yul\":4460:4472   */\n      revert\n        /* \"#utility.yul\":4422:4474   */\n    tag_211:\n        /* \"#utility.yul\":4502:4511   */\n      dup2\n        /* \"#utility.yul\":4496:4512   */\n      mload\n        /* \"#utility.yul\":4521:4552   */\n      tag_188\n        /* \"#utility.yul\":4546:4551   */\n      dup2\n        /* \"#utility.yul\":4521:4552   */\n      tag_179\n      jump\t// in\n        /* \"#utility.yul\":4587:4714   */\n    tag_154:\n        /* \"#utility.yul\":4648:4658   */\n      0x4e487b71\n        /* \"#utility.yul\":4643:4646   */\n      0xe0\n        /* \"#utility.yul\":4639:4659   */\n      shl\n        /* \"#utility.yul\":4636:4637   */\n      0x00\n        /* \"#utility.yul\":4629:4660   */\n      mstore\n        /* \"#utility.yul\":4679:4683   */\n      0x32\n        /* \"#utility.yul\":4676:4677   */\n      0x04\n        /* \"#utility.yul\":4669:4684   */\n      mstore\n        /* \"#utility.yul\":4703:4707   */\n      0x24\n        /* \"#utility.yul\":4700:4701   */\n      0x00\n        /* \"#utility.yul\":4693:4708   */\n      revert\n        /* \"#utility.yul\":4719:5699   */\n    tag_158:\n        /* \"#utility.yul\":4981:4985   */\n      0x00\n        /* \"#utility.yul\":5029:5032   */\n      0xa0\n        /* \"#utility.yul\":5018:5027   */\n      dup3\n        /* \"#utility.yul\":5014:5033   */\n      add\n        /* \"#utility.yul\":5060:5066   */\n      dup8\n        /* \"#utility.yul\":5049:5058   */\n      dup4\n        /* \"#utility.yul\":5042:5067   */\n      mstore\n        /* \"#utility.yul\":5086:5088   */\n      0x20\n        /* \"#utility.yul\":5124:5130   */\n      dup8\n        /* \"#utility.yul\":5119:5121   */\n      dup2\n        /* \"#utility.yul\":5108:5117   */\n      dup6\n        /* \"#utility.yul\":5104:5122   */\n      add\n        /* \"#utility.yul\":5097:5131   */\n      mstore\n        /* \"#utility.yul\":5167:5170   */\n      0xa0\n        /* \"#utility.yul\":5162:5164   */\n      0x40\n        /* \"#utility.yul\":5151:5160   */\n      dup6\n        /* \"#utility.yul\":5147:5165   */\n      add\n        /* \"#utility.yul\":5140:5171   */\n      mstore\n        /* \"#utility.yul\":5191:5197   */\n      dup2\n        /* \"#utility.yul\":5226:5232   */\n      dup8\n        /* \"#utility.yul\":5220:5233   */\n      mload\n        /* \"#utility.yul\":5257:5263   */\n      dup1\n        /* \"#utility.yul\":5249:5255   */\n      dup5\n        /* \"#utility.yul\":5242:5264   */\n      mstore\n        /* \"#utility.yul\":5295:5298   */\n      0xc0\n        /* \"#utility.yul\":5284:5293   */\n      dup7\n        /* \"#utility.yul\":5280:5299   */\n      add\n        /* \"#utility.yul\":5273:5299   */\n      swap2\n      pop\n        /* \"#utility.yul\":5334:5336   */\n      dup3\n        /* \"#utility.yul\":5326:5332   */\n      dup10\n        /* \"#utility.yul\":5322:5337   */\n      add\n        /* \"#utility.yul\":5308:5337   */\n      swap4\n      pop\n        /* \"#utility.yul\":5355:5356   */\n      0x00\n        /* \"#utility.yul\":5365:5560   */\n    tag_215:\n        /* \"#utility.yul\":5379:5385   */\n      dup2\n        /* \"#utility.yul\":5376:5377   */\n      dup2\n        /* \"#utility.yul\":5373:5386   */\n      lt\n        /* \"#utility.yul\":5365:5560   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":5444:5457   */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5440:5479   */\n      and\n        /* \"#utility.yul\":5428:5480   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5535:5550   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":5500:5512   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":5476:5477   */\n      0x01\n        /* \"#utility.yul\":5394:5403   */\n      add\n        /* \"#utility.yul\":5365:5560   */\n      jump(tag_215)\n    tag_217:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5616:5648   */\n      swap7\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":5611:5613   */\n      0x60\n        /* \"#utility.yul\":5596:5614   */\n      dup6\n      add\n        /* \"#utility.yul\":5589:5649   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5680:5683   */\n      0x80\n        /* \"#utility.yul\":5665:5684   */\n      add\n        /* \"#utility.yul\":5658:5693   */\n      mstore\n        /* \"#utility.yul\":5577:5580   */\n      swap4\n        /* \"#utility.yul\":4719:5699   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5704:5921   */\n    tag_164:\n        /* \"#utility.yul\":5744:5745   */\n      0x00\n        /* \"#utility.yul\":5770:5771   */\n      dup3\n        /* \"#utility.yul\":5760:5892   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":5814:5824   */\n      0x4e487b71\n        /* \"#utility.yul\":5809:5812   */\n      0xe0\n        /* \"#utility.yul\":5805:5825   */\n      shl\n        /* \"#utility.yul\":5802:5803   */\n      0x00\n        /* \"#utility.yul\":5795:5826   */\n      mstore\n        /* \"#utility.yul\":5849:5853   */\n      0x12\n        /* \"#utility.yul\":5846:5847   */\n      0x04\n        /* \"#utility.yul\":5839:5854   */\n      mstore\n        /* \"#utility.yul\":5877:5881   */\n      0x24\n        /* \"#utility.yul\":5874:5875   */\n      0x00\n        /* \"#utility.yul\":5867:5882   */\n      revert\n        /* \"#utility.yul\":5760:5892   */\n    tag_219:\n      pop\n        /* \"#utility.yul\":5906:5915   */\n      div\n      swap1\n        /* \"#utility.yul\":5704:5921   */\n      jump\t// out\n        /* \"#utility.yul\":5926:6094   */\n    tag_166:\n        /* \"#utility.yul\":5999:6008   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6030:6039   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6047:6062   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6041:6063   */\n      dup5\n      eq\n        /* \"#utility.yul\":6027:6064   */\n      or\n        /* \"#utility.yul\":6017:6088   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":6068:6086   */\n      tag_201\n      tag_180\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220c5cb9b96a17ddd6e8c0d8a9cacb9a63f4c73998d811085bf14e45fcffed0c8c964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_284": {
									"entryPoint": null,
									"id": 284,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 467,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_10000000000000000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:909:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:8"
															},
															"nodeType": "YulIf",
															"src": "105:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:8"
															},
															"nodeType": "YulIf",
															"src": "204:70:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:8",
														"type": ""
													}
												],
												"src": "14:290:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "480:145:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "490:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "502:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "513:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "498:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "498:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "490:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "532:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "547:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "563:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "568:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "559:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "559:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "572:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "555:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "555:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "543:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "543:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "525:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "525:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "596:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "607:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "592:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "592:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "612:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "585:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "585:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "585:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_10000000000000000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "441:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "452:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "460:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "471:4:8",
														"type": ""
													}
												],
												"src": "309:316:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "708:199:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "754:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "763:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "766:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "756:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "756:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "756:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "729:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "725:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "725:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "750:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "721:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "721:32:8"
															},
															"nodeType": "YulIf",
															"src": "718:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "779:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "798:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "792:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "783:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "861:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "870:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "873:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "863:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "863:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "863:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "851:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "844:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "844:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "837:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "837:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "827:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "827:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "820:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "820:40:8"
															},
															"nodeType": "YulIf",
															"src": "817:60:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "886:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "896:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "886:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "674:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "685:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "697:6:8",
														"type": ""
													}
												],
												"src": "630:277:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_rational_10000000000000000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a336101d3565b600480546001600160a01b031916739ac64cc6e4415144c455bd8e4837fea55603e5c39081178255604080516315ab88c960e31b815290519192839263ad5c46489280830192602092918290030181865afa15801561007d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100a19190610223565b600180546001600160a01b0319166001600160a01b0392909216918217905560405163095ea7b360e01b8152739ac64cc6e4415144c455bd8e4837fea55603e5c360048201526e01ed09bead87c0378d8e6400000000602482015263095ea7b3906044016020604051808303816000875af1158015610124573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101489190610253565b5060015460405163095ea7b360e01b81523060048201526e01ed09bead87c0378d8e640000000060248201526001600160a01b039091169063095ea7b3906044016020604051808303816000875af11580156101a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cc9190610253565b5050610275565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561023557600080fd5b81516001600160a01b038116811461024c57600080fd5b9392505050565b60006020828403121561026557600080fd5b8151801515811461024c57600080fd5b610b3c806102846000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063cc9b2e0e11610066578063cc9b2e0e146101cd578063dab9e087146101d5578063f2fde38b146101e8578063fc0c546a146101fb57600080fd5b80638da5cb5b14610181578063a703bd0214610192578063aa6df299146101a5578063cb464c49146101ad57600080fd5b8063467e8814116100d3578063467e881414610147578063610abe351461015a578063715018a614610170578063787a08a61461017857600080fd5b80631694505e146100fa5780633ccfd60b1461012a5780633fc8cef314610134575b600080fd5b60045461010d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013261020e565b005b60015461010d906001600160a01b031681565b610132610155366004610988565b6102a2565b6101626102cc565b604051908152602001610121565b61013261033f565b61016260035481565b6000546001600160a01b031661010d565b6101326101a0366004610988565b610353565b61013261037d565b6101626101bb366004610988565b60056020526000908152604090205481565b610162610592565b60065461010d906001600160a01b031681565b6101326101f6366004610988565b6105c3565b60025461010d906001600160a01b031681565b610216610639565b6001546001600160a01b031663a9059cbb33610230610592565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561027b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029f91906109ac565b50565b6102aa610639565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024015b602060405180830381865afa158015610316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033a91906109ce565b905090565b610347610639565b6103516000610693565b565b61035b610639565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6001546040516370a0823160e01b8152306004820152670de0b6b3a7640000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f191906109ce565b10156104385760405162461bcd60e51b8152602060048201526011602482015270212721103130b630b731b29032b93937b960791b60448201526064015b60405180910390fd5b6003546104479061012c6109fd565b42116104875760405162461bcd60e51b815260206004820152600f60248201526e34b9903737ba1031b7b7b63237bbb760891b604482015260640161042f565b6002546040516370a0823160e01b8152336004820152683635c9adc5dea00000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc91906109ce565b1161053f5760405162461bcd60e51b81526020600482015260136024820152723a903437b6321030b6b7bab73a1032b93937b960691b604482015260640161042f565b33600090815260056020526040902054610e109061055d9042610a16565b101561056857600080fd5b610579670de0b6b3a76400006106e3565b3360009081526005602052604090204290819055600355565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024016102f9565b6105cb610639565b6001600160a01b0381166106305760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042f565b61029f81610693565b6000546001600160a01b031633146103515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516002808252606082018352600092602083019080368337505060048054604080516315ab88c960e31b815290519495506001600160a01b039091169363ad5c46489350818301926020928290030181865afa15801561074a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076e9190610a29565b8160008151811061078157610781610a46565b6001600160a01b0392831660209182029290920101526002548251911690829060019081106107b2576107b2610a46565b6001600160a01b03928316602091820292909201015260048054604051635c11d79560e01b8152921691635c11d795916107f791869160009187913091429101610a5c565b600060405180830381600087803b15801561081157600080fd5b505af1158015610825573d6000803e3d6000fd5b50506002546001600160a01b0316915063a9059cbb905061dead60646108496102cc565b6108539190610acd565b61085e90605f610aef565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd91906109ac565b506002546001600160a01b031663a9059cbb3360646108ea6102cc565b6108f49190610acd565b6108ff906005610aef565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561094a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096e91906109ac565b505050565b6001600160a01b038116811461029f57600080fd5b60006020828403121561099a57600080fd5b81356109a581610973565b9392505050565b6000602082840312156109be57600080fd5b815180151581146109a557600080fd5b6000602082840312156109e057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610a1057610a106109e7565b92915050565b81810381811115610a1057610a106109e7565b600060208284031215610a3b57600080fd5b81516109a581610973565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015610aac5784516001600160a01b031683529383019391830191600101610a87565b50506001600160a01b03969096166060850152505050608001529392505050565b600082610aea57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610a1057610a106109e756fea2646970667358221220c5cb9b96a17ddd6e8c0d8a9cacb9a63f4c73998d811085bf14e45fcffed0c8c964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x9AC64CC6E4415144C455BD8E4837FEA55603E5C3 SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH4 0xAD5C4648 SWAP3 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x223 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x9AC64CC6E4415144C455BD8E4837FEA55603E5C3 PUSH1 0x4 DUP3 ADD MSTORE PUSH15 0x1ED09BEAD87C0378D8E6400000000 PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x124 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x253 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH15 0x1ED09BEAD87C0378D8E6400000000 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x253 JUMP JUMPDEST POP POP PUSH2 0x275 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB3C DUP1 PUSH2 0x284 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCC9B2E0E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCC9B2E0E EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xDAB9E087 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xA703BD02 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0xAA6DF299 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xCB464C49 EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x467E8814 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x467E8814 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x610ABE35 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1694505E EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x20E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x988 JUMP JUMPDEST PUSH2 0x2A2 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x33F JUMP JUMPDEST PUSH2 0x162 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10D JUMP JUMPDEST PUSH2 0x132 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x988 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x37D JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x988 JUMP JUMPDEST PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x216 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH2 0x230 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x639 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x316 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x9CE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x347 PUSH2 0x639 JUMP JUMPDEST PUSH2 0x351 PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x35B PUSH2 0x639 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x9CE JUMP JUMPDEST LT ISZERO PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x212721103130B630B731B29032B93937B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x447 SWAP1 PUSH2 0x12C PUSH2 0x9FD JUMP JUMPDEST TIMESTAMP GT PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x34B9903737BA1031B7B7B63237BBB7 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH9 0x3635C9ADC5DEA00000 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0x9CE JUMP JUMPDEST GT PUSH2 0x53F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x3A903437B6321030B6B7BAB73A1032B93937B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE10 SWAP1 PUSH2 0x55D SWAP1 TIMESTAMP PUSH2 0xA16 JUMP JUMPDEST LT ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x579 PUSH8 0xDE0B6B3A7640000 PUSH2 0x6E3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x5CB PUSH2 0x639 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x630 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH2 0x29F DUP2 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP5 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 PUSH4 0xAD5C4648 SWAP4 POP DUP2 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x76E SWAP2 SWAP1 PUSH2 0xA29 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x781 JUMPI PUSH2 0x781 PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x2 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x7B2 JUMPI PUSH2 0x7B2 PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C11D795 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 AND SWAP2 PUSH4 0x5C11D795 SWAP2 PUSH2 0x7F7 SWAP2 DUP7 SWAP2 PUSH1 0x0 SWAP2 DUP8 SWAP2 ADDRESS SWAP2 TIMESTAMP SWAP2 ADD PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x825 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0xA9059CBB SWAP1 POP PUSH2 0xDEAD PUSH1 0x64 PUSH2 0x849 PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x853 SWAP2 SWAP1 PUSH2 0xACD JUMP JUMPDEST PUSH2 0x85E SWAP1 PUSH1 0x5F PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CD SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x64 PUSH2 0x8EA PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0xACD JUMP JUMPDEST PUSH2 0x8FF SWAP1 PUSH1 0x5 PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x94A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x96E SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9A5 DUP2 PUSH2 0x973 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0x9E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9A5 DUP2 PUSH2 0x973 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAAC JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xA87 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xAEA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0x9E7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xCB SWAP12 SWAP7 LOG1 PUSH30 0xDD6E8C0D8A9CACB9A63F4C73998D811085BF14E45FCFFED0C8C964736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "279:2444:3:-:0;;;543:350;;;;;;;;;-1:-1:-1;936:32:0;719:10:2;936:18:0;:32::i;:::-;677:15:3;:34;;-1:-1:-1;;;;;;677:34:3;624:42;677:34;;;;;735:22;;;-1:-1:-1;;;735:22:3;;;;624:42;;;;735:20;;:22;;;;;;;;;;;;624:42;735:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;721:4;:37;;-1:-1:-1;;;;;;721:37:3;-1:-1:-1;;;;;721:37:3;;;;;;;;;768:73;;-1:-1:-1;;;768:73:3;;789:42;768:73;;;525:51:8;834:6:3;592:18:8;;;585:34;768:12:3;;498:18:8;;768:73:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;851:4:3;;:35;;-1:-1:-1;;;851:35:3;;872:4;851:35;;;525:51:8;879:6:3;592:18:8;;;585:34;-1:-1:-1;;;;;851:4:3;;;;:12;;498:18:8;;851:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;557:336;279:2444;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:8:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:8;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:8:o;630:277::-;697:6;750:2;738:9;729:7;725:23;721:32;718:52;;;766:1;763;756:12;718:52;798:9;792:16;851:5;844:13;837:21;830:5;827:32;817:60;;873:1;870;863:12;630:277;279:2444:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 1593,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1683,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyAndBurn_389": {
									"entryPoint": 893,
									"id": 389,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkBNBBalance_419": {
									"entryPoint": 1426,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@checkSAFEBalance_405": {
									"entryPoint": 716,
									"id": 405,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@cityNodeAddress_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cooldown_228": {
									"entryPoint": null,
									"id": 228,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isOrNotUseWallet_235": {
									"entryPoint": null,
									"id": 235,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 831,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAimToken_431": {
									"entryPoint": 674,
									"id": 431,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setcityNodeAddress_310": {
									"entryPoint": 851,
									"id": 310,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@swapTokensForOther_506": {
									"entryPoint": 1763,
									"id": 506,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@token_226": {
									"entryPoint": null,
									"id": 226,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1475,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@uniswapV2Router_231": {
									"entryPoint": null,
									"id": 231,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@weth_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_521": {
									"entryPoint": 526,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$190__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Router02_$928__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_31a5114289273986113a77121521ba7bed56a7e8c03e2f8b48fe9efdb1582af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da0c5ccfe5203a05712e8f9773441e2b3917df15c5e647d94a1fc0dccfcb6bf2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fdfe36e237533d26ee793ce8a23f2c362875f9e11f67d65c0bc1b66017ab85f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2652,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2535,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2630,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 2419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6096:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "141:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "151:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "163:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "174:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "159:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "159:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "151:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "193:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "208:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "224:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "229:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "220:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "220:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "233:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "216:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "216:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "204:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "204:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "186:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "186:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "186:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$928__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "110:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "121:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "132:4:8",
														"type": ""
													}
												],
												"src": "14:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "373:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "385:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "396:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "381:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "381:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "373:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "415:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "430:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "446:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "451:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "442:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "442:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "455:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "438:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "438:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "426:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "408:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "408:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$190__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "332:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "343:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "354:4:8",
														"type": ""
													}
												],
												"src": "248:217:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "515:86:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "579:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "588:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "591:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "581:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "581:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "581:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "538:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "549:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "564:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "569:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "560:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "560:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "573:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "556:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "556:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "535:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "535:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "528:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "528:50:8"
															},
															"nodeType": "YulIf",
															"src": "525:70:8"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "504:5:8",
														"type": ""
													}
												],
												"src": "470:131:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "676:177:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "722:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "731:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "734:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "724:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "724:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "724:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "697:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "706:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "693:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "693:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "718:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "689:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "689:32:8"
															},
															"nodeType": "YulIf",
															"src": "686:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "747:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "773:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "760:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "760:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "751:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "817:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "792:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "792:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "832:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "842:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "832:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "642:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "653:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "665:6:8",
														"type": ""
													}
												],
												"src": "606:247:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "959:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "969:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "992:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "977:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "977:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "969:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1011:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1022:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1004:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "928:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "939:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "950:4:8",
														"type": ""
													}
												],
												"src": "858:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1141:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1151:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1163:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1174:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1151:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1193:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1208:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1224:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1229:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1220:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1220:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1233:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1216:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1216:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1204:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1204:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1186:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1186:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1110:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1121:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1132:4:8",
														"type": ""
													}
												],
												"src": "1040:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1377:145:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1387:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1399:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1410:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1395:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1387:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1429:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1444:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1460:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1465:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1456:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1456:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1469:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1452:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1452:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1440:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1440:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1422:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1422:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1493:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1504:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1489:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1489:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1509:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1482:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1482:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1482:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1338:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1349:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1357:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1368:4:8",
														"type": ""
													}
												],
												"src": "1248:274:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1605:199:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1651:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1660:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1663:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1653:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1653:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1653:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1626:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1635:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1622:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1622:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1647:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1618:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1618:32:8"
															},
															"nodeType": "YulIf",
															"src": "1615:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1676:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1695:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1689:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1689:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1680:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1758:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1767:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1770:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1760:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1760:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1760:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1727:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1748:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1741:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1741:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1734:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1734:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1724:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1724:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1717:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:40:8"
															},
															"nodeType": "YulIf",
															"src": "1714:60:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1783:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1793:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1783:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1571:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1582:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1594:6:8",
														"type": ""
													}
												],
												"src": "1527:277:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1890:103:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1936:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1945:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1948:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1938:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1938:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1911:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1920:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1907:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1907:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1903:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1903:32:8"
															},
															"nodeType": "YulIf",
															"src": "1900:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1977:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1971:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1971:16:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1961:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1856:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1867:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1879:6:8",
														"type": ""
													}
												],
												"src": "1809:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2172:167:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2189:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2200:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2182:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2182:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2182:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2223:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2234:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2219:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2219:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2239:2:8",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2212:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2212:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2212:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2262:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2273:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2258:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2258:18:8"
																	},
																	{
																		"hexValue": "424e422062616c616e6365206572726f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2278:19:8",
																		"type": "",
																		"value": "BNB balance error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2251:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2251:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2251:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2307:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2319:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2330:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2307:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_31a5114289273986113a77121521ba7bed56a7e8c03e2f8b48fe9efdb1582af1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2149:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2163:4:8",
														"type": ""
													}
												],
												"src": "1998:341:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2376:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2393:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2400:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2405:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2396:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2396:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2386:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2386:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2386:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2433:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2436:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2426:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2426:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2426:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2457:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2460:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2450:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2344:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2524:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2534:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2545:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2548:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2541:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2541:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2534:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2573:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2575:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2575:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2575:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2565:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2568:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:10:8"
															},
															"nodeType": "YulIf",
															"src": "2559:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2507:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2510:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2516:3:8",
														"type": ""
													}
												],
												"src": "2476:125:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2780:165:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2797:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2808:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2790:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2790:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2790:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2831:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2842:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2827:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2827:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2847:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2820:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2820:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2820:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2870:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2881:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2866:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2866:18:8"
																	},
																	{
																		"hexValue": "6973206e6f7420636f6f6c646f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2886:17:8",
																		"type": "",
																		"value": "is not cooldown"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2859:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2859:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2859:45:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2913:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2925:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2936:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2921:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2921:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2913:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da0c5ccfe5203a05712e8f9773441e2b3917df15c5e647d94a1fc0dccfcb6bf2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2757:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2771:4:8",
														"type": ""
													}
												],
												"src": "2606:339:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3124:169:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3141:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3152:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3134:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3134:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3134:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3175:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3186:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3171:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3171:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3191:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3164:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3164:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3164:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3214:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3225:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3210:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3210:18:8"
																	},
																	{
																		"hexValue": "7520686f6c6420616d6f756e74206572726f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3230:21:8",
																		"type": "",
																		"value": "u hold amount error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3203:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3203:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3203:49:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3261:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3273:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3284:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3269:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3269:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3261:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fdfe36e237533d26ee793ce8a23f2c362875f9e11f67d65c0bc1b66017ab85f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3101:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3115:4:8",
														"type": ""
													}
												],
												"src": "2950:343:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3347:79:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3357:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3369:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3372:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3365:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3365:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3357:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3398:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3400:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3400:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3400:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "3389:4:8"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3395:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3386:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3386:11:8"
															},
															"nodeType": "YulIf",
															"src": "3383:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3329:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3332:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3338:4:8",
														"type": ""
													}
												],
												"src": "3298:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3605:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3622:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3633:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3615:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3615:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3615:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3656:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3667:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3652:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3652:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3672:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3645:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3645:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3645:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3695:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3706:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3691:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3691:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3711:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3684:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3684:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3684:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3766:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3777:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3762:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:18:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3782:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3755:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3755:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3800:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3812:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3823:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3808:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3808:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3800:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3582:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3596:4:8",
														"type": ""
													}
												],
												"src": "3431:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4012:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4022:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4022:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4022:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4063:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4074:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4059:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4059:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4079:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4052:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4052:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4052:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4102:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4113:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4098:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4098:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4118:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4091:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4091:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4162:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4174:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4185:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4170:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4170:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4162:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3989:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4003:4:8",
														"type": ""
													}
												],
												"src": "3838:356:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4231:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4248:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4255:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4260:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4251:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4251:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4241:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4288:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4291:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4281:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4281:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4281:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4312:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4315:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4305:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4305:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4305:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4199:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4412:170:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4458:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4467:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4470:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4460:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4460:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4460:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4433:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4442:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4429:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4429:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4454:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4425:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4425:32:8"
															},
															"nodeType": "YulIf",
															"src": "4422:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4483:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4502:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4496:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4496:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4487:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4546:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4521:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4521:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4521:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4561:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4571:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4561:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4378:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4389:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4401:6:8",
														"type": ""
													}
												],
												"src": "4331:251:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4619:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4636:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4643:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4648:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4639:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4639:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4629:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4629:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4629:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4676:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4679:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4669:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4669:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4700:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4703:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4693:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4693:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4693:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4587:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4990:709:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5000:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5018:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5029:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5014:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5014:19:8"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "5004:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5049:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5060:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5042:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5042:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5042:25:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5076:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5086:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5080:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5108:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5119:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5104:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5104:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5124:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5097:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5097:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5097:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5151:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5162:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5147:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5147:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5167:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5140:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5140:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5140:31:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5180:17:8",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "5191:6:8"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "5184:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5206:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5226:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5220:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5220:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5210:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "5249:6:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5257:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5242:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5242:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5242:22:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5273:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5284:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5295:3:8",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5280:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5280:19:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5273:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5308:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5326:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5334:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5322:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:15:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5312:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5346:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5355:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5350:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5414:146:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5435:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5450:6:8"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "5444:5:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5444:13:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5467:3:8",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5472:1:8",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "5463:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5463:11:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5476:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "5459:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5459:19:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5440:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5440:39:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5428:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5428:52:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5428:52:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5493:19:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5504:3:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5509:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5500:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5500:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5493:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5525:25:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5539:6:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5547:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5535:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5535:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5525:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5376:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5379:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5373:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5373:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5387:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5389:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5398:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5401:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5394:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5394:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5389:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5369:3:8",
																"statements": []
															},
															"src": "5365:195:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5569:11:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5577:3:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5569:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5600:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5611:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5596:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5596:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "5620:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5636:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5641:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5632:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5632:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5645:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5628:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5628:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5616:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5616:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5589:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5589:60:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5589:60:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5669:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5680:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5665:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5665:19:8"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5686:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5658:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5658:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5658:35:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4927:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4938:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4946:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4954:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4962:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4970:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4981:4:8",
														"type": ""
													}
												],
												"src": "4719:980:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5750:171:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5781:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5802:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5809:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5814:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5805:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5805:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5795:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5795:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5795:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5846:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5849:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5839:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5839:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5839:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5874:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5877:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5867:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5867:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5867:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5770:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5763:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5763:9:8"
															},
															"nodeType": "YulIf",
															"src": "5760:132:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5901:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5910:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5913:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5906:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5906:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5901:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5735:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5738:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5744:1:8",
														"type": ""
													}
												],
												"src": "5704:217:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5978:116:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5988:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6003:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6006:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5999:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5999:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5988:7:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6066:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6068:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6068:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6068:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6037:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6030:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6030:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "6044:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "6051:7:8"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "6060:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "6047:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6047:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "6041:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6041:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6027:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6027:37:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6020:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6020:45:8"
															},
															"nodeType": "YulIf",
															"src": "6017:71:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5957:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5960:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5966:7:8",
														"type": ""
													}
												],
												"src": "5926:168:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$928__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$190__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_31a5114289273986113a77121521ba7bed56a7e8c03e2f8b48fe9efdb1582af1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"BNB balance error\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_da0c5ccfe5203a05712e8f9773441e2b3917df15c5e647d94a1fc0dccfcb6bf2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"is not cooldown\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fdfe36e237533d26ee793ce8a23f2c362875f9e11f67d65c0bc1b66017ab85f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"u hold amount error\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), value1)\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value2, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063cc9b2e0e11610066578063cc9b2e0e146101cd578063dab9e087146101d5578063f2fde38b146101e8578063fc0c546a146101fb57600080fd5b80638da5cb5b14610181578063a703bd0214610192578063aa6df299146101a5578063cb464c49146101ad57600080fd5b8063467e8814116100d3578063467e881414610147578063610abe351461015a578063715018a614610170578063787a08a61461017857600080fd5b80631694505e146100fa5780633ccfd60b1461012a5780633fc8cef314610134575b600080fd5b60045461010d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013261020e565b005b60015461010d906001600160a01b031681565b610132610155366004610988565b6102a2565b6101626102cc565b604051908152602001610121565b61013261033f565b61016260035481565b6000546001600160a01b031661010d565b6101326101a0366004610988565b610353565b61013261037d565b6101626101bb366004610988565b60056020526000908152604090205481565b610162610592565b60065461010d906001600160a01b031681565b6101326101f6366004610988565b6105c3565b60025461010d906001600160a01b031681565b610216610639565b6001546001600160a01b031663a9059cbb33610230610592565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561027b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029f91906109ac565b50565b6102aa610639565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024015b602060405180830381865afa158015610316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033a91906109ce565b905090565b610347610639565b6103516000610693565b565b61035b610639565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6001546040516370a0823160e01b8152306004820152670de0b6b3a7640000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f191906109ce565b10156104385760405162461bcd60e51b8152602060048201526011602482015270212721103130b630b731b29032b93937b960791b60448201526064015b60405180910390fd5b6003546104479061012c6109fd565b42116104875760405162461bcd60e51b815260206004820152600f60248201526e34b9903737ba1031b7b7b63237bbb760891b604482015260640161042f565b6002546040516370a0823160e01b8152336004820152683635c9adc5dea00000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc91906109ce565b1161053f5760405162461bcd60e51b81526020600482015260136024820152723a903437b6321030b6b7bab73a1032b93937b960691b604482015260640161042f565b33600090815260056020526040902054610e109061055d9042610a16565b101561056857600080fd5b610579670de0b6b3a76400006106e3565b3360009081526005602052604090204290819055600355565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024016102f9565b6105cb610639565b6001600160a01b0381166106305760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042f565b61029f81610693565b6000546001600160a01b031633146103515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516002808252606082018352600092602083019080368337505060048054604080516315ab88c960e31b815290519495506001600160a01b039091169363ad5c46489350818301926020928290030181865afa15801561074a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076e9190610a29565b8160008151811061078157610781610a46565b6001600160a01b0392831660209182029290920101526002548251911690829060019081106107b2576107b2610a46565b6001600160a01b03928316602091820292909201015260048054604051635c11d79560e01b8152921691635c11d795916107f791869160009187913091429101610a5c565b600060405180830381600087803b15801561081157600080fd5b505af1158015610825573d6000803e3d6000fd5b50506002546001600160a01b0316915063a9059cbb905061dead60646108496102cc565b6108539190610acd565b61085e90605f610aef565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd91906109ac565b506002546001600160a01b031663a9059cbb3360646108ea6102cc565b6108f49190610acd565b6108ff906005610aef565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561094a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096e91906109ac565b505050565b6001600160a01b038116811461029f57600080fd5b60006020828403121561099a57600080fd5b81356109a581610973565b9392505050565b6000602082840312156109be57600080fd5b815180151581146109a557600080fd5b6000602082840312156109e057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610a1057610a106109e7565b92915050565b81810381811115610a1057610a106109e7565b600060208284031215610a3b57600080fd5b81516109a581610973565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015610aac5784516001600160a01b031683529383019391830191600101610a87565b50506001600160a01b03969096166060850152505050608001529392505050565b600082610aea57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610a1057610a106109e756fea2646970667358221220c5cb9b96a17ddd6e8c0d8a9cacb9a63f4c73998d811085bf14e45fcffed0c8c964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCC9B2E0E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCC9B2E0E EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xDAB9E087 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xA703BD02 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0xAA6DF299 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xCB464C49 EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x467E8814 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x467E8814 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x610ABE35 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1694505E EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x20E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x988 JUMP JUMPDEST PUSH2 0x2A2 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x33F JUMP JUMPDEST PUSH2 0x162 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10D JUMP JUMPDEST PUSH2 0x132 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x988 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x37D JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x988 JUMP JUMPDEST PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x216 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH2 0x230 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x639 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x316 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x9CE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x347 PUSH2 0x639 JUMP JUMPDEST PUSH2 0x351 PUSH1 0x0 PUSH2 0x693 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x35B PUSH2 0x639 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x9CE JUMP JUMPDEST LT ISZERO PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x212721103130B630B731B29032B93937B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x447 SWAP1 PUSH2 0x12C PUSH2 0x9FD JUMP JUMPDEST TIMESTAMP GT PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x34B9903737BA1031B7B7B63237BBB7 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH9 0x3635C9ADC5DEA00000 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0x9CE JUMP JUMPDEST GT PUSH2 0x53F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x3A903437B6321030B6B7BAB73A1032B93937B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE10 SWAP1 PUSH2 0x55D SWAP1 TIMESTAMP PUSH2 0xA16 JUMP JUMPDEST LT ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x579 PUSH8 0xDE0B6B3A7640000 PUSH2 0x6E3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x5CB PUSH2 0x639 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x630 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH2 0x29F DUP2 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP5 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 PUSH4 0xAD5C4648 SWAP4 POP DUP2 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x76E SWAP2 SWAP1 PUSH2 0xA29 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x781 JUMPI PUSH2 0x781 PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x2 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x7B2 JUMPI PUSH2 0x7B2 PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C11D795 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 AND SWAP2 PUSH4 0x5C11D795 SWAP2 PUSH2 0x7F7 SWAP2 DUP7 SWAP2 PUSH1 0x0 SWAP2 DUP8 SWAP2 ADDRESS SWAP2 TIMESTAMP SWAP2 ADD PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x825 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0xA9059CBB SWAP1 POP PUSH2 0xDEAD PUSH1 0x64 PUSH2 0x849 PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x853 SWAP2 SWAP1 PUSH2 0xACD JUMP JUMPDEST PUSH2 0x85E SWAP1 PUSH1 0x5F PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CD SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x64 PUSH2 0x8EA PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0xACD JUMP JUMPDEST PUSH2 0x8FF SWAP1 PUSH1 0x5 PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x94A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x96E SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9A5 DUP2 PUSH2 0x973 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0x9E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9A5 DUP2 PUSH2 0x973 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAAC JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xA87 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xAEA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0x9E7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xCB SWAP12 SWAP7 LOG1 PUSH30 0xDD6E8C0D8A9CACB9A63F4C73998D811085BF14E45FCFFED0C8C964736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "279:2444:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;403:41;;;;;-1:-1:-1;;;;;403:41:3;;;;;;-1:-1:-1;;;;;204:32:8;;;186:51;;174:2;159:18;403:41:3;;;;;;;;2624:97;;;:::i;:::-;;324:18;;;;;-1:-1:-1;;;;;324:18:3;;;1893:85;;;;;;:::i;:::-;;:::i;1653:118::-;;;:::i;:::-;;;1004:25:8;;;992:2;977:18;1653:118:3;858:177:8;1831:101:0;;;:::i;374:23:3:-;;;;;;1201:85:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;1010:122:3;;;;;;:::i;:::-;;:::i;1138:506::-;;;:::i;450:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1777:109;;;:::i;507:30::-;;;;;-1:-1:-1;;;;;507:30:3;;;2081:198:0;;;;;;:::i;:::-;;:::i;348:20:3:-;;;;;-1:-1:-1;;;;;348:20:3;;;2624:97;1094:13:0;:11;:13::i;:::-;2670:4:3::1;::::0;-1:-1:-1;;;;;2670:4:3::1;:13;2684:10;2696:17;:15;:17::i;:::-;2670:44;::::0;-1:-1:-1;;;;;;2670:44:3::1;::::0;;;;;;-1:-1:-1;;;;;1440:32:8;;;2670:44:3::1;::::0;::::1;1422:51:8::0;1489:18;;;1482:34;1395:18;;2670:44:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2624:97::o:0;1893:85::-;1094:13:0;:11;:13::i;:::-;1957:5:3::1;:14:::0;;-1:-1:-1;;;;;;1957:14:3::1;-1:-1:-1::0;;;;;1957:14:3;;;::::1;::::0;;;::::1;::::0;;1893:85::o;1653:118::-;1733:5;;1726:38;;-1:-1:-1;;;1726:38:3;;1758:4;1726:38;;;186:51:8;1701:7:3;;-1:-1:-1;;;;;1733:5:3;;1726:23;;159:18:8;;1726:38:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1719:45;;1653:118;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1010:122:3:-;1094:13:0;:11;:13::i;:::-;1091:15:3::1;:34:::0;;-1:-1:-1;;;;;;1091:34:3::1;-1:-1:-1::0;;;;;1091:34:3;;;::::1;::::0;;;::::1;::::0;;1010:122::o;1138:506::-;1186:4;;:29;;-1:-1:-1;;;1186:29:3;;1209:4;1186:29;;;186:51:8;1218:7:3;;-1:-1:-1;;;;;1186:4:3;;:14;;159:18:8;;1186:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;1178:70;;;;-1:-1:-1;;;1178:70:3;;2200:2:8;1178:70:3;;;2182:21:8;2239:2;2219:18;;;2212:30;-1:-1:-1;;;2258:18:8;;;2251:47;2315:18;;1178:70:3;;;;;;;;;1284:8;;:14;;1295:3;1284:14;:::i;:::-;1266:15;:32;1258:61;;;;-1:-1:-1;;;1258:61:3;;2808:2:8;1258:61:3;;;2790:21:8;2847:2;2827:18;;;2820:30;-1:-1:-1;;;2866:18:8;;;2859:45;2921:18;;1258:61:3;2606:339:8;1258:61:3;1344:5;;1337:35;;-1:-1:-1;;;1337:35:3;;1361:10;1337:35;;;186:51:8;1375:11:3;;-1:-1:-1;;;;;1344:5:3;;1337:23;;159:18:8;;1337:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;1329:81;;;;-1:-1:-1;;;1329:81:3;;3152:2:8;1329:81:3;;;3134:21:8;3191:2;3171:18;;;3164:30;-1:-1:-1;;;3210:18:8;;;3203:49;3269:18;;1329:81:3;2950:343:8;1329:81:3;1458:10;1441:28;;;;:16;:28;;;;;;1472:4;;1423:46;;:15;:46;:::i;:::-;:53;1420:90;;;1491:8;;;1420:90;1519:26;1538:6;1519:18;:26::i;:::-;1572:10;1555:28;;;;:16;:28;;;;;1586:15;1555:46;;;;1611:8;:26;1138:506::o;1777:109::-;1850:4;;:29;;-1:-1:-1;;;1850:29:3;;1873:4;1850:29;;;186:51:8;1824:7:3;;-1:-1:-1;;;;;1850:4:3;;:14;;159:18:8;;1850:29:3;14:229:8;2081:198:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;3633:2:8;2161:73:0::1;::::0;::::1;3615:21:8::0;3672:2;3652:18;;;3645:30;3711:34;3691:18;;;3684:62;-1:-1:-1;;;3762:18:8;;;3755:36;3808:19;;2161:73:0::1;3431:402:8::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;1359:130::-:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:2;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;4040:2:8;1414:68:0;;;4022:21:8;;;4059:18;;;4052:30;4118:34;4098:18;;;4091:62;4170:18;;1414:68:0;3838:356:8;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1990:629:3:-;2134:16;;;2148:1;2134:16;;;;;;;;2110:21;;2134:16;;;;;;;;-1:-1:-1;;2170:15:3;;;:22;;;-1:-1:-1;;;2170:22:3;;;;2110:40;;-1:-1:-1;;;;;;2170:15:3;;;;:20;;-1:-1:-1;2170:22:3;;;;;;;;;;;:15;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2160:4;2165:1;2160:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2160:32:3;;;:7;;;;;;;;;:32;2212:5;;2202:7;;2212:5;;;2202:4;;2212:5;;2202:7;;;;;;:::i;:::-;-1:-1:-1;;;;;2202:15:3;;;:7;;;;;;;;;:15;2237;;;:193;;-1:-1:-1;;;2237:193:3;;:15;;;:69;;:193;;2320:11;;2237:15;;2360:4;;2386;;2405:15;;2237:193;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2447:5:3;;-1:-1:-1;;;;;2447:5:3;;-1:-1:-1;2440:22:3;;-1:-1:-1;2471:42:3;2535:3;2516:18;:16;:18::i;:::-;:22;;;;:::i;:::-;:25;;2539:2;2516:25;:::i;:::-;2440:102;;-1:-1:-1;;;;;;2440:102:3;;;;;;;-1:-1:-1;;;;;1440:32:8;;;2440:102:3;;;1422:51:8;1489:18;;;1482:34;1395:18;;2440:102:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2559:5:3;;-1:-1:-1;;;;;2559:5:3;2552:22;2575:10;2606:3;2587:18;:16;:18::i;:::-;:22;;;;:::i;:::-;:24;;2610:1;2587:24;:::i;:::-;2552:60;;-1:-1:-1;;;;;;2552:60:3;;;;;;;-1:-1:-1;;;;;1440:32:8;;;2552:60:3;;;1422:51:8;1489:18;;;1482:34;1395:18;;2552:60:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2047:572;1990:629;:::o;470:131:8:-;-1:-1:-1;;;;;545:31:8;;535:42;;525:70;;591:1;588;581:12;606:247;665:6;718:2;706:9;697:7;693:23;689:32;686:52;;;734:1;731;724:12;686:52;773:9;760:23;792:31;817:5;792:31;:::i;:::-;842:5;606:247;-1:-1:-1;;;606:247:8:o;1527:277::-;1594:6;1647:2;1635:9;1626:7;1622:23;1618:32;1615:52;;;1663:1;1660;1653:12;1615:52;1695:9;1689:16;1748:5;1741:13;1734:21;1727:5;1724:32;1714:60;;1770:1;1767;1760:12;1809:184;1879:6;1932:2;1920:9;1911:7;1907:23;1903:32;1900:52;;;1948:1;1945;1938:12;1900:52;-1:-1:-1;1971:16:8;;1809:184;-1:-1:-1;1809:184:8:o;2344:127::-;2405:10;2400:3;2396:20;2393:1;2386:31;2436:4;2433:1;2426:15;2460:4;2457:1;2450:15;2476:125;2541:9;;;2562:10;;;2559:36;;;2575:18;;:::i;:::-;2476:125;;;;:::o;3298:128::-;3365:9;;;3386:11;;;3383:37;;;3400:18;;:::i;4331:251::-;4401:6;4454:2;4442:9;4433:7;4429:23;4425:32;4422:52;;;4470:1;4467;4460:12;4422:52;4502:9;4496:16;4521:31;4546:5;4521:31;:::i;4587:127::-;4648:10;4643:3;4639:20;4636:1;4629:31;4679:4;4676:1;4669:15;4703:4;4700:1;4693:15;4719:980;4981:4;5029:3;5018:9;5014:19;5060:6;5049:9;5042:25;5086:2;5124:6;5119:2;5108:9;5104:18;5097:34;5167:3;5162:2;5151:9;5147:18;5140:31;5191:6;5226;5220:13;5257:6;5249;5242:22;5295:3;5284:9;5280:19;5273:26;;5334:2;5326:6;5322:15;5308:29;;5355:1;5365:195;5379:6;5376:1;5373:13;5365:195;;;5444:13;;-1:-1:-1;;;;;5440:39:8;5428:52;;5535:15;;;;5500:12;;;;5476:1;5394:9;5365:195;;;-1:-1:-1;;;;;;;5616:32:8;;;;5611:2;5596:18;;5589:60;-1:-1:-1;;;5680:3:8;5665:19;5658:35;5577:3;4719:980;-1:-1:-1;;;4719:980:8:o;5704:217::-;5744:1;5770;5760:132;;5814:10;5809:3;5805:20;5802:1;5795:31;5849:4;5846:1;5839:15;5877:4;5874:1;5867:15;5760:132;-1:-1:-1;5906:9:8;;5704:217::o;5926:168::-;5999:9;;;6030;;6047:15;;;6041:22;;6027:37;6017:71;;6068:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "575200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyAndBurn()": "infinite",
								"checkBNBBalance()": "infinite",
								"checkSAFEBalance()": "infinite",
								"cityNodeAddress()": "2370",
								"cooldown()": "2384",
								"isOrNotUseWallet(address)": "2602",
								"owner()": "2343",
								"renounceOwnership()": "infinite",
								"setAimToken(address)": "26752",
								"setcityNodeAddress(address)": "26774",
								"token()": "2414",
								"transferOwnership(address)": "infinite",
								"uniswapV2Router()": "2350",
								"weth()": "2394",
								"withdraw()": "infinite"
							},
							"internal": {
								"swapTokensForOther(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 279,
									"end": 2723,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 279,
									"end": 2723,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 279,
									"end": 2723,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 543,
									"end": 893,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 543,
									"end": 893,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 543,
									"end": 893,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 543,
									"end": 893,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 543,
									"end": 893,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 543,
									"end": 893,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 543,
									"end": 893,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 543,
									"end": 893,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 543,
									"end": 893,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 543,
									"end": 893,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 677,
									"end": 692,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 677,
									"end": 711,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 677,
									"end": 711,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 677,
									"end": 711,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 624,
									"end": 666,
									"name": "PUSH",
									"source": 3,
									"value": "9AC64CC6E4415144C455BD8E4837FEA55603E5C3"
								},
								{
									"begin": 677,
									"end": 711,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 677,
									"end": 711,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 677,
									"end": 711,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 677,
									"end": 711,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 677,
									"end": 711,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 735,
									"end": 757,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "15AB88C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 735,
									"end": 757,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 624,
									"end": 666,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 624,
									"end": 666,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 624,
									"end": 666,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 624,
									"end": 666,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 735,
									"end": 755,
									"name": "PUSH",
									"source": 3,
									"value": "AD5C4648"
								},
								{
									"begin": 735,
									"end": 755,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 735,
									"end": 757,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 624,
									"end": 666,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "STATICCALL",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 735,
									"end": 757,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 757,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 757,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 735,
									"end": 757,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 735,
									"end": 757,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 735,
									"end": 757,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 735,
									"end": 757,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 735,
									"end": 757,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 735,
									"end": 757,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 735,
									"end": 757,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 735,
									"end": 757,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 735,
									"end": 757,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 721,
									"end": 725,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 721,
									"end": 758,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 721,
									"end": 758,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 721,
									"end": 758,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 721,
									"end": 758,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 721,
									"end": 758,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 721,
									"end": 758,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 721,
									"end": 758,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 721,
									"end": 758,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 721,
									"end": 758,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 721,
									"end": 758,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 721,
									"end": 758,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 721,
									"end": 758,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 768,
									"end": 841,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 789,
									"end": 831,
									"name": "PUSH",
									"source": 3,
									"value": "9AC64CC6E4415144C455BD8E4837FEA55603E5C3"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 525,
									"end": 576,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 834,
									"end": 840,
									"name": "PUSH",
									"source": 3,
									"value": "1ED09BEAD87C0378D8E6400000000"
								},
								{
									"begin": 592,
									"end": 610,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 592,
									"end": 610,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 592,
									"end": 610,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 585,
									"end": 619,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 768,
									"end": 780,
									"name": "PUSH",
									"source": 3,
									"value": "95EA7B3"
								},
								{
									"begin": 768,
									"end": 780,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 498,
									"end": 516,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 498,
									"end": 516,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 768,
									"end": 841,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "CALL",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 768,
									"end": 841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 768,
									"end": 841,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 851,
									"end": 855,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 851,
									"end": 855,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 851,
									"end": 886,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 851,
									"end": 886,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 872,
									"end": 876,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 851,
									"end": 886,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 525,
									"end": 576,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 879,
									"end": 885,
									"name": "PUSH",
									"source": 3,
									"value": "1ED09BEAD87C0378D8E6400000000"
								},
								{
									"begin": 592,
									"end": 610,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 592,
									"end": 610,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 592,
									"end": 610,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 585,
									"end": 619,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 851,
									"end": 855,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 851,
									"end": 855,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 851,
									"end": 855,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 851,
									"end": 855,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 851,
									"end": 863,
									"name": "PUSH",
									"source": 3,
									"value": "95EA7B3"
								},
								{
									"begin": 851,
									"end": 863,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 498,
									"end": 516,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 498,
									"end": 516,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 851,
									"end": 886,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 851,
									"end": 886,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 851,
									"end": 886,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 851,
									"end": 886,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "CALL",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 851,
									"end": 886,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 851,
									"end": 886,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 851,
									"end": 886,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 851,
									"end": 886,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 851,
									"end": 886,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 851,
									"end": 886,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 851,
									"end": 886,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 851,
									"end": 886,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 851,
									"end": 886,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 851,
									"end": 886,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 851,
									"end": 886,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 851,
									"end": 886,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 557,
									"end": 893,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 279,
									"end": 2723,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 279,
									"end": 2723,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 630,
									"end": 907,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 630,
									"end": 907,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 697,
									"end": 703,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 752,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 738,
									"end": 747,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 729,
									"end": 736,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 725,
									"end": 748,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 721,
									"end": 753,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 718,
									"end": 770,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 718,
									"end": 770,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 718,
									"end": 770,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 766,
									"end": 767,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 764,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 756,
									"end": 768,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 718,
									"end": 770,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 718,
									"end": 770,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 798,
									"end": 807,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 792,
									"end": 808,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 851,
									"end": 856,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 844,
									"end": 857,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 837,
									"end": 858,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 830,
									"end": 835,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 827,
									"end": 859,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 817,
									"end": 877,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 817,
									"end": 877,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 873,
									"end": 874,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 870,
									"end": 871,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 863,
									"end": 875,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 630,
									"end": 907,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 630,
									"end": 907,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 279,
									"end": 2723,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 279,
									"end": 2723,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 279,
									"end": 2723,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 279,
									"end": 2723,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 2723,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 279,
									"end": 2723,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 2723,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c5cb9b96a17ddd6e8c0d8a9cacb9a63f4c73998d811085bf14e45fcffed0c8c964736f6c63430008120033",
									".code": [
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "CC9B2E0E"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "CC9B2E0E"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "DAB9E087"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "FC0C546A"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "A703BD02"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "AA6DF299"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "CB464C49"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "467E8814"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "467E8814"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "610ABE35"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "787A08A6"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "1694505E"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "3CCFD60B"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "3FC8CEF3"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 2723,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 403,
											"end": 444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 403,
											"end": 444,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 403,
											"end": 444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 403,
											"end": 444,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 403,
											"end": 444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 444,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 204,
											"end": 236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 204,
											"end": 236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 204,
											"end": 236,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 186,
											"end": 237,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 186,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 174,
											"end": 176,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 159,
											"end": 177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 403,
											"end": 444,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 403,
											"end": 444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 444,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 403,
											"end": 444,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2721,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2624,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2624,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2624,
											"end": 2721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2721,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2624,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2721,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 324,
											"end": 342,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 324,
											"end": 342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 324,
											"end": 342,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 342,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 324,
											"end": 342,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 324,
											"end": 342,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 324,
											"end": 342,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 342,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1893,
											"end": 1978,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1893,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1893,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1893,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1893,
											"end": 1978,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1893,
											"end": 1978,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1893,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1893,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1893,
											"end": 1978,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1893,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1893,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1893,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1771,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1653,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1653,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1653,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1771,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1653,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1771,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1653,
											"end": 1771,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1004,
											"end": 1029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1004,
											"end": 1029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1004,
											"end": 1029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 992,
											"end": 994,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 977,
											"end": 995,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1653,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 858,
											"end": 1035,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 374,
											"end": 397,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 374,
											"end": 397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 374,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 374,
											"end": 397,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 374,
											"end": 397,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 374,
											"end": 397,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 374,
											"end": 397,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1132,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1010,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1010,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1010,
											"end": 1132,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1132,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1010,
											"end": 1132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1132,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1010,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1010,
											"end": 1132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1138,
											"end": 1644,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1138,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1138,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1138,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1138,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 450,
											"end": 501,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 450,
											"end": 501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 450,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 450,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 450,
											"end": 501,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 450,
											"end": 501,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 450,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 450,
											"end": 501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 450,
											"end": 501,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 450,
											"end": 501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 450,
											"end": 501,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 450,
											"end": 501,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 450,
											"end": 501,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 450,
											"end": 501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 450,
											"end": 501,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 450,
											"end": 501,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 450,
											"end": 501,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 450,
											"end": 501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 450,
											"end": 501,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 450,
											"end": 501,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 450,
											"end": 501,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 450,
											"end": 501,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1777,
											"end": 1886,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1777,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1777,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1777,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1777,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 507,
											"end": 537,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 507,
											"end": 537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 537,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 507,
											"end": 537,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 507,
											"end": 537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 507,
											"end": 537,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 507,
											"end": 537,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 537,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 368,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 348,
											"end": 368,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 348,
											"end": 368,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 368,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 348,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 348,
											"end": 368,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 368,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 348,
											"end": 368,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 348,
											"end": 368,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2721,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2624,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2670,
											"end": 2674,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2670,
											"end": 2674,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 2684,
											"end": 2694,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2696,
											"end": 2711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2696,
											"end": 2713,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2713,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2696,
											"end": 2713,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2670,
											"end": 2714,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2670,
											"end": 2714,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1472,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1472,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2670,
											"end": 2714,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 1516,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2714,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2670,
											"end": 2714,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2714,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1893,
											"end": 1978,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1893,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 1962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1957,
											"end": 1971,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1971,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1957,
											"end": 1971,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1957,
											"end": 1971,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1971,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1971,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1971,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1971,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1971,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1971,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1893,
											"end": 1978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1771,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1653,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1762,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 186,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1708,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1708,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1749,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1726,
											"end": 1749,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 159,
											"end": 177,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 159,
											"end": 177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1726,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1719,
											"end": 1764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1132,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1010,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1091,
											"end": 1125,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1125,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1091,
											"end": 1125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1091,
											"end": 1125,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1125,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1125,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1125,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1125,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1125,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1125,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1125,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1125,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1138,
											"end": 1644,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1138,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1190,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1186,
											"end": 1190,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1213,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 186,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1225,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1218,
											"end": 1225,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1186,
											"end": 1190,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1200,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1186,
											"end": 1200,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 159,
											"end": 177,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 159,
											"end": 177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1186,
											"end": 1215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1225,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1225,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2182,
											"end": 2203,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2241,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2219,
											"end": 2237,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2219,
											"end": 2237,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2237,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "212721103130B630B731B29032B93937B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2258,
											"end": 2276,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2258,
											"end": 2276,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2258,
											"end": 2276,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2251,
											"end": 2298,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1178,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1284,
											"end": 1292,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1284,
											"end": 1292,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1284,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1284,
											"end": 1298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1295,
											"end": 1298,
											"name": "PUSH",
											"source": 3,
											"value": "12C"
										},
										{
											"begin": 1284,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1284,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1284,
											"end": 1298,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1284,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1281,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1298,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1258,
											"end": 1319,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1319,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1258,
											"end": 1319,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1258,
											"end": 1319,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1319,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2810,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1258,
											"end": 1319,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1258,
											"end": 1319,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1319,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2790,
											"end": 2811,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2847,
											"end": 2849,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 2827,
											"end": 2845,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2827,
											"end": 2845,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2827,
											"end": 2845,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9903737BA1031B7B7B63237BBB7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2904,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2921,
											"end": 2939,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2921,
											"end": 2939,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2606,
											"end": 2945,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1319,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1258,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1349,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1344,
											"end": 1349,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1371,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 186,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1386,
											"name": "PUSH",
											"source": 3,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 1375,
											"end": 1386,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1344,
											"end": 1349,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1349,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 159,
											"end": 177,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 159,
											"end": 177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1337,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1337,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1386,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1329,
											"end": 1410,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1410,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1329,
											"end": 1410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1410,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3154,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1329,
											"end": 1410,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1329,
											"end": 1410,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3191,
											"end": 3193,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3194,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A903437B6321030B6B7BAB73A1032B93937B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3203,
											"end": 3252,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3269,
											"end": 3287,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3269,
											"end": 3287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2950,
											"end": 3293,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1410,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1329,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1468,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1469,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1457,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1441,
											"end": 1469,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 1469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1469,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1469,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1469,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 3,
											"value": "E10"
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1423,
											"end": 1469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1423,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1469,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1423,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1476,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1510,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1420,
											"end": 1510,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1499,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1499,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1499,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1510,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1420,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1538,
											"end": 1544,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1519,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1582,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1583,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1583,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1571,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1555,
											"end": 1583,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1583,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1583,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1583,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1601,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1601,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1601,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1611,
											"end": 1637,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1138,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1777,
											"end": 1886,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1777,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1854,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1850,
											"end": 1854,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1879,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1879,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 1879,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1879,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 1877,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1879,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1850,
											"end": 1879,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1879,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 186,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 1854,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1864,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1850,
											"end": 1864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 159,
											"end": 177,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 159,
											"end": 177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 14,
											"end": 243,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3633,
											"end": 3635,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3636,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3674,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3652,
											"end": 3670,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3652,
											"end": 3670,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3670,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 3745,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3691,
											"end": 3709,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3691,
											"end": 3709,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3684,
											"end": 3746,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3755,
											"end": 3791,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 3827,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3808,
											"end": 3827,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3431,
											"end": 3833,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4052,
											"end": 4082,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4118,
											"end": 4152,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4153,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3838,
											"end": 4194,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2619,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1990,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2131,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2131,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2150,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2170,
											"end": 2185,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2170,
											"end": 2185,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2185,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15AB88C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2150,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2150,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2170,
											"end": 2185,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2185,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2185,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2185,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2190,
											"name": "PUSH",
											"source": 3,
											"value": "AD5C4648"
										},
										{
											"begin": 2170,
											"end": 2190,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2185,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2170,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2165,
											"end": 2166,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2160,
											"end": 2167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2160,
											"end": 2192,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2192,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2192,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2192,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2206,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2202,
											"end": 2209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2202,
											"end": 2217,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2217,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2217,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2217,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2252,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2237,
											"end": 2252,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2252,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C11D795"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2252,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2252,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2306,
											"name": "PUSH",
											"source": 3,
											"value": "5C11D795"
										},
										{
											"begin": 2237,
											"end": 2306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2331,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2331,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2252,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2364,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2386,
											"end": 2390,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 2386,
											"end": 2390,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2420,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2420,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2237,
											"end": 2430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2237,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2447,
											"end": 2452,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2447,
											"end": 2452,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2447,
											"end": 2452,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2471,
											"end": 2513,
											"name": "PUSH",
											"source": 3,
											"value": "DEAD"
										},
										{
											"begin": 2535,
											"end": 2538,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2516,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2516,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2516,
											"end": 2534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2534,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2516,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2516,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2516,
											"end": 2541,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 2541,
											"name": "PUSH",
											"source": 3,
											"value": "5F"
										},
										{
											"begin": 2516,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2516,
											"end": 2541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2541,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2516,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1472,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1472,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 1516,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2440,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2440,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2559,
											"end": 2564,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2559,
											"end": 2564,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2559,
											"end": 2564,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2574,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 2575,
											"end": 2585,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2609,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2587,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2587,
											"end": 2605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2605,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2587,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2587,
											"end": 2609,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2609,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2587,
											"end": 2609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2609,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2587,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2587,
											"end": 2611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2587,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2587,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2587,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1472,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1472,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 1516,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2552,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2047,
											"end": 2619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 470,
											"end": 601,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 470,
											"end": 601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 545,
											"end": 576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 545,
											"end": 576,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 535,
											"end": 577,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 535,
											"end": 577,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 525,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 525,
											"end": 595,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 591,
											"end": 592,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 581,
											"end": 593,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 606,
											"end": 853,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 606,
											"end": 853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 671,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 720,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 715,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 697,
											"end": 704,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 693,
											"end": 716,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 689,
											"end": 721,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 686,
											"end": 738,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 686,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 686,
											"end": 738,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 734,
											"end": 735,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 732,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 724,
											"end": 736,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 686,
											"end": 738,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 686,
											"end": 738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 773,
											"end": 782,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 760,
											"end": 783,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 792,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 817,
											"end": 822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 792,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 792,
											"end": 823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 792,
											"end": 823,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 792,
											"end": 823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 842,
											"end": 847,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 606,
											"end": 853,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 606,
											"end": 853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1804,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1527,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1649,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1626,
											"end": 1633,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1645,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1650,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1663,
											"end": 1664,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1661,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1653,
											"end": 1665,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1689,
											"end": 1705,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1741,
											"end": 1754,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1755,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1732,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1756,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 1714,
											"end": 1774,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1768,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1772,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1993,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1809,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1885,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1920,
											"end": 1929,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1918,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1930,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1935,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1952,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1900,
											"end": 1952,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1946,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1950,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1952,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1900,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 1987,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 1987,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1809,
											"end": 1993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1809,
											"end": 1993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2471,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2344,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2405,
											"end": 2415,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2400,
											"end": 2403,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2396,
											"end": 2416,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2393,
											"end": 2394,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2417,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2440,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2433,
											"end": 2434,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2464,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2457,
											"end": 2458,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2601,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2476,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2550,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2550,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2550,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2572,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2572,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2572,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2559,
											"end": 2595,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2559,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 2559,
											"end": 2595,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2575,
											"end": 2593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2601,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2601,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2601,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2601,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3298,
											"end": 3426,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 3298,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3365,
											"end": 3374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3365,
											"end": 3374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3365,
											"end": 3374,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3386,
											"end": 3397,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3386,
											"end": 3397,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3386,
											"end": 3397,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3420,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3383,
											"end": 3420,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3400,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3400,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3400,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4331,
											"end": 4582,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 4331,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4407,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4454,
											"end": 4456,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4442,
											"end": 4451,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4433,
											"end": 4440,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4429,
											"end": 4452,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4425,
											"end": 4457,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4422,
											"end": 4474,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4422,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 4422,
											"end": 4474,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4470,
											"end": 4471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4467,
											"end": 4468,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4460,
											"end": 4472,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4422,
											"end": 4474,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 4422,
											"end": 4474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4502,
											"end": 4511,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4496,
											"end": 4512,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4521,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 4546,
											"end": 4551,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4521,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 4521,
											"end": 4552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4714,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 4587,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4658,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 4643,
											"end": 4646,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4639,
											"end": 4659,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4660,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4676,
											"end": 4677,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4669,
											"end": 4684,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 4707,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4700,
											"end": 4701,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4693,
											"end": 4708,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4719,
											"end": 5699,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 4719,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 4985,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5029,
											"end": 5032,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5014,
											"end": 5033,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5066,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5049,
											"end": 5058,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5067,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5124,
											"end": 5130,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5119,
											"end": 5121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5117,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5097,
											"end": 5131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5170,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 5162,
											"end": 5164,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5151,
											"end": 5160,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5171,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5191,
											"end": 5197,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5226,
											"end": 5232,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5220,
											"end": 5233,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5257,
											"end": 5263,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5249,
											"end": 5255,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5242,
											"end": 5264,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5295,
											"end": 5298,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5280,
											"end": 5299,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5273,
											"end": 5299,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5273,
											"end": 5299,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5336,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5326,
											"end": 5332,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5322,
											"end": 5337,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5308,
											"end": 5337,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5308,
											"end": 5337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5356,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5560,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 5365,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5379,
											"end": 5385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5373,
											"end": 5386,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5365,
											"end": 5560,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5365,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 5365,
											"end": 5560,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5444,
											"end": 5457,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5444,
											"end": 5457,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5440,
											"end": 5479,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5480,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5480,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5535,
											"end": 5550,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5535,
											"end": 5550,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5535,
											"end": 5550,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5535,
											"end": 5550,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5500,
											"end": 5512,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5500,
											"end": 5512,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5500,
											"end": 5512,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5500,
											"end": 5512,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5476,
											"end": 5477,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5394,
											"end": 5403,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5365,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 5365,
											"end": 5560,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5365,
											"end": 5560,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 5365,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5616,
											"end": 5648,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 5616,
											"end": 5648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5616,
											"end": 5648,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 5616,
											"end": 5648,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5596,
											"end": 5614,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5614,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5589,
											"end": 5649,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5680,
											"end": 5683,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5665,
											"end": 5684,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5693,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5577,
											"end": 5580,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4719,
											"end": 5699,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4719,
											"end": 5699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5704,
											"end": 5921,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 5704,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5744,
											"end": 5745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5771,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5760,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 5760,
											"end": 5892,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5814,
											"end": 5824,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 5809,
											"end": 5812,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5805,
											"end": 5825,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5802,
											"end": 5803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5826,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5849,
											"end": 5853,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 5846,
											"end": 5847,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5839,
											"end": 5854,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 5881,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5874,
											"end": 5875,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5867,
											"end": 5882,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5760,
											"end": 5892,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 5760,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5906,
											"end": 5915,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5906,
											"end": 5915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5704,
											"end": 5921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5926,
											"end": 6094,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 5926,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6008,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6008,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6008,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6030,
											"end": 6039,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6030,
											"end": 6039,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6047,
											"end": 6062,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6047,
											"end": 6062,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6047,
											"end": 6062,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6041,
											"end": 6063,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6041,
											"end": 6063,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6064,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6017,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 6017,
											"end": 6088,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6068,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 6068,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 6068,
											"end": 6086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/MarketValueManager.sol",
								"contracts/interface/IReputation.sol",
								"contracts/interface/IUniswapV2Router01.sol",
								"contracts/interface/IUniswapV2Router02.sol",
								"contracts/lib/Address.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyAndBurn()": "aa6df299",
							"checkBNBBalance()": "cc9b2e0e",
							"checkSAFEBalance()": "610abe35",
							"cityNodeAddress()": "dab9e087",
							"cooldown()": "787a08a6",
							"isOrNotUseWallet(address)": "cb464c49",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setAimToken(address)": "467e8814",
							"setcityNodeAddress(address)": "a703bd02",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b",
							"uniswapV2Router()": "1694505e",
							"weth()": "3fc8cef3",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buyAndBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkBNBBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkSAFEBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cityNodeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOrNotUseWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setAimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cityNodeAddress\",\"type\":\"address\"}],\"name\":\"setcityNodeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MarketValueManager.sol\":\"MarketValueManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/MarketValueManager.sol\":{\"keccak256\":\"0x9383f623783171da8ab7d3e457982c989c362560e0dd4a7de9e882253fcac198\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78a46d5727502e560df37be865cd10e655948a7ab16d2ccd1dab17e506147af8\",\"dweb:/ipfs/QmYygQqnqW5rdVok4yrnbvHQHKhpFJBF4g12f2DdFDeZkb\"]},\"contracts/interface/IReputation.sol\":{\"keccak256\":\"0xa996aff6c26b6e76b061d5c6555510be77b3d8111b2408ef80c1423268d3e1c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf2749b260bf64fff2ac367e5a5309bb4ea111827ba8bfe1cda70db8103d635\",\"dweb:/ipfs/QmSJTJoRcQiRAuTXQG5rRwZxKF78zijSuK9NKuC9rLZWxv\"]},\"contracts/interface/IUniswapV2Router01.sol\":{\"keccak256\":\"0xb0f0a9e1bfa3a5f66128964038451692ed3683dc741f43262d9bd8b791b8ea64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc110a0d4c6e9358dd7127bea4c77ba93513b1dd55d55cb4bf8781e4f1fd2ec6\",\"dweb:/ipfs/QmPnqQ2amu37sjW98BLXuJnLjavrTjoZcc1oidFDyQP4LX\"]},\"contracts/interface/IUniswapV2Router02.sol\":{\"keccak256\":\"0x6a5985605b2462d3bc99a92de2843c236ceeeae09cf77c8b9b89ef0b28dc36e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3bd7fe26c5c6caa7cff94ffd0af146a7542615b8cf928afa638621bbb736407\",\"dweb:/ipfs/QmSSry3rTW4cWkzD46kPvRLLQTEFeEt2A6v3p8j4F9A5N5\"]},\"contracts/lib/Address.sol\":{\"keccak256\":\"0x5dd065a27bcbe390b820fd1b5a1abe8edb8d9f77d38fe0df95536e622ad81b6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f938960dca1d29b1c6a7a05bf1d046a70eb6354eca186afe125062fc4ba47ee\",\"dweb:/ipfs/QmUR1wkptsjQ9CAgWSPHFsHXC7UwrEy2y8V1KiMSVL2cbN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/MarketValueManager.sol:MarketValueManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 224,
								"contract": "contracts/MarketValueManager.sol:MarketValueManager",
								"label": "weth",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)190"
							},
							{
								"astId": 226,
								"contract": "contracts/MarketValueManager.sol:MarketValueManager",
								"label": "token",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 228,
								"contract": "contracts/MarketValueManager.sol:MarketValueManager",
								"label": "cooldown",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 231,
								"contract": "contracts/MarketValueManager.sol:MarketValueManager",
								"label": "uniswapV2Router",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(IUniswapV2Router02)928"
							},
							{
								"astId": 235,
								"contract": "contracts/MarketValueManager.sol:MarketValueManager",
								"label": "isOrNotUseWallet",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 237,
								"contract": "contracts/MarketValueManager.sol:MarketValueManager",
								"label": "cityNodeAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)190": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Router02)928": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IReputation.sol": {
				"IReputation": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "checkReputation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkReputation(address)": "014ab313"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"checkReputation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IReputation.sol\":\"IReputation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IReputation.sol\":{\"keccak256\":\"0xa996aff6c26b6e76b061d5c6555510be77b3d8111b2408ef80c1423268d3e1c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf2749b260bf64fff2ac367e5a5309bb4ea111827ba8bfe1cda70db8103d635\",\"dweb:/ipfs/QmSJTJoRcQiRAuTXQG5rRwZxKF78zijSuK9NKuC9rLZWxv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IUniswapV2Router01.sol\":{\"keccak256\":\"0xb0f0a9e1bfa3a5f66128964038451692ed3683dc741f43262d9bd8b791b8ea64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc110a0d4c6e9358dd7127bea4c77ba93513b1dd55d55cb4bf8781e4f1fd2ec6\",\"dweb:/ipfs/QmPnqQ2amu37sjW98BLXuJnLjavrTjoZcc1oidFDyQP4LX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IUniswapV2Router01.sol\":{\"keccak256\":\"0xb0f0a9e1bfa3a5f66128964038451692ed3683dc741f43262d9bd8b791b8ea64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc110a0d4c6e9358dd7127bea4c77ba93513b1dd55d55cb4bf8781e4f1fd2ec6\",\"dweb:/ipfs/QmPnqQ2amu37sjW98BLXuJnLjavrTjoZcc1oidFDyQP4LX\"]},\"contracts/interface/IUniswapV2Router02.sol\":{\"keccak256\":\"0x6a5985605b2462d3bc99a92de2843c236ceeeae09cf77c8b9b89ef0b28dc36e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3bd7fe26c5c6caa7cff94ffd0af146a7542615b8cf928afa638621bbb736407\",\"dweb:/ipfs/QmSSry3rTW4cWkzD46kPvRLLQTEFeEt2A6v3p8j4F9A5N5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/lib/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lib/Address.sol\":57:7786  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lib/Address.sol\":57:7786  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f82b36146277b001bab46541903bab475b9b0a3293e0d7c77a9e5aac7acc58b464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f82b36146277b001bab46541903bab475b9b0a3293e0d7c77a9e5aac7acc58b464736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0x2B CALLDATASIZE EQ PUSH3 0x77B001 0xBA 0xB4 PUSH6 0x41903BAB475B SWAP12 EXP ORIGIN SWAP4 0xE0 0xD7 0xC7 PUSH27 0x9E5AAC7ACC58B464736F6C63430008120033000000000000000000 ",
							"sourceMap": "57:7729:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;57:7729:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f82b36146277b001bab46541903bab475b9b0a3293e0d7c77a9e5aac7acc58b464736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0x2B CALLDATASIZE EQ PUSH3 0x77B001 0xBA 0xB4 PUSH6 0x41903BAB475B SWAP12 EXP ORIGIN SWAP4 0xE0 0xD7 0xC7 PUSH27 0x9E5AAC7ACC58B464736F6C63430008120033000000000000000000 ",
							"sourceMap": "57:7729:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 7786,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 57,
									"end": 7786,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f82b36146277b001bab46541903bab475b9b0a3293e0d7c77a9e5aac7acc58b464736f6c63430008120033",
									".code": [
										{
											"begin": 57,
											"end": 7786,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 57,
											"end": 7786,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 57,
											"end": 7786,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 57,
											"end": 7786,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 7786,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 7786,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 57,
											"end": 7786,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 7786,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 7786,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/MarketValueManager.sol",
								"contracts/interface/IReputation.sol",
								"contracts/interface/IUniswapV2Router01.sol",
								"contracts/interface/IUniswapV2Router02.sol",
								"contracts/lib/Address.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/Address.sol\":{\"keccak256\":\"0x5dd065a27bcbe390b820fd1b5a1abe8edb8d9f77d38fe0df95536e622ad81b6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f938960dca1d29b1c6a7a05bf1d046a70eb6354eca186afe125062fc4ba47ee\",\"dweb:/ipfs/QmUR1wkptsjQ9CAgWSPHFsHXC7UwrEy2y8V1KiMSVL2cbN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							212
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 213,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								212
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 190,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 198,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 197,
												"id": 200,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 212,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 207,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 206,
												"id": 209,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 212,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"contracts/MarketValueManager.sol": {
				"ast": {
					"absolutePath": "contracts/MarketValueManager.sol",
					"exportedSymbols": {
						"Address": [
							1224
						],
						"Context": [
							212
						],
						"IERC20": [
							190
						],
						"IReputation": [
							532
						],
						"IUniswapV2Router01": [
							840
						],
						"IUniswapV2Router02": [
							928
						],
						"MarketValueManager": [
							522
						],
						"Ownable": [
							112
						]
					},
					"id": 523,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 215,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 523,
							"sourceUnit": 113,
							"src": "57:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 216,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 523,
							"sourceUnit": 191,
							"src": "110:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/Address.sol",
							"file": "./lib/Address.sol",
							"id": 217,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 523,
							"sourceUnit": 1225,
							"src": "167:27:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IUniswapV2Router02.sol",
							"file": "./interface/IUniswapV2Router02.sol",
							"id": 218,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 523,
							"sourceUnit": 929,
							"src": "195:44:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IReputation.sol",
							"file": "./interface/IReputation.sol",
							"id": 219,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 523,
							"sourceUnit": 533,
							"src": "240:37:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 220,
										"name": "Ownable",
										"nameLocations": [
											"310:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "310:7:3"
									},
									"id": 221,
									"nodeType": "InheritanceSpecifier",
									"src": "310:7:3"
								}
							],
							"canonicalName": "MarketValueManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 522,
							"linearizedBaseContracts": [
								522,
								112,
								212
							],
							"name": "MarketValueManager",
							"nameLocation": "288:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3fc8cef3",
									"id": 224,
									"mutability": "mutable",
									"name": "weth",
									"nameLocation": "338:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "324:18:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$190",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 223,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 222,
											"name": "IERC20",
											"nameLocations": [
												"324:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 190,
											"src": "324:6:3"
										},
										"referencedDeclaration": 190,
										"src": "324:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$190",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 226,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "363:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "348:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 225,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "348:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "787a08a6",
									"id": 228,
									"mutability": "mutable",
									"name": "cooldown",
									"nameLocation": "389:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "374:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 227,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "374:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1694505e",
									"id": 231,
									"mutability": "mutable",
									"name": "uniswapV2Router",
									"nameLocation": "429:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "403:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$928",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 230,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 229,
											"name": "IUniswapV2Router02",
											"nameLocations": [
												"403:18:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 928,
											"src": "403:18:3"
										},
										"referencedDeclaration": 928,
										"src": "403:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$928",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb464c49",
									"id": 235,
									"mutability": "mutable",
									"name": "isOrNotUseWallet",
									"nameLocation": "485:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "450:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 234,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 232,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "458:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "450:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 233,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "469:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dab9e087",
									"id": 237,
									"mutability": "mutable",
									"name": "cityNodeAddress",
									"nameLocation": "522:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 522,
									"src": "507:30:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 236,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "507:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "557:336:3",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "_uniswapV2Router",
														"nameLocation": "586:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 283,
														"src": "567:35:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$928",
															"typeString": "contract IUniswapV2Router02"
														},
														"typeName": {
															"id": 241,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 240,
																"name": "IUniswapV2Router02",
																"nameLocations": [
																	"567:18:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 928,
																"src": "567:18:3"
															},
															"referencedDeclaration": 928,
															"src": "567:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$928",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307839416336344363366534343135313434433435354244384534383337466561353536303365356333",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "624:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 243,
														"name": "IUniswapV2Router02",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "605:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$928_$",
															"typeString": "type(contract IUniswapV2Router02)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "605:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$928",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "567:100:3"
											},
											{
												"expression": {
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 247,
														"name": "uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "677:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$928",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 248,
														"name": "_uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "695:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$928",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "677:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$928",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "677:34:3"
											},
											{
												"expression": {
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "721:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$190",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 253,
																		"name": "uniswapV2Router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 231,
																		"src": "735:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$928",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "751:4:3",
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 544,
																	"src": "735:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "735:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 252,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "728:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "728:30:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$190",
															"typeString": "contract IERC20"
														}
													},
													"src": "721:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "721:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307839416336344363366534343135313434433435354244384534383337466561353536303365356333",
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "789:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "781:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 262,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "781:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "781:51:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000000000000000000000_by_1",
																"typeString": "int_const 1000...(27 digits omitted)...0000"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "834:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3334",
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "838:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_34_by_1",
																	"typeString": "int_const 34"
																},
																"value": "34"
															},
															"src": "834:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000000000000000000_by_1",
																"typeString": "int_const 1000...(27 digits omitted)...0000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000000000000000000_by_1",
																"typeString": "int_const 1000...(27 digits omitted)...0000"
															}
														],
														"expression": {
															"id": 259,
															"name": "weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "773:7:3",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 177,
														"src": "768:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "768:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "768:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 276,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "872:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MarketValueManager_$522",
																		"typeString": "contract MarketValueManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MarketValueManager_$522",
																		"typeString": "contract MarketValueManager"
																	}
																],
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "864:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 274,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "864:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "864:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000000000000000000000_by_1",
																"typeString": "int_const 1000...(27 digits omitted)...0000"
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "879:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3334",
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "883:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_34_by_1",
																	"typeString": "int_const 34"
																},
																"value": "34"
															},
															"src": "879:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000000000000000000_by_1",
																"typeString": "int_const 1000...(27 digits omitted)...0000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000000000000000000_by_1",
																"typeString": "int_const 1000...(27 digits omitted)...0000"
															}
														],
														"expression": {
															"id": 271,
															"name": "weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "851:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "856:7:3",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 177,
														"src": "851:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "851:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "851:35:3"
											}
										]
									},
									"id": 284,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:2:3"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "557:0:3"
									},
									"scope": 522,
									"src": "543:350:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "921:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "939:31:3",
															"subExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 289,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "959:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "963:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "959:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 287,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1224,
																		"src": "940:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1224_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "948:10:3",
																	"memberName": "isContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 947,
																	"src": "940:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "940:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20636f6e747261637473",
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "972:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f556f5c9a3ac7f562d626084d38740ad84c3e0df09c6f52de195b36d7bab09e0",
																"typeString": "literal_string \"No contracts\""
															},
															"value": "No contracts"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f556f5c9a3ac7f562d626084d38740ad84c3e0df09c6f52de195b36d7bab09e0",
																"typeString": "literal_string \"No contracts\""
															}
														],
														"id": 286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "931:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "931:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "931:56:3"
											},
											{
												"id": 296,
												"nodeType": "PlaceholderStatement",
												"src": "997:1:3"
											}
										]
									},
									"id": 298,
									"name": "notContract",
									"nameLocation": "907:11:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "918:2:3"
									},
									"src": "898:107:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "1081:51:3",
										"statements": [
											{
												"expression": {
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 305,
														"name": "cityNodeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "1091:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 306,
														"name": "_cityNodeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "1109:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1091:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "1091:34:3"
											}
										]
									},
									"functionSelector": "a703bd02",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 303,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 302,
												"name": "onlyOwner",
												"nameLocations": [
													"1071:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1071:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1071:9:3"
										}
									],
									"name": "setcityNodeAddress",
									"nameLocation": "1019:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "_cityNodeAddress",
												"nameLocation": "1046:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "1038:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1037:26:3"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:0:3"
									},
									"scope": 522,
									"src": "1010:122:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "1168:476:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 318,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1209:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MarketValueManager_$522",
																					"typeString": "contract MarketValueManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MarketValueManager_$522",
																					"typeString": "contract MarketValueManager"
																				}
																			],
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1201:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 316,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1201:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1201:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 314,
																		"name": "weth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "1186:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1191:9:3",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 147,
																	"src": "1186:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1186:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1218:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1223:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "1218:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "1186:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "424e422062616c616e6365206572726f72",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1228:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_31a5114289273986113a77121521ba7bed56a7e8c03e2f8b48fe9efdb1582af1",
																"typeString": "literal_string \"BNB balance error\""
															},
															"value": "BNB balance error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_31a5114289273986113a77121521ba7bed56a7e8c03e2f8b48fe9efdb1582af1",
																"typeString": "literal_string \"BNB balance error\""
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1178:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1178:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "1178:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 329,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1266:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1272:9:3",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1266:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 331,
																	"name": "cooldown",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "1284:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "333030",
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1295:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_300_by_1",
																		"typeString": "int_const 300"
																	},
																	"value": "300"
																},
																"src": "1284:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1266:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6973206e6f7420636f6f6c646f776e",
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1301:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da0c5ccfe5203a05712e8f9773441e2b3917df15c5e647d94a1fc0dccfcb6bf2",
																"typeString": "literal_string \"is not cooldown\""
															},
															"value": "is not cooldown"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da0c5ccfe5203a05712e8f9773441e2b3917df15c5e647d94a1fc0dccfcb6bf2",
																"typeString": "literal_string \"is not cooldown\""
															}
														],
														"id": 328,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1258:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1258:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "1258:61:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 343,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1361:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1365:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1361:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 340,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "1344:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 339,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "1337:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1337:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1351:9:3",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 147,
																	"src": "1337:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1337:35:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000"
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1375:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1380:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1384:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1380:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1375:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000"
																}
															},
															"src": "1337:49:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7520686f6c6420616d6f756e74206572726f72",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1387:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fdfe36e237533d26ee793ce8a23f2c362875f9e11f67d65c0bc1b66017ab85f4",
																"typeString": "literal_string \"u hold amount error\""
															},
															"value": "u hold amount error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fdfe36e237533d26ee793ce8a23f2c362875f9e11f67d65c0bc1b66017ab85f4",
																"typeString": "literal_string \"u hold amount error\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1329:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1329:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "1329:81:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 355,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1423:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1429:9:3",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1423:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"baseExpression": {
																"id": 357,
																"name": "isOrNotUseWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "1441:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 360,
															"indexExpression": {
																"expression": {
																	"id": 358,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1458:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1462:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1458:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1441:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1423:46:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "33363030",
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1472:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "3600"
													},
													"src": "1423:53:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "1420:90:3",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "1477:33:3",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "1491:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1491:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 366,
															"nodeType": "ExpressionStatement",
															"src": "1491:8:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1538:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1542:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "1538:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														],
														"id": 369,
														"name": "swapTokensForOther",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "1519:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1519:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "1519:26:3"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 375,
															"name": "isOrNotUseWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "1555:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 378,
														"indexExpression": {
															"expression": {
																"id": 376,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1572:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1576:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1572:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1555:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 379,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1586:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1592:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1586:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1555:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "1555:46:3"
											},
											{
												"expression": {
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 383,
														"name": "cooldown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "1611:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 384,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1622:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1628:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1622:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1611:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "1611:26:3"
											}
										]
									},
									"functionSelector": "aa6df299",
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyAndBurn",
									"nameLocation": "1147:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1157:2:3"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1168:0:3"
									},
									"scope": 522,
									"src": "1138:506:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "1709:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 400,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1758:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MarketValueManager_$522",
																		"typeString": "contract MarketValueManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MarketValueManager_$522",
																		"typeString": "contract MarketValueManager"
																	}
																],
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1750:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 398,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1750:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1750:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 395,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "1733:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 394,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "1726:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1726:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1740:9:3",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 147,
														"src": "1726:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1726:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 393,
												"id": 403,
												"nodeType": "Return",
												"src": "1719:45:3"
											}
										]
									},
									"functionSelector": "610abe35",
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkSAFEBalance",
									"nameLocation": "1662:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1678:2:3"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "1701:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:9:3"
									},
									"scope": 522,
									"src": "1653:118:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "1833:53:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 414,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1873:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MarketValueManager_$522",
																		"typeString": "contract MarketValueManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MarketValueManager_$522",
																		"typeString": "contract MarketValueManager"
																	}
																],
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1865:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 412,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1865:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1865:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 410,
															"name": "weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "1850:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1855:9:3",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 147,
														"src": "1850:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1850:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 409,
												"id": 417,
												"nodeType": "Return",
												"src": "1843:36:3"
											}
										]
									},
									"functionSelector": "cc9b2e0e",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkBNBBalance",
									"nameLocation": "1786:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1801:2:3"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "1824:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:9:3"
									},
									"scope": 522,
									"src": "1777:109:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "1947:31:3",
										"statements": [
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 426,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1957:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 427,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "1965:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1957:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "1957:14:3"
											}
										]
									},
									"functionSelector": "467e8814",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 424,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 423,
												"name": "onlyOwner",
												"nameLocations": [
													"1937:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1937:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1937:9:3"
										}
									],
									"name": "setAimToken",
									"nameLocation": "1902:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1922:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1914:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:16:3"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1947:0:3"
									},
									"scope": 522,
									"src": "1893:85:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "2047:572:3",
										"statements": [
											{
												"assignments": [
													440
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "2127:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 505,
														"src": "2110:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 438,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2110:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 439,
															"nodeType": "ArrayTypeName",
															"src": "2110:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 446,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2148:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2134:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 441,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2138:7:3",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 442,
															"nodeType": "ArrayTypeName",
															"src": "2138:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2134:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2110:40:3"
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 447,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "2160:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 449,
														"indexExpression": {
															"hexValue": "30",
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2165:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2160:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 450,
																"name": "uniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "2170:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$928",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2186:4:3",
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 544,
															"src": "2170:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2170:22:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2160:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "2160:32:3"
											},
											{
												"expression": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 455,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "2202:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 457,
														"indexExpression": {
															"hexValue": "31",
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2207:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2202:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 458,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "2212:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2202:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "2202:15:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "2320:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2345:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 466,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "2360:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 469,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2386:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MarketValueManager_$522",
																		"typeString": "contract MarketValueManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MarketValueManager_$522",
																		"typeString": "contract MarketValueManager"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2378:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2378:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2378:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 471,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2405:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2411:9:3",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2405:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 461,
															"name": "uniswapV2Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2237:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$928",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2253:53:3",
														"memberName": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "2237:69:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:193:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "2237:193:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2471:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x000000000000000000000000000000000000dEaD"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2463:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 479,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2463:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2463:51:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 483,
																		"name": "checkSAFEBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "2516:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2516:18:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2535:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2516:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "3935",
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2539:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_95_by_1",
																	"typeString": "int_const 95"
																},
																"value": "95"
															},
															"src": "2516:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 476,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "2447:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 475,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "2440:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2440:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2454:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 157,
														"src": "2440:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2440:102:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "2440:102:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 495,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2575:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2579:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2575:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 497,
																		"name": "checkSAFEBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "2587:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2587:18:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2606:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2587:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "35",
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2610:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															"src": "2587:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 492,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "2559:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 491,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "2552:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2552:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2566:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 157,
														"src": "2552:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2552:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "2552:60:3"
											}
										]
									},
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForOther",
									"nameLocation": "1999:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "2026:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "2018:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2017:21:3"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:0:3"
									},
									"scope": 522,
									"src": "1990:629:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "2660:61:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 514,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2684:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2688:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2684:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 516,
																"name": "checkBNBBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "2696:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2696:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 511,
															"name": "weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "2670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2675:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 157,
														"src": "2670:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2670:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "2670:44:3"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 509,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 508,
												"name": "onlyOwner",
												"nameLocations": [
													"2651:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2651:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2651:9:3"
										}
									],
									"name": "withdraw",
									"nameLocation": "2633:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2641:2:3"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2660:0:3"
									},
									"scope": 522,
									"src": "2624:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 523,
							"src": "279:2444:3",
							"usedErrors": []
						}
					],
					"src": "32:2691:3"
				},
				"id": 3
			},
			"contracts/interface/IReputation.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IReputation.sol",
					"exportedSymbols": {
						"IReputation": [
							532
						]
					},
					"id": 533,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 524,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IReputation",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 532,
							"linearizedBaseContracts": [
								532
							],
							"name": "IReputation",
							"nameLocation": "67:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "014ab313",
									"id": 531,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkReputation",
									"nameLocation": "91:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "115:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "107:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "107:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "106:15:4"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "144:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "143:9:4"
									},
									"scope": 532,
									"src": "82:71:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 533,
							"src": "57:100:4",
							"usedErrors": []
						}
					],
					"src": "32:125:4"
				},
				"id": 4
			},
			"contracts/interface/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							840
						]
					},
					"id": 841,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 534,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 840,
							"linearizedBaseContracts": [
								840
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "69:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "103:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:5"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "136:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:9:5"
									},
									"scope": 840,
									"src": "94:51:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "159:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:5"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "189:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:9:5"
									},
									"scope": 840,
									"src": "150:48:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "213:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "243:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "235:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "267:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "259:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "259:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "288:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "283:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "283:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "317:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "312:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "312:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "346:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "341:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "341:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "371:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "366:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "366:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "399:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "391:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "416:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "411:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "411:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "225:205:5"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "454:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "449:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "449:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "468:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "463:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "463:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "482:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "477:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "477:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:44:5"
									},
									"scope": 840,
									"src": "204:289:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "507:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "540:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "532:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "560:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "555:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "593:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "588:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "588:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "622:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "617:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "617:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "652:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "644:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "669:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "664:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "664:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:161:5"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "715:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "710:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "710:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "733:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "728:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "749:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "744:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "744:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "709:50:5"
									},
									"scope": 840,
									"src": "498:262:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "774:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "807:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "799:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "831:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "823:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "852:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "847:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "847:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "876:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "871:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "871:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "901:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "896:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "896:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "929:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "921:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "946:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "941:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "941:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:171:5"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "984:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "979:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "979:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "998:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "993:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "993:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:28:5"
									},
									"scope": 840,
									"src": "765:242:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "1021:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1057:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1049:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1077:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1072:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1072:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1101:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1096:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1096:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1130:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1125:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1125:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1160:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1152:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1177:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1172:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1172:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:152:5"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1215:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1210:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1210:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1233:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1228:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1228:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1209:34:5"
									},
									"scope": 840,
									"src": "1012:232:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 659,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1258:25:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1301:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1293:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1325:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1317:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1317:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1346:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1341:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1341:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1370:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1365:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1365:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1395:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1390:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1390:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1423:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1415:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1440:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1435:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1435:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1463:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1458:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1458:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1481:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1475:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 647,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1475:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1492:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1484:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 649,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1503:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1495:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 651,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1495:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:227:5"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1534:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1529:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1529:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1548:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1543:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1543:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:28:5"
									},
									"scope": 840,
									"src": "1249:308:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1571:28:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1617:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1609:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1637:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1632:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1632:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1661:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1656:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1656:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1690:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1685:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1685:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1720:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1712:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1737:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1732:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1732:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1760:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1755:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 672,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1755:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1778:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1772:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 674,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1772:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1789:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1781:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 676,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1800:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1792:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 678,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1599:208:5"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1831:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1826:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1826:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1849:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1844:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1844:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1825:34:5"
									},
									"scope": 840,
									"src": "1562:298:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1874:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1913:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1908:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1908:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1936:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1931:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1931:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1977:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1958:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 691,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1958:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 692,
													"nodeType": "ArrayTypeName",
													"src": "1958:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1999:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1991:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1991:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2016:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2011:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2011:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1898:132:5"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2063:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2049:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 699,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2049:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 700,
													"nodeType": "ArrayTypeName",
													"src": "2049:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2048:23:5"
									},
									"scope": 840,
									"src": "1865:207:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2086:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2125:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2120:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2120:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2149:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2144:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2144:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2189:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2170:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 708,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2170:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 709,
													"nodeType": "ArrayTypeName",
													"src": "2170:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2211:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2203:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2228:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2223:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2223:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2110:132:5"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2275:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2261:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 716,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2261:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 717,
													"nodeType": "ArrayTypeName",
													"src": "2261:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2260:23:5"
									},
									"scope": 840,
									"src": "2077:207:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2298:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2325:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "2320:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2320:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2358:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "2339:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 723,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2339:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 724,
													"nodeType": "ArrayTypeName",
													"src": "2339:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2372:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "2364:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2381:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "2376:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2319:71:5"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2455:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "2441:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 731,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2441:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 732,
													"nodeType": "ArrayTypeName",
													"src": "2441:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2440:23:5"
									},
									"scope": 840,
									"src": "2289:175:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2478:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2505:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "2500:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2500:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2521:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "2516:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2516:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2553:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "2534:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 740,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2534:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 741,
													"nodeType": "ArrayTypeName",
													"src": "2534:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2567:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "2559:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2576:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "2571:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2571:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2499:86:5"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2634:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "2620:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 748,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2620:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 749,
													"nodeType": "ArrayTypeName",
													"src": "2620:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2619:23:5"
									},
									"scope": 840,
									"src": "2469:174:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2657:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2684:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "2679:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2679:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2699:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "2694:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2694:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2732:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "2713:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 757,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2713:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 758,
													"nodeType": "ArrayTypeName",
													"src": "2713:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2746:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "2738:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2755:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "2750:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2750:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:86:5"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2813:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "2799:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 765,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2799:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 766,
													"nodeType": "ArrayTypeName",
													"src": "2799:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:23:5"
									},
									"scope": 840,
									"src": "2648:174:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2836:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2863:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "2858:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2858:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2893:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "2874:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 772,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2874:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 773,
													"nodeType": "ArrayTypeName",
													"src": "2874:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2907:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "2899:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2899:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2916:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "2911:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2911:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:68:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2990:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "2976:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 780,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2976:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 781,
													"nodeType": "ArrayTypeName",
													"src": "2976:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2975:23:5"
									},
									"scope": 840,
									"src": "2827:172:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "3014:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "3025:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "3020:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3020:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3039:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "3034:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3034:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3054:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "3049:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3049:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3019:44:5"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "3087:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3087:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3086:14:5"
									},
									"scope": 840,
									"src": "3005:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3115:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3133:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "3128:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3128:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3148:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "3143:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3143:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3164:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "3159:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3159:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3127:48:5"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3204:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "3199:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3199:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3198:16:5"
									},
									"scope": 840,
									"src": "3106:109:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 817,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3229:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3246:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "3241:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3241:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3262:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "3257:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3278:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "3273:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3273:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3240:49:5"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3318:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "3313:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:15:5"
									},
									"scope": 840,
									"src": "3220:108:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3342:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3361:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "3356:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3356:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3390:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "3371:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 820,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3371:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 821,
													"nodeType": "ArrayTypeName",
													"src": "3371:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3355:40:5"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3433:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "3419:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 824,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3419:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 825,
													"nodeType": "ArrayTypeName",
													"src": "3419:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3418:23:5"
									},
									"scope": 840,
									"src": "3333:109:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3456:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3474:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "3469:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3469:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3504:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "3485:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 831,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3485:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 832,
													"nodeType": "ArrayTypeName",
													"src": "3485:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3468:41:5"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3547:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "3533:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 835,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3533:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 836,
													"nodeType": "ArrayTypeName",
													"src": "3533:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:23:5"
									},
									"scope": 840,
									"src": "3447:109:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 841,
							"src": "59:3499:5",
							"usedErrors": []
						}
					],
					"src": "33:3526:5"
				},
				"id": 5
			},
			"contracts/interface/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							840
						],
						"IUniswapV2Router02": [
							928
						]
					},
					"id": 929,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 842,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "contracts/interface/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 843,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 929,
							"sourceUnit": 841,
							"src": "59:34:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 844,
										"name": "IUniswapV2Router01",
										"nameLocations": [
											"127:18:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 840,
										"src": "127:18:6"
									},
									"id": 845,
									"nodeType": "InheritanceSpecifier",
									"src": "127:18:6"
								}
							],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 928,
							"linearizedBaseContracts": [
								928,
								840
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "105:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "161:47:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "226:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "218:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "246:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "241:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "241:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "270:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "265:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "265:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "299:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "294:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "294:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "329:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "321:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "346:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "341:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "341:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "208:152:6"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "384:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "379:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "379:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:16:6"
									},
									"scope": 928,
									"src": "152:243:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 887,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "409:57:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "484:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "476:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "504:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "499:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "499:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "528:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "523:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "523:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "557:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "552:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "552:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "587:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "579:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "604:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "599:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "599:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "627:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "622:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "622:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "645:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "639:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 877,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "656:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "648:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 879,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "667:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "659:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 881,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:208:6"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "698:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "693:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "693:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:16:6"
									},
									"scope": 928,
									"src": "400:309:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 901,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "724:53:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "792:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "787:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "787:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "815:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "810:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "810:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "856:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "837:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 892,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "837:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 893,
													"nodeType": "ArrayTypeName",
													"src": "837:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "878:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "870:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "895:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "890:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "890:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:132:6"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "918:0:6"
									},
									"scope": 928,
									"src": "715:204:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 913,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "933:50:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "998:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "993:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "993:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1039:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "1020:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 904,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1020:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 905,
													"nodeType": "ArrayTypeName",
													"src": "1020:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "1053:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1078:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "1073:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1073:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:109:6"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1109:0:6"
									},
									"scope": 928,
									"src": "924:186:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1124:50:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1189:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1184:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1184:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1212:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1207:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1207:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1253:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1234:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 918,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1234:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 919,
													"nodeType": "ArrayTypeName",
													"src": "1234:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1275:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1267:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1292:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1287:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1287:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:132:6"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1315:0:6"
									},
									"scope": 928,
									"src": "1115:201:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 929,
							"src": "95:1223:6",
							"usedErrors": []
						}
					],
					"src": "33:1286:6"
				},
				"id": 6
			},
			"contracts/lib/Address.sol": {
				"ast": {
					"absolutePath": "contracts/lib/Address.sol",
					"exportedSymbols": {
						"Address": [
							1224
						]
					},
					"id": 1225,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 930,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1224,
							"linearizedBaseContracts": [
								1224
							],
							"name": "Address",
							"nameLocation": "65:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "715:311:7",
										"statements": [
											{
												"assignments": [
													939
												],
												"declarations": [
													{
														"constant": false,
														"id": 939,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "920:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 946,
														"src": "912:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 938,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "912:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 940,
												"nodeType": "VariableDeclarationStatement",
												"src": "912:12:7"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "943:52:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "957:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "977:7:7"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "965:11:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:20:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "957:4:7"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 933,
														"isOffset": false,
														"isSlot": false,
														"src": "977:7:7",
														"valueSize": 1
													},
													{
														"declaration": 939,
														"isOffset": false,
														"isSlot": false,
														"src": "957:4:7",
														"valueSize": 1
													}
												],
												"id": 941,
												"nodeType": "InlineAssembly",
												"src": "934:61:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 942,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "1011:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1018:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1011:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 937,
												"id": 945,
												"nodeType": "Return",
												"src": "1004:15:7"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "79:565:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "658:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "677:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "669:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "668:17:7"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "709:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "709:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:6:7"
									},
									"scope": 1224,
									"src": "649:377:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "2014:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 958,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2040:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1224",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1224",
																				"typeString": "library Address"
																			}
																		],
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2032:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 956,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2032:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2032:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2046:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2032:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 961,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "2057:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2032:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2065:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 955,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2024:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2024:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "2024:73:7"
											},
											{
												"assignments": [
													967,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2114:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 980,
														"src": "2109:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 966,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2109:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 974,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2157:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 968,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "2127:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2137:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2127:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 970,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "2149:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2127:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2127:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2108:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 976,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "2178:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 975,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2170:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2170:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "2170:78:7"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "1032:906:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1952:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1978:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1962:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1962:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1997:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1989:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1961:43:7"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2014:0:7"
									},
									"scope": 1224,
									"src": "1943:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "3086:84:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 992,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "3116:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 993,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "3124:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3130:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 991,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															998,
															1018
														],
														"referencedDeclaration": 1018,
														"src": "3103:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3103:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 990,
												"id": 996,
												"nodeType": "Return",
												"src": "3096:67:7"
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "2261:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3006:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3027:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "3019:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3019:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3048:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "3035:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 985,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3035:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3018:35:7"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "3072:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 988,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3072:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3071:14:7"
									},
									"scope": 1224,
									"src": "2997:173:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "3539:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1011,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "3578:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1012,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "3586:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3592:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1014,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "3595:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1010,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1038,
															1088
														],
														"referencedDeclaration": 1088,
														"src": "3556:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3556:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1009,
												"id": 1016,
												"nodeType": "Return",
												"src": "3549:59:7"
											}
										]
									},
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "3176:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3401:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3431:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3423:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3423:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3460:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3447:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1002,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3447:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3488:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3474:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1004,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3474:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3413:93:7"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3525:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1007,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3525:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3524:14:7"
									},
									"scope": 1224,
									"src": "3392:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "4120:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1031,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "4159:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "4167:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1033,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "4173:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4180:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1030,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1038,
															1088
														],
														"referencedDeclaration": 1088,
														"src": "4137:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4137:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1029,
												"id": 1036,
												"nodeType": "Return",
												"src": "4130:94:7"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "3621:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3986:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4025:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "4017:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4054:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "4041:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1022,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4041:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4076:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "4068:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4068:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:80:7"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "4106:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4106:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4105:14:7"
									},
									"scope": 1224,
									"src": "3977:254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "4658:320:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1055,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4684:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1224",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1224",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4676:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1053,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4676:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4676:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4690:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4676:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1058,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "4701:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4676:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4708:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1052,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4668:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4668:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "4668:81:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1065,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "4778:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1064,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "4767:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4767:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4787:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1063,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4759:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "4759:60:7"
											},
											{
												"assignments": [
													1071,
													1073
												],
												"declarations": [
													{
														"constant": false,
														"id": 1071,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4836:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1087,
														"src": "4831:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1070,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4831:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1073,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4858:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1087,
														"src": "4845:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1072,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4845:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1080,
												"initialValue": {
													"arguments": [
														{
															"id": 1078,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "4898:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1074,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "4872:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4879:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4872:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1076,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "4891:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4872:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4872:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4830:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1082,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "4937:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1083,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "4946:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1084,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "4958:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1081,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "4920:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4920:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1051,
												"id": 1086,
												"nodeType": "Return",
												"src": "4913:58:7"
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "4237:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4488:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4527:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4519:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4519:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4556:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4543:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1042,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4543:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4578:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4570:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4570:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4607:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4593:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1046,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4593:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4509:116:7"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4644:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1049,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4644:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4643:14:7"
									},
									"scope": 1224,
									"src": "4479:499:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "5255:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1099,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "5291:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1100,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "5299:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5305:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1098,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1105,
															1140
														],
														"referencedDeclaration": 1140,
														"src": "5272:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5272:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1097,
												"id": 1103,
												"nodeType": "Return",
												"src": "5265:80:7"
											}
										]
									},
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "4984:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5164:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5191:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "5183:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "5199:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5182:35:7"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "5241:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1095,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5241:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5240:14:7"
									},
									"scope": 1224,
									"src": "5155:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "5694:228:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1119,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "5723:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1118,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "5712:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5712:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5732:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5704:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5704:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "5704:67:7"
											},
											{
												"assignments": [
													1125,
													1127
												],
												"declarations": [
													{
														"constant": false,
														"id": 1125,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5788:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1139,
														"src": "5783:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1124,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5783:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1127,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5810:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1139,
														"src": "5797:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1126,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5797:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1132,
												"initialValue": {
													"arguments": [
														{
															"id": 1130,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "5842:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1128,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "5824:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5831:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5824:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5824:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5782:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1134,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "5881:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1135,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "5890:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1136,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "5902:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1133,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "5864:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5864:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1116,
												"id": 1138,
												"nodeType": "Return",
												"src": "5857:58:7"
											}
										]
									},
									"documentation": {
										"id": 1106,
										"nodeType": "StructuredDocumentation",
										"src": "5358:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5545:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5581:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "5573:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5573:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5610:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "5597:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1109,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5597:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5638:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "5624:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1111,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5624:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5563:93:7"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "5680:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5680:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5679:14:7"
									},
									"scope": 1224,
									"src": "5536:386:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "6198:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1151,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "6236:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1152,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "6244:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6250:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1150,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1157,
															1192
														],
														"referencedDeclaration": 1192,
														"src": "6215:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6215:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1149,
												"id": 1155,
												"nodeType": "Return",
												"src": "6208:84:7"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "5928:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6110:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6139:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "6131:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6131:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6160:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "6147:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1144,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6147:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6130:35:7"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "6184:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1147,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6184:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6183:14:7"
									},
									"scope": 1224,
									"src": "6101:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "6640:232:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1171,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "6669:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1170,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "6658:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6658:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6678:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6650:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6650:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "6650:69:7"
											},
											{
												"assignments": [
													1177,
													1179
												],
												"declarations": [
													{
														"constant": false,
														"id": 1177,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6736:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "6731:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1176,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6731:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1179,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6758:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "6745:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1178,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6745:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1184,
												"initialValue": {
													"arguments": [
														{
															"id": 1182,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "6792:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1180,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "6772:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6779:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6772:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6730:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1186,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "6831:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1187,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "6840:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1188,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "6852:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1185,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "6814:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6814:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1190,
												"nodeType": "Return",
												"src": "6807:58:7"
											}
										]
									},
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "6305:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6494:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6532:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "6524:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6524:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6561:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "6548:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6548:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6589:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "6575:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6575:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6514:93:7"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "6626:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1166,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6626:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6625:14:7"
									},
									"scope": 1224,
									"src": "6485:387:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "7252:532:7",
										"statements": [
											{
												"condition": {
													"id": 1204,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1195,
													"src": "7266:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1220,
													"nodeType": "Block",
													"src": "7323:455:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1208,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "7407:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7418:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7407:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7427:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7407:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1218,
																"nodeType": "Block",
																"src": "7715:53:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1215,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1199,
																					"src": "7740:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1214,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7733:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7733:20:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1217,
																		"nodeType": "ExpressionStatement",
																		"src": "7733:20:7"
																	}
																]
															},
															"id": 1219,
															"nodeType": "IfStatement",
															"src": "7403:365:7",
															"trueBody": {
																"id": 1213,
																"nodeType": "Block",
																"src": "7430:279:7",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7550:145:7",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7572:40:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7601:10:7"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7595:5:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7595:17:7"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7576:15:7",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7644:2:7",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7648:10:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7640:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7640:19:7"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7661:15:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7633:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7633:44:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7633:44:7"
																				}
																			]
																		},
																		"evmVersion": "paris",
																		"externalReferences": [
																			{
																				"declaration": 1197,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7601:10:7",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1197,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7648:10:7",
																				"valueSize": 1
																			}
																		],
																		"id": 1212,
																		"nodeType": "InlineAssembly",
																		"src": "7541:154:7"
																	}
																]
															}
														}
													]
												},
												"id": 1221,
												"nodeType": "IfStatement",
												"src": "7262:516:7",
												"trueBody": {
													"id": 1207,
													"nodeType": "Block",
													"src": "7275:42:7",
													"statements": [
														{
															"expression": {
																"id": 1205,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "7296:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1203,
															"id": 1206,
															"nodeType": "Return",
															"src": "7289:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "6878:209:7",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7101:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7132:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "7127:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7127:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7162:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "7149:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1196,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7149:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7196:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "7182:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7182:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7117:97:7"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "7238:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1201,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7238:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7237:14:7"
									},
									"scope": 1224,
									"src": "7092:692:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1225,
							"src": "57:7729:7",
							"usedErrors": []
						}
					],
					"src": "33:7753:7"
				},
				"id": 7
			}
		}
	}
}